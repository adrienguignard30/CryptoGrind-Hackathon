{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Adrien\\\\Desktop\\\\CryptoGrind - Copie\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { WagmiProvider, createConfig } from 'wagmi';\nimport { useAccount } from 'wagmi';\nimport { createPublicClient, http } from 'viem';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query';\nimport { injected, walletConnect } from '@wagmi/connectors';\nimport Header from './components/Header';\nimport Home from './pages/Home';\nimport Notifications from './pages/Notifications';\nimport Profile from './pages/Profile';\nimport Missions from './pages/Missions';\nimport NotificationWen from './components/NotificationWen';\nimport AddProject from './components/AddProject';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst abstractTestnet = {\n  id: 11124,\n  name: 'Abstract Testnet',\n  network: 'abstract-testnet',\n  nativeCurrency: {\n    name: 'Ether',\n    symbol: 'ETH',\n    decimals: 18\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://api.testnet.abs.xyz']\n    },\n    public: {\n      http: ['https://api.testnet.abs.xyz']\n    }\n  },\n  blockExplorers: {\n    default: {\n      name: 'AbstractScan',\n      url: 'https://sepolia.abscan.org'\n    }\n  },\n  testnet: true\n};\nconst queryClient = new QueryClient();\nconst config = createConfig({\n  chains: [abstractTestnet],\n  connectors: [injected({\n    target: 'metaMask'\n  }), walletConnect({\n    projectId: '2471fc52b74931df68f43e44f96078b0',\n    metadata: {\n      name: 'CryptoGrind',\n      description: 'CryptoGrind DApp',\n      url: 'http://localhost:3001',\n      icons: ['https://your-app-url.com/icon.png']\n    }\n  })],\n  client: ({\n    chain\n  }) => createPublicClient({\n    chain,\n    transport: http()\n  })\n});\nexport const GrindContext = /*#__PURE__*/React.createContext();\nfunction AppContent() {\n  _s();\n  const [grindBalance, setGrindBalance] = useState(0);\n  const [account, setAccount] = useState(null);\n  const [projects, setProjects] = useState([]);\n  const {\n    address,\n    isConnected\n  } = useAccount();\n  useEffect(() => {\n    if (isConnected && address) {\n      console.log('Mise à jour account:', address);\n      setAccount(address.toLowerCase());\n    } else {\n      console.log('Aucun account connecté');\n      setAccount(null);\n    }\n  }, [address, isConnected]);\n  useEffect(() => {\n    if (account) {\n      const checkBalanceManually = async () => {\n        try {\n          const client = createPublicClient({\n            chain: abstractTestnet,\n            transport: http()\n          });\n          const balance = await client.getBalance({\n            address: account\n          });\n          setGrindBalance(balance.toString());\n        } catch (error) {\n          console.error('Erreur requête manuelle solde:', error);\n        }\n      };\n      checkBalanceManually();\n    }\n  }, [account]);\n  useEffect(() => {\n    if (account) {\n      const savedProjects = localStorage.getItem(`projects_${account}`);\n      console.log('Chargement projets depuis localStorage:', savedProjects);\n      setProjects(savedProjects ? JSON.parse(savedProjects) : []);\n    }\n  }, [account]);\n  useEffect(() => {\n    if (account && projects.length > 0) {\n      console.log('Sauvegarde projets dans localStorage:', projects);\n      localStorage.setItem(`projects_${account}`, JSON.stringify(projects));\n    }\n  }, [projects, account]);\n  const handleAddProject = project => {\n    setProjects(prevProjects => [...prevProjects, project]);\n  };\n  return /*#__PURE__*/_jsxDEV(GrindContext.Provider, {\n    value: {\n      grindBalance,\n      account,\n      setAccount,\n      setGrindBalance\n    },\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Home, {\n            projects: projects,\n            setProjects: setProjects,\n            handleAddProject: handleAddProject\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/notifications\",\n          element: /*#__PURE__*/_jsxDEV(Notifications, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 49\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/profile\",\n          element: /*#__PURE__*/_jsxDEV(Profile, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 43\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/missions\",\n          element: /*#__PURE__*/_jsxDEV(Missions, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 44\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/lottery\",\n          element: /*#__PURE__*/_jsxDEV(NotificationWen, {\n            projects: projects\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 43\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/add-project\",\n          element: /*#__PURE__*/_jsxDEV(AddProject, {\n            onAddProject: handleAddProject\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 47\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n}\n_s(AppContent, \"T3EpIWwqy8iJJ1MnQnDXctn9xCE=\", false, function () {\n  return [useAccount];\n});\n_c = AppContent;\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(WagmiProvider, {\n    config: config,\n    children: /*#__PURE__*/_jsxDEV(QueryClientProvider, {\n      client: queryClient,\n      children: /*#__PURE__*/_jsxDEV(AppContent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 5\n  }, this);\n}\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"AppContent\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","useEffect","WagmiProvider","createConfig","useAccount","createPublicClient","http","BrowserRouter","Router","Routes","Route","QueryClient","QueryClientProvider","injected","walletConnect","Header","Home","Notifications","Profile","Missions","NotificationWen","AddProject","jsxDEV","_jsxDEV","abstractTestnet","id","name","network","nativeCurrency","symbol","decimals","rpcUrls","default","public","blockExplorers","url","testnet","queryClient","config","chains","connectors","target","projectId","metadata","description","icons","client","chain","transport","GrindContext","createContext","AppContent","_s","grindBalance","setGrindBalance","account","setAccount","projects","setProjects","address","isConnected","console","log","toLowerCase","checkBalanceManually","balance","getBalance","toString","error","savedProjects","localStorage","getItem","JSON","parse","length","setItem","stringify","handleAddProject","project","prevProjects","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","path","element","onAddProject","_c","App","_c2","$RefreshReg$"],"sources":["C:/Users/Adrien/Desktop/CryptoGrind - Copie/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { WagmiProvider, createConfig } from 'wagmi';\r\nimport { useAccount } from 'wagmi';\r\nimport { createPublicClient, http } from 'viem';\r\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\r\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query';\r\nimport { injected, walletConnect } from '@wagmi/connectors';\r\nimport Header from './components/Header';\r\nimport Home from './pages/Home';\r\nimport Notifications from './pages/Notifications';\r\nimport Profile from './pages/Profile';\r\nimport Missions from './pages/Missions';\r\nimport NotificationWen from './components/NotificationWen';\r\nimport AddProject from './components/AddProject';\r\n\r\nconst abstractTestnet = {\r\n  id: 11124,\r\n  name: 'Abstract Testnet',\r\n  network: 'abstract-testnet',\r\n  nativeCurrency: {\r\n    name: 'Ether',\r\n    symbol: 'ETH',\r\n    decimals: 18,\r\n  },\r\n  rpcUrls: {\r\n    default: {\r\n      http: ['https://api.testnet.abs.xyz'],\r\n    },\r\n    public: {\r\n      http: ['https://api.testnet.abs.xyz'],\r\n    },\r\n  },\r\n  blockExplorers: {\r\n    default: { name: 'AbstractScan', url: 'https://sepolia.abscan.org' },\r\n  },\r\n  testnet: true,\r\n};\r\n\r\nconst queryClient = new QueryClient();\r\n\r\nconst config = createConfig({\r\n  chains: [abstractTestnet],\r\n  connectors: [\r\n    injected({ target: 'metaMask' }),\r\n    walletConnect({\r\n      projectId: '2471fc52b74931df68f43e44f96078b0',\r\n      metadata: {\r\n        name: 'CryptoGrind',\r\n        description: 'CryptoGrind DApp',\r\n        url: 'http://localhost:3001',\r\n        icons: ['https://your-app-url.com/icon.png'],\r\n      },\r\n    }),\r\n  ],\r\n  client: ({ chain }) =>\r\n    createPublicClient({\r\n      chain,\r\n      transport: http(),\r\n    }),\r\n});\r\n\r\nexport const GrindContext = React.createContext();\r\n\r\nfunction AppContent() {\r\n  const [grindBalance, setGrindBalance] = useState(0);\r\n  const [account, setAccount] = useState(null);\r\n  const [projects, setProjects] = useState([]);\r\n  const { address, isConnected } = useAccount();\r\n\r\n  useEffect(() => {\r\n    if (isConnected && address) {\r\n      console.log('Mise à jour account:', address);\r\n      setAccount(address.toLowerCase());\r\n    } else {\r\n      console.log('Aucun account connecté');\r\n      setAccount(null);\r\n    }\r\n  }, [address, isConnected]);\r\n\r\n  useEffect(() => {\r\n    if (account) {\r\n      const checkBalanceManually = async () => {\r\n        try {\r\n          const client = createPublicClient({\r\n            chain: abstractTestnet,\r\n            transport: http(),\r\n          });\r\n          const balance = await client.getBalance({ address: account });\r\n          setGrindBalance(balance.toString());\r\n        } catch (error) {\r\n          console.error('Erreur requête manuelle solde:', error);\r\n        }\r\n      };\r\n      checkBalanceManually();\r\n    }\r\n  }, [account]);\r\n\r\n  useEffect(() => {\r\n    if (account) {\r\n      const savedProjects = localStorage.getItem(`projects_${account}`);\r\n      console.log('Chargement projets depuis localStorage:', savedProjects);\r\n      setProjects(savedProjects ? JSON.parse(savedProjects) : []);\r\n    }\r\n  }, [account]);\r\n\r\n  useEffect(() => {\r\n    if (account && projects.length > 0) {\r\n      console.log('Sauvegarde projets dans localStorage:', projects);\r\n      localStorage.setItem(`projects_${account}`, JSON.stringify(projects));\r\n    }\r\n  }, [projects, account]);\r\n\r\n  const handleAddProject = (project) => {\r\n    setProjects((prevProjects) => [...prevProjects, project]);\r\n  };\r\n\r\n  return (\r\n    <GrindContext.Provider value={{ grindBalance, account, setAccount, setGrindBalance }}>\r\n      <Router>\r\n        <Header />\r\n        <Routes>\r\n          <Route\r\n            path=\"/\"\r\n            element={\r\n              <Home\r\n                projects={projects}\r\n                setProjects={setProjects}\r\n                handleAddProject={handleAddProject}\r\n              />\r\n            }\r\n          />\r\n          <Route path=\"/notifications\" element={<Notifications />} />\r\n          <Route path=\"/profile\" element={<Profile />} />\r\n          <Route path=\"/missions\" element={<Missions />} />\r\n          <Route path=\"/lottery\" element={<NotificationWen projects={projects} />} />\r\n          <Route path=\"/add-project\" element={<AddProject onAddProject={handleAddProject} />} />\r\n        </Routes>\r\n      </Router>\r\n    </GrindContext.Provider>\r\n  );\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n    <WagmiProvider config={config}>\r\n      <QueryClientProvider client={queryClient}>\r\n        <AppContent />\r\n      </QueryClientProvider>\r\n    </WagmiProvider>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}