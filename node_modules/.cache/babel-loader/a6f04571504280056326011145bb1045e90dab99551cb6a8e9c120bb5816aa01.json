{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Adrien\\\\Desktop\\\\CryptoGrind - Copie\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { WagmiConfig, createConfig, useAccount, useConnect, useDisconnect } from 'wagmi';\nimport { createPublicClient, http } from 'viem';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query';\nimport { injected, walletConnect } from '@wagmi/connectors';\nimport Header from './components/Header';\nimport Home from './pages/Home';\nimport Notifications from './pages/Notifications';\nimport Profile from './pages/Profile';\nimport Missions from './pages/Missions';\nimport NotificationWen from './components/NotificationWen';\nimport AddProject from './components/AddProject';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst abstractTestnet = {\n  id: 11124,\n  name: 'Abstract Testnet',\n  network: 'abstract-testnet',\n  nativeCurrency: {\n    name: 'Ether',\n    symbol: 'ETH',\n    decimals: 18\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://api.testnet.abs.xyz']\n    },\n    public: {\n      http: ['https://api.testnet.abs.xyz']\n    }\n  },\n  blockExplorers: {\n    default: {\n      name: 'AbstractScan',\n      url: 'https://sepolia.abscan.org'\n    }\n  },\n  testnet: true\n};\nconst queryClient = new QueryClient();\nconst config = createConfig({\n  chains: [abstractTestnet],\n  connectors: [injected({\n    target: 'metaMask'\n  }),\n  // MetaMask\n  walletConnect({\n    projectId: '2471fc52b74931df68f43e44f96078b0'\n  }) // Ton projectId\n  ],\n  client: ({\n    chain\n  }) => createPublicClient({\n    chain,\n    transport: http()\n  })\n});\nexport const GrindContext = /*#__PURE__*/React.createContext();\nfunction App() {\n  _s();\n  const [grindBalance, setGrindBalance] = useState(0);\n  const [account, setAccount] = useState(null);\n  const [projects, setProjects] = useState([]);\n  const {\n    address,\n    isConnected\n  } = useAccount();\n  const {\n    connect,\n    connectors,\n    error: connectError,\n    isLoading\n  } = useConnect();\n  const {\n    disconnect\n  } = useDisconnect();\n\n  // Synchroniser l'adresse wagmi avec l'état local\n  useEffect(() => {\n    if (isConnected && address) {\n      const normalizedAccount = address.toLowerCase();\n      console.log('Compte connecté via wagmi:', normalizedAccount);\n      setAccount(normalizedAccount);\n    } else {\n      console.log('Aucun compte connecté');\n      setAccount(null);\n    }\n  }, [address, isConnected]);\n\n  // Récupérer le solde ETH manuellement\n  useEffect(() => {\n    if (account) {\n      const checkBalanceManually = async () => {\n        try {\n          const client = createPublicClient({\n            chain: abstractTestnet,\n            transport: http()\n          });\n          const balance = await client.getBalance({\n            address: account\n          });\n          console.log('Solde manuel ETH:', balance.toString(), 'wei');\n          console.log('Solde manuel ETH (formatté):', Number(balance) / 1e18, 'ETH');\n          setGrindBalance(balance.toString()); // Solde en wei\n        } catch (error) {\n          console.error('Erreur requête manuelle solde:', error);\n        }\n      };\n      checkBalanceManually();\n    }\n  }, [account]);\n\n  // Charger les projets depuis localStorage\n  useEffect(() => {\n    if (account) {\n      const savedProjects = localStorage.getItem(`projects_${account}`);\n      console.log('Chargement projets depuis localStorage:', savedProjects);\n      setProjects(savedProjects ? JSON.parse(savedProjects) : []);\n    } else {\n      setProjects([]);\n      console.log('Aucun account, réinitialisation projets');\n    }\n  }, [account]);\n\n  // Synchroniser localStorage avec l'état projects\n  useEffect(() => {\n    if (account) {\n      console.log('Sauvegarde projets dans localStorage:', projects);\n      localStorage.setItem(`projects_${account}`, JSON.stringify(projects));\n    }\n  }, [projects, account]);\n  const handleAddProject = project => {\n    setProjects(prevProjects => {\n      const updatedProjects = [...prevProjects, project];\n      console.log('Nouveau projet ajouté:', project);\n      return updatedProjects;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(WagmiConfig, {\n    config: config,\n    children: /*#__PURE__*/_jsxDEV(QueryClientProvider, {\n      client: queryClient,\n      children: /*#__PURE__*/_jsxDEV(GrindContext.Provider, {\n        value: {\n          grindBalance,\n          account\n        },\n        children: /*#__PURE__*/_jsxDEV(Router, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-4\",\n            children: isConnected ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Connect\\xE9 : \", account]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => disconnect(),\n                className: \"bg-red-600 text-white px-4 py-2 rounded-lg hover:bg-red-700\",\n                children: \"D\\xE9connexion\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [connectors.map(connector => /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => connect({\n                  connector\n                }),\n                disabled: !connector.ready || isLoading,\n                className: \"bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 mr-2\",\n                children: isLoading ? 'Connexion...' : `Connecter via ${connector.name}`\n              }, connector.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 21\n              }, this)), connectError && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-red-600\",\n                children: connectError.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 36\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Routes, {\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              path: \"/\",\n              element: /*#__PURE__*/_jsxDEV(Home, {\n                projects: projects,\n                setProjects: setProjects,\n                handleAddProject: handleAddProject\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/notifications\",\n              element: /*#__PURE__*/_jsxDEV(Notifications, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 53\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/profile\",\n              element: /*#__PURE__*/_jsxDEV(Profile, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 47\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/missions\",\n              element: /*#__PURE__*/_jsxDEV(Missions, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 48\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/lottery\",\n              element: /*#__PURE__*/_jsxDEV(NotificationWen, {\n                projects: projects\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 47\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/add-project\",\n              element: /*#__PURE__*/_jsxDEV(AddProject, {\n                onAddProject: handleAddProject\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 51\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"mYnml0wJabRiVQlKeH4yxqdysRs=\", false, function () {\n  return [useAccount, useConnect, useDisconnect];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","WagmiConfig","createConfig","useAccount","useConnect","useDisconnect","createPublicClient","http","BrowserRouter","Router","Routes","Route","QueryClient","QueryClientProvider","injected","walletConnect","Header","Home","Notifications","Profile","Missions","NotificationWen","AddProject","jsxDEV","_jsxDEV","abstractTestnet","id","name","network","nativeCurrency","symbol","decimals","rpcUrls","default","public","blockExplorers","url","testnet","queryClient","config","chains","connectors","target","projectId","client","chain","transport","GrindContext","createContext","App","_s","grindBalance","setGrindBalance","account","setAccount","projects","setProjects","address","isConnected","connect","error","connectError","isLoading","disconnect","normalizedAccount","toLowerCase","console","log","checkBalanceManually","balance","getBalance","toString","Number","savedProjects","localStorage","getItem","JSON","parse","setItem","stringify","handleAddProject","project","prevProjects","updatedProjects","children","Provider","value","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","connector","disabled","ready","message","path","element","onAddProject","_c","$RefreshReg$"],"sources":["C:/Users/Adrien/Desktop/CryptoGrind - Copie/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { WagmiConfig, createConfig, useAccount, useConnect, useDisconnect } from 'wagmi';\r\nimport { createPublicClient, http } from 'viem';\r\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\r\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query';\r\nimport { injected, walletConnect } from '@wagmi/connectors';\r\nimport Header from './components/Header';\r\nimport Home from './pages/Home';\r\nimport Notifications from './pages/Notifications';\r\nimport Profile from './pages/Profile';\r\nimport Missions from './pages/Missions';\r\nimport NotificationWen from './components/NotificationWen';\r\nimport AddProject from './components/AddProject';\r\n\r\nconst abstractTestnet = {\r\n  id: 11124,\r\n  name: 'Abstract Testnet',\r\n  network: 'abstract-testnet',\r\n  nativeCurrency: {\r\n    name: 'Ether',\r\n    symbol: 'ETH',\r\n    decimals: 18,\r\n  },\r\n  rpcUrls: {\r\n    default: {\r\n      http: ['https://api.testnet.abs.xyz'],\r\n    },\r\n    public: {\r\n      http: ['https://api.testnet.abs.xyz'],\r\n    },\r\n  },\r\n  blockExplorers: {\r\n    default: { name: 'AbstractScan', url: 'https://sepolia.abscan.org' },\r\n  },\r\n  testnet: true,\r\n};\r\n\r\nconst queryClient = new QueryClient();\r\n\r\nconst config = createConfig({\r\n  chains: [abstractTestnet],\r\n  connectors: [\r\n    injected({ target: 'metaMask' }), // MetaMask\r\n    walletConnect({ projectId: '2471fc52b74931df68f43e44f96078b0' }), // Ton projectId\r\n  ],\r\n  client: ({ chain }) =>\r\n    createPublicClient({\r\n      chain,\r\n      transport: http(),\r\n    }),\r\n});\r\n\r\nexport const GrindContext = React.createContext();\r\n\r\nfunction App() {\r\n  const [grindBalance, setGrindBalance] = useState(0);\r\n  const [account, setAccount] = useState(null);\r\n  const [projects, setProjects] = useState([]);\r\n  const { address, isConnected } = useAccount();\r\n  const { connect, connectors, error: connectError, isLoading } = useConnect();\r\n  const { disconnect } = useDisconnect();\r\n\r\n  // Synchroniser l'adresse wagmi avec l'état local\r\n  useEffect(() => {\r\n    if (isConnected && address) {\r\n      const normalizedAccount = address.toLowerCase();\r\n      console.log('Compte connecté via wagmi:', normalizedAccount);\r\n      setAccount(normalizedAccount);\r\n    } else {\r\n      console.log('Aucun compte connecté');\r\n      setAccount(null);\r\n    }\r\n  }, [address, isConnected]);\r\n\r\n  // Récupérer le solde ETH manuellement\r\n  useEffect(() => {\r\n    if (account) {\r\n      const checkBalanceManually = async () => {\r\n        try {\r\n          const client = createPublicClient({\r\n            chain: abstractTestnet,\r\n            transport: http(),\r\n          });\r\n          const balance = await client.getBalance({ address: account });\r\n          console.log('Solde manuel ETH:', balance.toString(), 'wei');\r\n          console.log('Solde manuel ETH (formatté):', Number(balance) / 1e18, 'ETH');\r\n          setGrindBalance(balance.toString()); // Solde en wei\r\n        } catch (error) {\r\n          console.error('Erreur requête manuelle solde:', error);\r\n        }\r\n      };\r\n      checkBalanceManually();\r\n    }\r\n  }, [account]);\r\n\r\n  // Charger les projets depuis localStorage\r\n  useEffect(() => {\r\n    if (account) {\r\n      const savedProjects = localStorage.getItem(`projects_${account}`);\r\n      console.log('Chargement projets depuis localStorage:', savedProjects);\r\n      setProjects(savedProjects ? JSON.parse(savedProjects) : []);\r\n    } else {\r\n      setProjects([]);\r\n      console.log('Aucun account, réinitialisation projets');\r\n    }\r\n  }, [account]);\r\n\r\n  // Synchroniser localStorage avec l'état projects\r\n  useEffect(() => {\r\n    if (account) {\r\n      console.log('Sauvegarde projets dans localStorage:', projects);\r\n      localStorage.setItem(`projects_${account}`, JSON.stringify(projects));\r\n    }\r\n  }, [projects, account]);\r\n\r\n  const handleAddProject = (project) => {\r\n    setProjects((prevProjects) => {\r\n      const updatedProjects = [...prevProjects, project];\r\n      console.log('Nouveau projet ajouté:', project);\r\n      return updatedProjects;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <WagmiConfig config={config}>\r\n      <QueryClientProvider client={queryClient}>\r\n        <GrindContext.Provider value={{ grindBalance, account }}>\r\n          <Router>\r\n            <div className=\"p-4\">\r\n              {isConnected ? (\r\n                <div>\r\n                  <p>Connecté : {account}</p>\r\n                  <button\r\n                    onClick={() => disconnect()}\r\n                    className=\"bg-red-600 text-white px-4 py-2 rounded-lg hover:bg-red-700\"\r\n                  >\r\n                    Déconnexion\r\n                  </button>\r\n                </div>\r\n              ) : (\r\n                <div>\r\n                  {connectors.map((connector) => (\r\n                    <button\r\n                      key={connector.id}\r\n                      onClick={() => connect({ connector })}\r\n                      disabled={!connector.ready || isLoading}\r\n                      className=\"bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 mr-2\"\r\n                    >\r\n                      {isLoading ? 'Connexion...' : `Connecter via ${connector.name}`}\r\n                    </button>\r\n                  ))}\r\n                  {connectError && <p className=\"text-red-600\">{connectError.message}</p>}\r\n                </div>\r\n              )}\r\n            </div>\r\n            <Header />\r\n            <Routes>\r\n              <Route\r\n                path=\"/\"\r\n                element={\r\n                  <Home\r\n                    projects={projects}\r\n                    setProjects={setProjects}\r\n                    handleAddProject={handleAddProject}\r\n                  />\r\n                }\r\n              />\r\n              <Route path=\"/notifications\" element={<Notifications />} />\r\n              <Route path=\"/profile\" element={<Profile />} />\r\n              <Route path=\"/missions\" element={<Missions />} />\r\n              <Route path=\"/lottery\" element={<NotificationWen projects={projects} />} />\r\n              <Route path=\"/add-project\" element={<AddProject onAddProject={handleAddProject} />} />\r\n            </Routes>\r\n          </Router>\r\n        </GrindContext.Provider>\r\n      </QueryClientProvider>\r\n    </WagmiConfig>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}