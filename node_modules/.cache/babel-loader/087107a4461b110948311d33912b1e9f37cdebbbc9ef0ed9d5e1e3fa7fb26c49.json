{"ast":null,"code":"import { SCWSigner } from './scw/SCWSigner.js';\nimport { WalletLinkSigner } from './walletlink/WalletLinkSigner.js';\nimport { ScopedLocalStorage } from '../core/storage/ScopedLocalStorage.js';\nconst SIGNER_TYPE_KEY = 'SignerType';\nconst storage = new ScopedLocalStorage('CBWSDK', 'SignerConfigurator');\nexport function loadSignerType() {\n  return storage.getItem(SIGNER_TYPE_KEY);\n}\nexport function storeSignerType(signerType) {\n  storage.setItem(SIGNER_TYPE_KEY, signerType);\n}\nexport async function fetchSignerType(params) {\n  const {\n    communicator,\n    metadata,\n    handshakeRequest,\n    callback\n  } = params;\n  listenForWalletLinkSessionRequest(communicator, metadata, callback).catch(() => {});\n  const request = {\n    id: crypto.randomUUID(),\n    event: 'selectSignerType',\n    data: Object.assign(Object.assign({}, params.preference), {\n      handshakeRequest\n    })\n  };\n  const {\n    data\n  } = await communicator.postRequestAndWaitForResponse(request);\n  return data;\n}\nexport function createSigner(params) {\n  const {\n    signerType,\n    metadata,\n    communicator,\n    callback\n  } = params;\n  switch (signerType) {\n    case 'scw':\n      {\n        return new SCWSigner({\n          metadata,\n          callback,\n          communicator\n        });\n      }\n    case 'walletlink':\n      {\n        return new WalletLinkSigner({\n          metadata,\n          callback\n        });\n      }\n  }\n}\nasync function listenForWalletLinkSessionRequest(communicator, metadata, callback) {\n  await communicator.onMessage(({\n    event\n  }) => event === 'WalletLinkSessionRequest');\n  // temporary walletlink signer instance to handle WalletLinkSessionRequest\n  // will revisit this when refactoring the walletlink signer\n  const walletlink = new WalletLinkSigner({\n    metadata,\n    callback\n  });\n  // send wallet link session to popup\n  communicator.postMessage({\n    event: 'WalletLinkUpdate',\n    data: {\n      session: walletlink.getSession()\n    }\n  });\n  // wait for handshake to complete\n  await walletlink.handshake();\n  // send connected status to popup\n  communicator.postMessage({\n    event: 'WalletLinkUpdate',\n    data: {\n      connected: true\n    }\n  });\n}","map":{"version":3,"names":["SCWSigner","WalletLinkSigner","ScopedLocalStorage","SIGNER_TYPE_KEY","storage","loadSignerType","getItem","storeSignerType","signerType","setItem","fetchSignerType","params","communicator","metadata","handshakeRequest","callback","listenForWalletLinkSessionRequest","catch","request","id","crypto","randomUUID","event","data","Object","assign","preference","postRequestAndWaitForResponse","createSigner","onMessage","walletlink","postMessage","session","getSession","handshake","connected"],"sources":["../../src/sign/util.ts"],"sourcesContent":[null],"mappings":"AACA,SAASA,SAAS,QAAQ,oBAAoB;AAC9C,SAASC,gBAAgB,QAAQ,kCAAkC;AAUnE,SAASC,kBAAkB,QAAQ,uCAAsC;AAEzE,MAAMC,eAAe,GAAG,YAAY;AACpC,MAAMC,OAAO,GAAG,IAAIF,kBAAkB,CAAC,QAAQ,EAAE,oBAAoB,CAAC;AAEtE,OAAM,SAAUG,cAAcA,CAAA;EAC5B,OAAOD,OAAO,CAACE,OAAO,CAACH,eAAe,CAAe;AACvD;AAEA,OAAM,SAAUI,eAAeA,CAACC,UAAsB;EACpDJ,OAAO,CAACK,OAAO,CAACN,eAAe,EAAEK,UAAU,CAAC;AAC9C;AAEA,OAAO,eAAeE,eAAeA,CAACC,MAMrC;EACC,MAAM;IAAEC,YAAY;IAAEC,QAAQ;IAAEC,gBAAgB;IAAEC;EAAQ,CAAE,GAAGJ,MAAM;EACrEK,iCAAiC,CAACJ,YAAY,EAAEC,QAAQ,EAAEE,QAAQ,CAAC,CAACE,KAAK,CAAC,MAAK,CAAE,CAAC,CAAC;EAEnF,MAAMC,OAAO,GAAsC;IACjDC,EAAE,EAAEC,MAAM,CAACC,UAAU,EAAE;IACvBC,KAAK,EAAE,kBAAkB;IACzBC,IAAI,EAAAC,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KACCd,MAAM,CAACe,UAAU;MACpBZ;IAAgB;GAEnB;EACD,MAAM;IAAES;EAAI,CAAE,GAAG,MAAMX,YAAY,CAACe,6BAA6B,CAACT,OAAO,CAAC;EAC1E,OAAOK,IAAkB;AAC3B;AAEA,OAAM,SAAUK,YAAYA,CAACjB,MAK5B;EACC,MAAM;IAAEH,UAAU;IAAEK,QAAQ;IAAED,YAAY;IAAEG;EAAQ,CAAE,GAAGJ,MAAM;EAC/D,QAAQH,UAAU;IAChB,KAAK,KAAK;MAAE;QACV,OAAO,IAAIR,SAAS,CAAC;UACnBa,QAAQ;UACRE,QAAQ;UACRH;SACD,CAAC;MACJ;IACA,KAAK,YAAY;MAAE;QACjB,OAAO,IAAIX,gBAAgB,CAAC;UAC1BY,QAAQ;UACRE;SACD,CAAC;MACJ;EACF;AACF;AAEA,eAAeC,iCAAiCA,CAC9CJ,YAA0B,EAC1BC,QAAqB,EACrBE,QAA+B;EAE/B,MAAMH,YAAY,CAACiB,SAAS,CAAgB,CAAC;IAAEP;EAAK,CAAE,KAAKA,KAAK,KAAK,0BAA0B,CAAC;EAEhG;EACA;EACA,MAAMQ,UAAU,GAAG,IAAI7B,gBAAgB,CAAC;IACtCY,QAAQ;IACRE;GACD,CAAC;EAEF;EACAH,YAAY,CAACmB,WAAW,CAAC;IACvBT,KAAK,EAAE,kBAAkB;IACzBC,IAAI,EAAE;MAAES,OAAO,EAAEF,UAAU,CAACG,UAAU;IAAE;GACxB,CAAC;EAEnB;EACA,MAAMH,UAAU,CAACI,SAAS,EAAE;EAE5B;EACAtB,YAAY,CAACmB,WAAW,CAAC;IACvBT,KAAK,EAAE,kBAAkB;IACzBC,IAAI,EAAE;MAAEY,SAAS,EAAE;IAAI;GACP,CAAC;AACrB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}