{"ast":null,"code":"\"use strict\";\n\n/**\n * Internal assertion helpers.\n * @module\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.anumber = anumber;\nexports.abytes = abytes;\nexports.ahash = ahash;\nexports.aexists = aexists;\nexports.aoutput = aoutput;\n/** Asserts something is positive integer. */\nfunction anumber(n) {\n  if (!Number.isSafeInteger(n) || n < 0) throw new Error('positive integer expected, got ' + n);\n}\n/** Is number an Uint8Array? Copied from utils for perf. */\nfunction isBytes(a) {\n  return a instanceof Uint8Array || ArrayBuffer.isView(a) && a.constructor.name === 'Uint8Array';\n}\n/** Asserts something is Uint8Array. */\nfunction abytes(b, ...lengths) {\n  if (!isBytes(b)) throw new Error('Uint8Array expected');\n  if (lengths.length > 0 && !lengths.includes(b.length)) throw new Error('Uint8Array expected of length ' + lengths + ', got length=' + b.length);\n}\n/** Asserts something is hash */\nfunction ahash(h) {\n  if (typeof h !== 'function' || typeof h.create !== 'function') throw new Error('Hash should be wrapped by utils.wrapConstructor');\n  anumber(h.outputLen);\n  anumber(h.blockLen);\n}\n/** Asserts a hash instance has not been destroyed / finished */\nfunction aexists(instance, checkFinished = true) {\n  if (instance.destroyed) throw new Error('Hash instance has been destroyed');\n  if (checkFinished && instance.finished) throw new Error('Hash#digest() has already been called');\n}\n/** Asserts output is properly-sized byte array */\nfunction aoutput(out, instance) {\n  abytes(out);\n  const min = instance.outputLen;\n  if (out.length < min) {\n    throw new Error('digestInto() expects output buffer of length at least ' + min);\n  }\n}","map":{"version":3,"names":["exports","anumber","abytes","ahash","aexists","aoutput","n","Number","isSafeInteger","Error","isBytes","a","Uint8Array","ArrayBuffer","isView","constructor","name","b","lengths","length","includes","h","create","outputLen","blockLen","instance","checkFinished","destroyed","finished","out","min"],"sources":["C:\\Users\\Adrien\\Desktop\\CryptoGrind - Copie\\client\\node_modules\\viem\\node_modules\\@noble\\hashes\\src\\_assert.ts"],"sourcesContent":["/**\n * Internal assertion helpers.\n * @module\n */\n\n/** Asserts something is positive integer. */\nfunction anumber(n: number): void {\n  if (!Number.isSafeInteger(n) || n < 0) throw new Error('positive integer expected, got ' + n);\n}\n\n/** Is number an Uint8Array? Copied from utils for perf. */\nfunction isBytes(a: unknown): a is Uint8Array {\n  return a instanceof Uint8Array || (ArrayBuffer.isView(a) && a.constructor.name === 'Uint8Array');\n}\n\n/** Asserts something is Uint8Array. */\nfunction abytes(b: Uint8Array | undefined, ...lengths: number[]): void {\n  if (!isBytes(b)) throw new Error('Uint8Array expected');\n  if (lengths.length > 0 && !lengths.includes(b.length))\n    throw new Error('Uint8Array expected of length ' + lengths + ', got length=' + b.length);\n}\n\n/** Hash interface. */\nexport type Hash = {\n  (data: Uint8Array): Uint8Array;\n  blockLen: number;\n  outputLen: number;\n  create: any;\n};\n\n/** Asserts something is hash */\nfunction ahash(h: Hash): void {\n  if (typeof h !== 'function' || typeof h.create !== 'function')\n    throw new Error('Hash should be wrapped by utils.wrapConstructor');\n  anumber(h.outputLen);\n  anumber(h.blockLen);\n}\n\n/** Asserts a hash instance has not been destroyed / finished */\nfunction aexists(instance: any, checkFinished = true): void {\n  if (instance.destroyed) throw new Error('Hash instance has been destroyed');\n  if (checkFinished && instance.finished) throw new Error('Hash#digest() has already been called');\n}\n\n/** Asserts output is properly-sized byte array */\nfunction aoutput(out: any, instance: any): void {\n  abytes(out);\n  const min = instance.outputLen;\n  if (out.length < min) {\n    throw new Error('digestInto() expects output buffer of length at least ' + min);\n  }\n}\n\nexport { anumber, abytes, ahash, aexists, aoutput };\n"],"mappings":";;AAAA;;;;;;;AAqDSA,OAAA,CAAAC,OAAA,GAAAA,OAAA;AAASD,OAAA,CAAAE,MAAA,GAAAA,MAAA;AAAQF,OAAA,CAAAG,KAAA,GAAAA,KAAA;AAAOH,OAAA,CAAAI,OAAA,GAAAA,OAAA;AAASJ,OAAA,CAAAK,OAAA,GAAAA,OAAA;AAhD1C;AACA,SAASJ,OAAOA,CAACK,CAAS;EACxB,IAAI,CAACC,MAAM,CAACC,aAAa,CAACF,CAAC,CAAC,IAAIA,CAAC,GAAG,CAAC,EAAE,MAAM,IAAIG,KAAK,CAAC,iCAAiC,GAAGH,CAAC,CAAC;AAC/F;AAEA;AACA,SAASI,OAAOA,CAACC,CAAU;EACzB,OAAOA,CAAC,YAAYC,UAAU,IAAKC,WAAW,CAACC,MAAM,CAACH,CAAC,CAAC,IAAIA,CAAC,CAACI,WAAW,CAACC,IAAI,KAAK,YAAa;AAClG;AAEA;AACA,SAASd,MAAMA,CAACe,CAAyB,EAAE,GAAGC,OAAiB;EAC7D,IAAI,CAACR,OAAO,CAACO,CAAC,CAAC,EAAE,MAAM,IAAIR,KAAK,CAAC,qBAAqB,CAAC;EACvD,IAAIS,OAAO,CAACC,MAAM,GAAG,CAAC,IAAI,CAACD,OAAO,CAACE,QAAQ,CAACH,CAAC,CAACE,MAAM,CAAC,EACnD,MAAM,IAAIV,KAAK,CAAC,gCAAgC,GAAGS,OAAO,GAAG,eAAe,GAAGD,CAAC,CAACE,MAAM,CAAC;AAC5F;AAUA;AACA,SAAShB,KAAKA,CAACkB,CAAO;EACpB,IAAI,OAAOA,CAAC,KAAK,UAAU,IAAI,OAAOA,CAAC,CAACC,MAAM,KAAK,UAAU,EAC3D,MAAM,IAAIb,KAAK,CAAC,iDAAiD,CAAC;EACpER,OAAO,CAACoB,CAAC,CAACE,SAAS,CAAC;EACpBtB,OAAO,CAACoB,CAAC,CAACG,QAAQ,CAAC;AACrB;AAEA;AACA,SAASpB,OAAOA,CAACqB,QAAa,EAAEC,aAAa,GAAG,IAAI;EAClD,IAAID,QAAQ,CAACE,SAAS,EAAE,MAAM,IAAIlB,KAAK,CAAC,kCAAkC,CAAC;EAC3E,IAAIiB,aAAa,IAAID,QAAQ,CAACG,QAAQ,EAAE,MAAM,IAAInB,KAAK,CAAC,uCAAuC,CAAC;AAClG;AAEA;AACA,SAASJ,OAAOA,CAACwB,GAAQ,EAAEJ,QAAa;EACtCvB,MAAM,CAAC2B,GAAG,CAAC;EACX,MAAMC,GAAG,GAAGL,QAAQ,CAACF,SAAS;EAC9B,IAAIM,GAAG,CAACV,MAAM,GAAGW,GAAG,EAAE;IACpB,MAAM,IAAIrB,KAAK,CAAC,wDAAwD,GAAGqB,GAAG,CAAC;EACjF;AACF","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}