{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Adrien\\\\Desktop\\\\CryptoGrind - Copie\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { WagmiConfig, createConfig } from 'wagmi';\nimport { createPublicClient, http } from 'viem';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query';\nimport { injected } from '@wagmi/connectors';\nimport Header from './components/Header';\nimport Home from './pages/Home';\nimport Notifications from './pages/Notifications';\nimport Profile from './pages/Profile';\nimport Missions from './pages/Missions';\nimport NotificationWen from './components/NotificationWen';\nimport AddProject from './components/AddProject';\nimport { Fragment as _Fragment, jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst abstractTestnet = {\n  id: 11124,\n  name: 'Abstract Testnet',\n  network: 'abstract-testnet',\n  nativeCurrency: {\n    name: 'Ether',\n    symbol: 'ETH',\n    decimals: 18\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://api.testnet.abs.xyz']\n    },\n    public: {\n      http: ['https://api.testnet.abs.xyz']\n    }\n  },\n  blockExplorers: {\n    default: {\n      name: 'AbstractScan',\n      url: 'https://sepolia.abscan.org'\n    }\n  },\n  testnet: true\n};\nconst queryClient = new QueryClient();\nconst config = createConfig({\n  chains: [abstractTestnet],\n  connectors: [injected()],\n  client: ({\n    chain\n  }) => createPublicClient({\n    chain,\n    transport: http()\n  })\n});\nexport const GrindContext = /*#__PURE__*/React.createContext();\n\n// Composant enfant pour gérer le solde\nfunction BalanceProvider({\n  account,\n  setGrindBalance,\n  children\n}) {\n  _s();\n  const {\n    data: balanceData,\n    error: balanceError,\n    isLoading: balanceLoading\n  } = useBalance({\n    address: account,\n    chainId: abstractTestnet.id,\n    enabled: !!account\n  });\n  useEffect(() => {\n    console.log('BalanceProvider - Account:', account);\n    console.log('BalanceProvider - balanceData:', balanceData);\n    console.log('BalanceProvider - balanceError:', balanceError);\n    console.log('BalanceProvider - balanceLoading:', balanceLoading);\n    if (balanceData) {\n      setGrindBalance(balanceData.value.toString()); // Solde en wei\n      console.log('Solde ETH:', balanceData.formatted, 'ETH');\n    } else if (balanceError) {\n      console.error('Erreur récupération solde:', balanceError.message);\n    }\n  }, [balanceData, balanceError, balanceLoading, account, setGrindBalance]);\n\n  // Requête manuelle comme secours\n  useEffect(() => {\n    if (account) {\n      const checkBalanceManually = async () => {\n        try {\n          const client = createPublicClient({\n            chain: abstractTestnet,\n            transport: http()\n          });\n          const balance = await client.getBalance({\n            address: account\n          });\n          console.log('Solde manuel ETH:', balance.toString(), 'wei');\n          console.log('Solde manuel ETH (formatté):', Number(balance) / 1e18, 'ETH');\n          setGrindBalance(balance.toString()); // Mettre à jour si useBalance échoue\n        } catch (error) {\n          console.error('Erreur requête manuelle solde:', error);\n        }\n      };\n      checkBalanceManually();\n    }\n  }, [account, setGrindBalance]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: children\n  }, void 0, false);\n}\n_s(BalanceProvider, \"4ogx8BQ8XhBjHxkHnOrNHCpsSkQ=\", true);\n_c = BalanceProvider;\nfunction App() {\n  _s2();\n  const [grindBalance, setGrindBalance] = useState(0);\n  const [account, setAccount] = useState(null);\n  const [projects, setProjects] = useState([]);\n\n  // Vérifier la connexion MetaMask\n  useEffect(() => {\n    var _window$ethereum;\n    const checkConnection = async () => {\n      try {\n        if (!window.ethereum) {\n          console.error('MetaMask non détecté');\n          return;\n        }\n        const accounts = await window.ethereum.request({\n          method: 'eth_accounts'\n        });\n        if (accounts.length > 0) {\n          const normalizedAccount = accounts[0].toLowerCase();\n          console.log('MetaMask connecté, adresse:', normalizedAccount);\n          setAccount(normalizedAccount);\n        } else {\n          console.log('Aucun compte MetaMask connecté');\n        }\n      } catch (error) {\n        console.error('Erreur vérification connexion:', error);\n      }\n    };\n    checkConnection();\n    (_window$ethereum = window.ethereum) === null || _window$ethereum === void 0 ? void 0 : _window$ethereum.on('accountsChanged', accounts => {\n      if (accounts.length > 0) {\n        const normalizedAccount = accounts[0].toLowerCase();\n        console.log('Nouveau compte détecté:', normalizedAccount);\n        setAccount(normalizedAccount);\n      } else {\n        console.log('Déconnexion détectée');\n        setAccount(null);\n      }\n    });\n    return () => {\n      var _window$ethereum2;\n      (_window$ethereum2 = window.ethereum) === null || _window$ethereum2 === void 0 ? void 0 : _window$ethereum2.removeListener('accountsChanged');\n    };\n  }, []);\n\n  // Charger les projets depuis localStorage\n  useEffect(() => {\n    if (account) {\n      const savedProjects = localStorage.getItem(`projects_${account}`);\n      console.log('Chargement projets depuis localStorage:', savedProjects);\n      setProjects(savedProjects ? JSON.parse(savedProjects) : []);\n    } else {\n      setProjects([]);\n      console.log('Aucun account, réinitialisation projets');\n    }\n  }, [account]);\n\n  // Synchroniser localStorage avec l'état projects\n  useEffect(() => {\n    if (account) {\n      console.log('Sauvegarde projets dans localStorage:', projects);\n      localStorage.setItem(`projects_${account}`, JSON.stringify(projects));\n    }\n  }, [projects, account]);\n  const handleAddProject = project => {\n    setProjects(prevProjects => {\n      const updatedProjects = [...prevProjects, project];\n      console.log('Nouveau projet ajouté:', project);\n      return updatedProjects;\n    });\n  };\n  console.log('Projets actuels:', projects);\n  return /*#__PURE__*/_jsxDEV(WagmiConfig, {\n    config: config,\n    children: /*#__PURE__*/_jsxDEV(QueryClientProvider, {\n      client: queryClient,\n      children: /*#__PURE__*/_jsxDEV(GrindContext.Provider, {\n        value: {\n          grindBalance,\n          account\n        },\n        children: /*#__PURE__*/_jsxDEV(BalanceProvider, {\n          account: account,\n          setGrindBalance: setGrindBalance,\n          children: /*#__PURE__*/_jsxDEV(Router, {\n            children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Routes, {\n              children: [/*#__PURE__*/_jsxDEV(Route, {\n                path: \"/\",\n                element: /*#__PURE__*/_jsxDEV(Home, {\n                  projects: projects,\n                  setProjects: setProjects,\n                  handleAddProject: handleAddProject\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Route, {\n                path: \"/notifications\",\n                element: /*#__PURE__*/_jsxDEV(Notifications, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 190,\n                  columnNumber: 55\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Route, {\n                path: \"/profile\",\n                element: /*#__PURE__*/_jsxDEV(Profile, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Route, {\n                path: \"/missions\",\n                element: /*#__PURE__*/_jsxDEV(Missions, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 50\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Route, {\n                path: \"/lottery\",\n                element: /*#__PURE__*/_jsxDEV(NotificationWen, {\n                  projects: projects\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 193,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Route, {\n                path: \"/add-project\",\n                element: /*#__PURE__*/_jsxDEV(AddProject, {\n                  onAddProject: handleAddProject\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 53\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 173,\n    columnNumber: 5\n  }, this);\n}\n_s2(App, \"72bxzmdOrQ4UbUvKmwaEzTqsaCM=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"BalanceProvider\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","useEffect","WagmiConfig","createConfig","createPublicClient","http","BrowserRouter","Router","Routes","Route","QueryClient","QueryClientProvider","injected","Header","Home","Notifications","Profile","Missions","NotificationWen","AddProject","Fragment","_Fragment","jsxDEV","_jsxDEV","abstractTestnet","id","name","network","nativeCurrency","symbol","decimals","rpcUrls","default","public","blockExplorers","url","testnet","queryClient","config","chains","connectors","client","chain","transport","GrindContext","createContext","BalanceProvider","account","setGrindBalance","children","_s","data","balanceData","error","balanceError","isLoading","balanceLoading","useBalance","address","chainId","enabled","console","log","value","toString","formatted","message","checkBalanceManually","balance","getBalance","Number","_c","App","_s2","grindBalance","setAccount","projects","setProjects","_window$ethereum","checkConnection","window","ethereum","accounts","request","method","length","normalizedAccount","toLowerCase","on","_window$ethereum2","removeListener","savedProjects","localStorage","getItem","JSON","parse","setItem","stringify","handleAddProject","project","prevProjects","updatedProjects","Provider","fileName","_jsxFileName","lineNumber","columnNumber","path","element","onAddProject","_c2","$RefreshReg$"],"sources":["C:/Users/Adrien/Desktop/CryptoGrind - Copie/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { WagmiConfig, createConfig } from 'wagmi';\r\nimport { createPublicClient, http } from 'viem';\r\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\r\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query';\r\nimport { injected } from '@wagmi/connectors';\r\nimport Header from './components/Header';\r\nimport Home from './pages/Home';\r\nimport Notifications from './pages/Notifications';\r\nimport Profile from './pages/Profile';\r\nimport Missions from './pages/Missions';\r\nimport NotificationWen from './components/NotificationWen';\r\nimport AddProject from './components/AddProject';\r\n\r\nconst abstractTestnet = {\r\n  id: 11124,\r\n  name: 'Abstract Testnet',\r\n  network: 'abstract-testnet',\r\n  nativeCurrency: {\r\n    name: 'Ether',\r\n    symbol: 'ETH',\r\n    decimals: 18,\r\n  },\r\n  rpcUrls: {\r\n    default: {\r\n      http: ['https://api.testnet.abs.xyz'],\r\n    },\r\n    public: {\r\n      http: ['https://api.testnet.abs.xyz'],\r\n    },\r\n  },\r\n  blockExplorers: {\r\n    default: { name: 'AbstractScan', url: 'https://sepolia.abscan.org' },\r\n  },\r\n  testnet: true,\r\n};\r\n\r\nconst queryClient = new QueryClient();\r\n\r\nconst config = createConfig({\r\n  chains: [abstractTestnet],\r\n  connectors: [injected()],\r\n  client: ({ chain }) =>\r\n    createPublicClient({\r\n      chain,\r\n      transport: http(),\r\n    }),\r\n});\r\n\r\nexport const GrindContext = React.createContext();\r\n\r\n// Composant enfant pour gérer le solde\r\nfunction BalanceProvider({ account, setGrindBalance, children }) {\r\n  const { data: balanceData, error: balanceError, isLoading: balanceLoading } = useBalance({\r\n    address: account,\r\n    chainId: abstractTestnet.id,\r\n    enabled: !!account,\r\n  });\r\n\r\n  useEffect(() => {\r\n    console.log('BalanceProvider - Account:', account);\r\n    console.log('BalanceProvider - balanceData:', balanceData);\r\n    console.log('BalanceProvider - balanceError:', balanceError);\r\n    console.log('BalanceProvider - balanceLoading:', balanceLoading);\r\n\r\n    if (balanceData) {\r\n      setGrindBalance(balanceData.value.toString()); // Solde en wei\r\n      console.log('Solde ETH:', balanceData.formatted, 'ETH');\r\n    } else if (balanceError) {\r\n      console.error('Erreur récupération solde:', balanceError.message);\r\n    }\r\n  }, [balanceData, balanceError, balanceLoading, account, setGrindBalance]);\r\n\r\n  // Requête manuelle comme secours\r\n  useEffect(() => {\r\n    if (account) {\r\n      const checkBalanceManually = async () => {\r\n        try {\r\n          const client = createPublicClient({\r\n            chain: abstractTestnet,\r\n            transport: http(),\r\n          });\r\n          const balance = await client.getBalance({ address: account });\r\n          console.log('Solde manuel ETH:', balance.toString(), 'wei');\r\n          console.log('Solde manuel ETH (formatté):', Number(balance) / 1e18, 'ETH');\r\n          setGrindBalance(balance.toString()); // Mettre à jour si useBalance échoue\r\n        } catch (error) {\r\n          console.error('Erreur requête manuelle solde:', error);\r\n        }\r\n      };\r\n      checkBalanceManually();\r\n    }\r\n  }, [account, setGrindBalance]);\r\n\r\n  return <>{children}</>;\r\n}\r\n\r\nfunction App() {\r\n  const [grindBalance, setGrindBalance] = useState(0);\r\n  const [account, setAccount] = useState(null);\r\n  const [projects, setProjects] = useState([]);\r\n\r\n  // Vérifier la connexion MetaMask\r\n  useEffect(() => {\r\n    const checkConnection = async () => {\r\n      try {\r\n        if (!window.ethereum) {\r\n          console.error('MetaMask non détecté');\r\n          return;\r\n        }\r\n        const accounts = await window.ethereum.request({ method: 'eth_accounts' });\r\n        if (accounts.length > 0) {\r\n          const normalizedAccount = accounts[0].toLowerCase();\r\n          console.log('MetaMask connecté, adresse:', normalizedAccount);\r\n          setAccount(normalizedAccount);\r\n        } else {\r\n          console.log('Aucun compte MetaMask connecté');\r\n        }\r\n      } catch (error) {\r\n        console.error('Erreur vérification connexion:', error);\r\n      }\r\n    };\r\n\r\n    checkConnection();\r\n\r\n    window.ethereum?.on('accountsChanged', (accounts) => {\r\n      if (accounts.length > 0) {\r\n        const normalizedAccount = accounts[0].toLowerCase();\r\n        console.log('Nouveau compte détecté:', normalizedAccount);\r\n        setAccount(normalizedAccount);\r\n      } else {\r\n        console.log('Déconnexion détectée');\r\n        setAccount(null);\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      window.ethereum?.removeListener('accountsChanged');\r\n    };\r\n  }, []);\r\n\r\n  // Charger les projets depuis localStorage\r\n  useEffect(() => {\r\n    if (account) {\r\n      const savedProjects = localStorage.getItem(`projects_${account}`);\r\n      console.log('Chargement projets depuis localStorage:', savedProjects);\r\n      setProjects(savedProjects ? JSON.parse(savedProjects) : []);\r\n    } else {\r\n      setProjects([]);\r\n      console.log('Aucun account, réinitialisation projets');\r\n    }\r\n  }, [account]);\r\n\r\n  // Synchroniser localStorage avec l'état projects\r\n  useEffect(() => {\r\n    if (account) {\r\n      console.log('Sauvegarde projets dans localStorage:', projects);\r\n      localStorage.setItem(`projects_${account}`, JSON.stringify(projects));\r\n    }\r\n  }, [projects, account]);\r\n\r\n  const handleAddProject = (project) => {\r\n    setProjects((prevProjects) => {\r\n      const updatedProjects = [...prevProjects, project];\r\n      console.log('Nouveau projet ajouté:', project);\r\n      return updatedProjects;\r\n    });\r\n  };\r\n\r\n  console.log('Projets actuels:', projects);\r\n\r\n  return (\r\n    <WagmiConfig config={config}>\r\n      <QueryClientProvider client={queryClient}>\r\n        <GrindContext.Provider value={{ grindBalance, account }}>\r\n          <BalanceProvider account={account} setGrindBalance={setGrindBalance}>\r\n            <Router>\r\n              <Header />\r\n              <Routes>\r\n                <Route\r\n                  path=\"/\"\r\n                  element={\r\n                    <Home\r\n                      projects={projects}\r\n                      setProjects={setProjects}\r\n                      handleAddProject={handleAddProject}\r\n                    />\r\n                  }\r\n                />\r\n                <Route path=\"/notifications\" element={<Notifications />} />\r\n                <Route path=\"/profile\" element={<Profile />} />\r\n                <Route path=\"/missions\" element={<Missions />} />\r\n                <Route path=\"/lottery\" element={<NotificationWen projects={projects} />} />\r\n                <Route path=\"/add-project\" element={<AddProject onAddProject={handleAddProject} />} />\r\n              </Routes>\r\n            </Router>\r\n          </BalanceProvider>\r\n        </GrindContext.Provider>\r\n      </QueryClientProvider>\r\n    </WagmiConfig>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}