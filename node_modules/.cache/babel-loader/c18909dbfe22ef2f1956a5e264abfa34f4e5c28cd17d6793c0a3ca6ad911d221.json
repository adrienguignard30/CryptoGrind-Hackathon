{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Adrien\\\\Desktop\\\\CryptoGrind - Copie\\\\client\\\\src\\\\pages\\\\Missions.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from 'react';\nimport { GrindContext } from '../App';\nimport { useSendTransaction } from 'wagmi';\nimport { parseEther } from 'viem';\nimport { useTranslation } from 'react-i18next'; // Import i18n\nimport i18n from '../i18n'; // Import i18n configuration\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Missions() {\n  _s();\n  const {\n    grindBalance,\n    account\n  } = useContext(GrindContext);\n  const {\n    t\n  } = useTranslation(); // Hook for translations\n\n  // State for tickets, total tickets, and participants\n  const [tickets, setTickets] = useState(() => parseInt(localStorage.getItem('userTickets')) || 0);\n  const [totalTickets, setTotalTickets] = useState(() => parseInt(localStorage.getItem('totalTickets')) || 0);\n  const [participants, setParticipants] = useState(() => {\n    const savedParticipants = localStorage.getItem('lotteryParticipants');\n    return savedParticipants ? JSON.parse(savedParticipants) : [];\n  });\n  const [userTicketsInLottery, setUserTicketsInLottery] = useState(0);\n  const [lastLotteryDate, setLastLotteryDate] = useState(() => localStorage.getItem('lastLotteryDate') || null);\n  const [missionsStatus, setMissionsStatus] = useState(() => {\n    const savedMissions = localStorage.getItem(`missionsStatus_${account}`);\n    return savedMissions ? JSON.parse(savedMissions) : {\n      tweet1Like: false,\n      tweet1Retweet: false,\n      tweet1Reply: false,\n      tweet2Like: false,\n      tweet2Retweet: false,\n      tweet2Reply: false,\n      abstractVote: false\n    };\n  });\n\n  // List of tweets (ADD OR MODIFY TWEET LINKS HERE)\n  const tweets = [{\n    id: 'tweet1',\n    url: 'https://x.com/bearish_af/status/1911158667698749614',\n    // CHANGE THIS LINK TO UPDATE TWEET 1\n    text: 'Tweet by @bearish_af - Join the $GRIND vibe!'\n  }, {\n    id: 'tweet2',\n    url: 'https://x.com/Adrienfam_arts/status/1912563448463995040',\n    // CHANGE THIS LINK TO UPDATE TWEET 2\n    text: 'Tweet by @Adrienfam_arts - Amazing $GRIND art!'\n  }];\n\n  // Payment with ETH\n  const {\n    sendTransaction,\n    isLoading,\n    isSuccess,\n    error\n  } = useSendTransaction();\n  const LOTTERY_ADDRESS = '0x62100eBD5A41133723e91613755AB8dc65C3a13D'; // Replace with your address or contract\n\n  // Save data to localStorage\n  useEffect(() => {\n    localStorage.setItem('userTickets', tickets.toString());\n    localStorage.setItem('totalTickets', totalTickets.toString());\n    localStorage.setItem('lotteryParticipants', JSON.stringify(participants));\n    localStorage.setItem('lastLotteryDate', lastLotteryDate || '');\n    localStorage.setItem(`missionsStatus_${account}`, JSON.stringify(missionsStatus));\n  }, [tickets, totalTickets, participants, lastLotteryDate, missionsStatus, account]);\n\n  // Automatically check for lottery every 1000 tickets\n  useEffect(() => {\n    if (totalTickets >= 1000) {\n      if (!lastLotteryDate || new Date(lastLotteryDate).getTime() < new Date().getTime() - 1000 * 60) {\n        drawLottery();\n      }\n    }\n  }, [totalTickets]);\n\n  // Buy ticket with ETH\n  const buyTicketWithETH = () => {\n    const ticketPriceETH = '0.01'; // 0.01 ETH per ticket\n\n    if (!account) {\n      alert(t('connectWallet')); // \"Please connect your wallet.\"\n      return;\n    }\n    if (parseInt(grindBalance) < parseEther(ticketPriceETH)) {\n      alert(t('insufficientETH', {\n        price: ticketPriceETH\n      })); // \"Insufficient ETH balance! You need 0.01 ETH to buy a ticket.\"\n      return;\n    }\n    sendTransaction({\n      to: LOTTERY_ADDRESS,\n      value: parseEther(ticketPriceETH)\n    });\n  };\n\n  // Update tickets after successful purchase\n  useEffect(() => {\n    if (isSuccess) {\n      setTickets(prev => prev + 1);\n      setTotalTickets(prev => prev + 1);\n      alert(t('ticketPurchased')); // \"You have purchased a lottery ticket with 0.01 ETH!\"\n    }\n    if (error) {\n      alert(t('purchaseError', {\n        error: error.message\n      })); // \"Error purchasing ticket: {error}\"\n    }\n  }, [isSuccess, error, t]);\n\n  // Function to verify actions on X (Simulated for now)\n  const verifyXAction = async (actionType, tweetId) => {\n    // In a real implementation, you'd use the X API to verify the action\n    // Example: Check if the user has liked/retweeted/replied to the tweet with tweetId\n    // You would need the X API token and the user's X handle linked to their wallet\n    const X_API_TOKEN = 'YOUR_X_API_TOKEN'; // Replace with your X API token\n    try {\n      console.log(`Verifying ${actionType} on X for tweet ${tweetId}...`);\n      // Simulated verification\n      return true;\n    } catch (error) {\n      console.error(`Error verifying ${actionType} on X:`, error);\n      return false;\n    }\n  };\n\n  // Function to verify Abstract vote (unchanged)\n  const verifyAbstractVote = async () => {\n    console.log('Verifying vote on Abstract...');\n    return true; // Simulated\n  };\n\n  // Complete a mission and award tickets\n  const completeMission = async (action, tweetId = null) => {\n    let ticketsToAdd = 0;\n    let missionCompleted = false;\n    let missionKey = action;\n    if (tweetId) {\n      missionKey = `${tweetId}${action}`; // e.g., \"tweet1Like\"\n    }\n    if (missionsStatus[missionKey]) {\n      alert(t('missionAlreadyCompleted', {\n        action: t(action)\n      })); // \"Mission already completed: {action}.\"\n      return;\n    }\n    if (action === 'Like' || action === 'Retweet' || action === 'Reply') {\n      missionCompleted = await verifyXAction(action.toLowerCase(), tweetId);\n      ticketsToAdd = action === 'Like' ? 1 : 2; // +1 for Like, +2 for Retweet/Reply\n    } else if (action === 'abstractVote') {\n      missionCompleted = await verifyAbstractVote();\n      ticketsToAdd = 1;\n    }\n    if (missionCompleted) {\n      setTickets(prev => prev + ticketsToAdd);\n      setTotalTickets(prev => prev + ticketsToAdd);\n      setMissionsStatus(prev => ({\n        ...prev,\n        [missionKey]: true\n      }));\n      alert(t('missionCompleted', {\n        action: t(action),\n        tickets: ticketsToAdd\n      })); // \"Mission completed: {action}! +{tickets} ticket(s)\"\n    } else {\n      alert(t('missionFailed', {\n        action: t(action)\n      })); // \"Failed to verify mission: {action}. Please try again.\"\n    }\n  };\n\n  // Join the lottery (unchanged)\n  const joinLottery = ticketCount => {\n    if (ticketCount > tickets) {\n      alert(t('notEnoughTickets')); // \"You don't have enough tickets!\"\n      return;\n    }\n    if (ticketCount <= 0) {\n      alert(t('invalidTicketCount')); // \"Please enter a number of tickets greater than 0.\"\n      return;\n    }\n    const updatedParticipants = [...participants, {\n      user: account || 'User',\n      tickets: ticketCount\n    }];\n    setParticipants(updatedParticipants);\n    setTickets(prev => prev - ticketCount);\n    setUserTicketsInLottery(prev => prev + ticketCount);\n    alert(t('joinedLottery', {\n      tickets: ticketCount\n    })); // \"You have joined the lottery with {tickets} tickets!\"\n  };\n\n  // Draw the lottery (unchanged)\n  const drawLottery = () => {\n    const totalLotteryTickets = participants.reduce((sum, p) => sum + p.tickets, 0);\n    if (totalLotteryTickets === 0) {\n      alert(t('noParticipants')); // \"No participants in the lottery!\"\n      return;\n    }\n    const randomTicket = Math.floor(Math.random() * totalLotteryTickets);\n    let cumulativeTickets = 0;\n    let winner = null;\n    for (const participant of participants) {\n      cumulativeTickets += participant.tickets;\n      if (randomTicket < cumulativeTickets) {\n        winner = participant;\n        break;\n      }\n    }\n    if (winner) {\n      alert(t('lotteryWinner', {\n        user: winner.user,\n        tickets: winner.tickets\n      })); // \"{user} has won a Making Coffee pack with {tickets} tickets!\"\n    }\n    setParticipants([]);\n    setTotalTickets(0);\n    setUserTicketsInLottery(0);\n    setLastLotteryDate(new Date().toISOString());\n  };\n\n  // Function to change language\n  const changeLanguage = lng => {\n    i18n.changeLanguage(lng);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4 text-center\",\n    style: {\n      backgroundColor: '#1a3c34',\n      minHeight: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => changeLanguage('en'),\n        className: \"bg-gray-500 text-white px-3 py-1 rounded mr-2 hover:bg-gray-600\",\n        children: \"EN\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => changeLanguage('fr'),\n        className: \"bg-gray-500 text-white px-3 py-1 rounded hover:bg-gray-600\",\n        children: \"FR\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold mb-4 text-white\",\n      children: t('missionsAndLottery')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-bold mb-2 text-white\",\n        children: t('missions')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-6 rounded-lg shadow-md\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-lg mb-4\",\n          children: [t('yourTickets'), \": \", tickets]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-lg mb-4\",\n          children: [t('ethBalance'), \": \", (parseInt(grindBalance) / 1e18).toFixed(4), \" ETH\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-lg mb-4\",\n          children: [t('totalTickets'), \": \", totalTickets]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-6\",\n          children: tweets.map(tweet => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"border p-4 rounded-lg\",\n            children: [/*#__PURE__*/_jsxDEV(\"a\", {\n              href: tweet.url,\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              className: \"text-blue-500 hover:underline\",\n              children: tweet.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-2 space-x-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => completeMission('Like', tweet.id),\n                className: \"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600\",\n                children: [t('like'), \" (+1 \", t('ticket'), \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => completeMission('Retweet', tweet.id),\n                className: \"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600\",\n                children: [t('retweet'), \" (+2 \", t('tickets'), \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => completeMission('Reply', tweet.id),\n                className: \"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600\",\n                children: [t('reply'), \" (+2 \", t('tickets'), \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 17\n            }, this)]\n          }, tweet.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-4 mt-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => completeMission('abstractVote'),\n            className: \"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600\",\n            children: [t('voteOnAbstract'), \" (+1 \", t('ticket'), \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: buyTicketWithETH,\n            disabled: isLoading,\n            className: \"bg-green-500 text-white px-4 py-2 rounded hover:bg-green-600\",\n            children: isLoading ? t('purchasing') : t('buyTicketWithETH')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-bold mb-2 text-white\",\n        children: t('lottery')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-6 rounded-lg shadow-md\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-lg mb-4\",\n          children: t('lotteryInfo')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-lg mb-4\",\n          children: [t('yourTicketsInLottery'), \": \", userTicketsInLottery]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-lg mb-4\",\n          children: [t('currentParticipants'), \": \", participants.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block mb-1\",\n              children: [t('ticketsToUse'), \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              min: \"1\",\n              max: tickets,\n              onChange: e => setUserTicketsInLottery(parseInt(e.target.value) || 0),\n              className: \"border p-2 rounded w-32\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => joinLottery(userTicketsInLottery),\n              className: \"ml-2 bg-purple-500 text-white px-4 py-2 rounded hover:bg-purple-600\",\n              children: t('joinLottery')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: drawLottery,\n            className: \"bg-red-500 text-white px-4 py-2 rounded hover:bg-red-600\",\n            children: t('forceDraw')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 210,\n    columnNumber: 5\n  }, this);\n}\n_s(Missions, \"5ZbDK98LP6vwiglgLonWZ/2BdjM=\", false, function () {\n  return [useTranslation, useSendTransaction];\n});\n_c = Missions;\nexport default Missions;\nvar _c;\n$RefreshReg$(_c, \"Missions\");","map":{"version":3,"names":["React","useState","useEffect","useContext","GrindContext","useSendTransaction","parseEther","useTranslation","i18n","jsxDEV","_jsxDEV","Missions","_s","grindBalance","account","t","tickets","setTickets","parseInt","localStorage","getItem","totalTickets","setTotalTickets","participants","setParticipants","savedParticipants","JSON","parse","userTicketsInLottery","setUserTicketsInLottery","lastLotteryDate","setLastLotteryDate","missionsStatus","setMissionsStatus","savedMissions","tweet1Like","tweet1Retweet","tweet1Reply","tweet2Like","tweet2Retweet","tweet2Reply","abstractVote","tweets","id","url","text","sendTransaction","isLoading","isSuccess","error","LOTTERY_ADDRESS","setItem","toString","stringify","Date","getTime","drawLottery","buyTicketWithETH","ticketPriceETH","alert","price","to","value","prev","message","verifyXAction","actionType","tweetId","X_API_TOKEN","console","log","verifyAbstractVote","completeMission","action","ticketsToAdd","missionCompleted","missionKey","toLowerCase","joinLottery","ticketCount","updatedParticipants","user","totalLotteryTickets","reduce","sum","p","randomTicket","Math","floor","random","cumulativeTickets","winner","participant","toISOString","changeLanguage","lng","className","style","backgroundColor","minHeight","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","toFixed","map","tweet","href","target","rel","disabled","length","type","min","max","onChange","e","_c","$RefreshReg$"],"sources":["C:/Users/Adrien/Desktop/CryptoGrind - Copie/client/src/pages/Missions.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport { GrindContext } from '../App';\r\nimport { useSendTransaction } from 'wagmi';\r\nimport { parseEther } from 'viem';\r\nimport { useTranslation } from 'react-i18next'; // Import i18n\r\nimport i18n from '../i18n'; // Import i18n configuration\r\n\r\nfunction Missions() {\r\n  const { grindBalance, account } = useContext(GrindContext);\r\n  const { t } = useTranslation(); // Hook for translations\r\n\r\n  // State for tickets, total tickets, and participants\r\n  const [tickets, setTickets] = useState(() => parseInt(localStorage.getItem('userTickets')) || 0);\r\n  const [totalTickets, setTotalTickets] = useState(() => parseInt(localStorage.getItem('totalTickets')) || 0);\r\n  const [participants, setParticipants] = useState(() => {\r\n    const savedParticipants = localStorage.getItem('lotteryParticipants');\r\n    return savedParticipants ? JSON.parse(savedParticipants) : [];\r\n  });\r\n  const [userTicketsInLottery, setUserTicketsInLottery] = useState(0);\r\n  const [lastLotteryDate, setLastLotteryDate] = useState(() => localStorage.getItem('lastLotteryDate') || null);\r\n  const [missionsStatus, setMissionsStatus] = useState(() => {\r\n    const savedMissions = localStorage.getItem(`missionsStatus_${account}`);\r\n    return savedMissions ? JSON.parse(savedMissions) : {\r\n      tweet1Like: false,\r\n      tweet1Retweet: false,\r\n      tweet1Reply: false,\r\n      tweet2Like: false,\r\n      tweet2Retweet: false,\r\n      tweet2Reply: false,\r\n      abstractVote: false,\r\n    };\r\n  });\r\n\r\n  // List of tweets (ADD OR MODIFY TWEET LINKS HERE)\r\n  const tweets = [\r\n    {\r\n      id: 'tweet1',\r\n      url: 'https://x.com/bearish_af/status/1911158667698749614', // CHANGE THIS LINK TO UPDATE TWEET 1\r\n      text: 'Tweet by @bearish_af - Join the $GRIND vibe!',\r\n    },\r\n    {\r\n      id: 'tweet2',\r\n      url: 'https://x.com/Adrienfam_arts/status/1912563448463995040', // CHANGE THIS LINK TO UPDATE TWEET 2\r\n      text: 'Tweet by @Adrienfam_arts - Amazing $GRIND art!',\r\n    },\r\n  ];\r\n\r\n  // Payment with ETH\r\n  const { sendTransaction, isLoading, isSuccess, error } = useSendTransaction();\r\n  const LOTTERY_ADDRESS = '0x62100eBD5A41133723e91613755AB8dc65C3a13D'; // Replace with your address or contract\r\n\r\n  // Save data to localStorage\r\n  useEffect(() => {\r\n    localStorage.setItem('userTickets', tickets.toString());\r\n    localStorage.setItem('totalTickets', totalTickets.toString());\r\n    localStorage.setItem('lotteryParticipants', JSON.stringify(participants));\r\n    localStorage.setItem('lastLotteryDate', lastLotteryDate || '');\r\n    localStorage.setItem(`missionsStatus_${account}`, JSON.stringify(missionsStatus));\r\n  }, [tickets, totalTickets, participants, lastLotteryDate, missionsStatus, account]);\r\n\r\n  // Automatically check for lottery every 1000 tickets\r\n  useEffect(() => {\r\n    if (totalTickets >= 1000) {\r\n      if (!lastLotteryDate || new Date(lastLotteryDate).getTime() < new Date().getTime() - 1000 * 60) {\r\n        drawLottery();\r\n      }\r\n    }\r\n  }, [totalTickets]);\r\n\r\n  // Buy ticket with ETH\r\n  const buyTicketWithETH = () => {\r\n    const ticketPriceETH = '0.01'; // 0.01 ETH per ticket\r\n\r\n    if (!account) {\r\n      alert(t('connectWallet')); // \"Please connect your wallet.\"\r\n      return;\r\n    }\r\n    if (parseInt(grindBalance) < parseEther(ticketPriceETH)) {\r\n      alert(t('insufficientETH', { price: ticketPriceETH })); // \"Insufficient ETH balance! You need 0.01 ETH to buy a ticket.\"\r\n      return;\r\n    }\r\n\r\n    sendTransaction({\r\n      to: LOTTERY_ADDRESS,\r\n      value: parseEther(ticketPriceETH),\r\n    });\r\n  };\r\n\r\n  // Update tickets after successful purchase\r\n  useEffect(() => {\r\n    if (isSuccess) {\r\n      setTickets((prev) => prev + 1);\r\n      setTotalTickets((prev) => prev + 1);\r\n      alert(t('ticketPurchased')); // \"You have purchased a lottery ticket with 0.01 ETH!\"\r\n    }\r\n    if (error) {\r\n      alert(t('purchaseError', { error: error.message })); // \"Error purchasing ticket: {error}\"\r\n    }\r\n  }, [isSuccess, error, t]);\r\n\r\n  // Function to verify actions on X (Simulated for now)\r\n  const verifyXAction = async (actionType, tweetId) => {\r\n    // In a real implementation, you'd use the X API to verify the action\r\n    // Example: Check if the user has liked/retweeted/replied to the tweet with tweetId\r\n    // You would need the X API token and the user's X handle linked to their wallet\r\n    const X_API_TOKEN = 'YOUR_X_API_TOKEN'; // Replace with your X API token\r\n    try {\r\n      console.log(`Verifying ${actionType} on X for tweet ${tweetId}...`);\r\n      // Simulated verification\r\n      return true;\r\n    } catch (error) {\r\n      console.error(`Error verifying ${actionType} on X:`, error);\r\n      return false;\r\n    }\r\n  };\r\n\r\n  // Function to verify Abstract vote (unchanged)\r\n  const verifyAbstractVote = async () => {\r\n    console.log('Verifying vote on Abstract...');\r\n    return true; // Simulated\r\n  };\r\n\r\n  // Complete a mission and award tickets\r\n  const completeMission = async (action, tweetId = null) => {\r\n    let ticketsToAdd = 0;\r\n    let missionCompleted = false;\r\n    let missionKey = action;\r\n\r\n    if (tweetId) {\r\n      missionKey = `${tweetId}${action}`; // e.g., \"tweet1Like\"\r\n    }\r\n\r\n    if (missionsStatus[missionKey]) {\r\n      alert(t('missionAlreadyCompleted', { action: t(action) })); // \"Mission already completed: {action}.\"\r\n      return;\r\n    }\r\n\r\n    if (action === 'Like' || action === 'Retweet' || action === 'Reply') {\r\n      missionCompleted = await verifyXAction(action.toLowerCase(), tweetId);\r\n      ticketsToAdd = action === 'Like' ? 1 : 2; // +1 for Like, +2 for Retweet/Reply\r\n    } else if (action === 'abstractVote') {\r\n      missionCompleted = await verifyAbstractVote();\r\n      ticketsToAdd = 1;\r\n    }\r\n\r\n    if (missionCompleted) {\r\n      setTickets((prev) => prev + ticketsToAdd);\r\n      setTotalTickets((prev) => prev + ticketsToAdd);\r\n      setMissionsStatus((prev) => ({ ...prev, [missionKey]: true }));\r\n      alert(t('missionCompleted', { action: t(action), tickets: ticketsToAdd })); // \"Mission completed: {action}! +{tickets} ticket(s)\"\r\n    } else {\r\n      alert(t('missionFailed', { action: t(action) })); // \"Failed to verify mission: {action}. Please try again.\"\r\n    }\r\n  };\r\n\r\n  // Join the lottery (unchanged)\r\n  const joinLottery = (ticketCount) => {\r\n    if (ticketCount > tickets) {\r\n      alert(t('notEnoughTickets')); // \"You don't have enough tickets!\"\r\n      return;\r\n    }\r\n    if (ticketCount <= 0) {\r\n      alert(t('invalidTicketCount')); // \"Please enter a number of tickets greater than 0.\"\r\n      return;\r\n    }\r\n\r\n    const updatedParticipants = [...participants, { user: account || 'User', tickets: ticketCount }];\r\n    setParticipants(updatedParticipants);\r\n    setTickets((prev) => prev - ticketCount);\r\n    setUserTicketsInLottery((prev) => prev + ticketCount);\r\n    alert(t('joinedLottery', { tickets: ticketCount })); // \"You have joined the lottery with {tickets} tickets!\"\r\n  };\r\n\r\n  // Draw the lottery (unchanged)\r\n  const drawLottery = () => {\r\n    const totalLotteryTickets = participants.reduce((sum, p) => sum + p.tickets, 0);\r\n    if (totalLotteryTickets === 0) {\r\n      alert(t('noParticipants')); // \"No participants in the lottery!\"\r\n      return;\r\n    }\r\n\r\n    const randomTicket = Math.floor(Math.random() * totalLotteryTickets);\r\n    let cumulativeTickets = 0;\r\n    let winner = null;\r\n\r\n    for (const participant of participants) {\r\n      cumulativeTickets += participant.tickets;\r\n      if (randomTicket < cumulativeTickets) {\r\n        winner = participant;\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (winner) {\r\n      alert(t('lotteryWinner', { user: winner.user, tickets: winner.tickets })); // \"{user} has won a Making Coffee pack with {tickets} tickets!\"\r\n    }\r\n\r\n    setParticipants([]);\r\n    setTotalTickets(0);\r\n    setUserTicketsInLottery(0);\r\n    setLastLotteryDate(new Date().toISOString());\r\n  };\r\n\r\n  // Function to change language\r\n  const changeLanguage = (lng) => {\r\n    i18n.changeLanguage(lng);\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-4 text-center\" style={{ backgroundColor: '#1a3c34', minHeight: '100vh' }}>\r\n      {/* Language Switcher */}\r\n      <div className=\"mb-4\">\r\n        <button\r\n          onClick={() => changeLanguage('en')}\r\n          className=\"bg-gray-500 text-white px-3 py-1 rounded mr-2 hover:bg-gray-600\"\r\n        >\r\n          EN\r\n        </button>\r\n        <button\r\n          onClick={() => changeLanguage('fr')}\r\n          className=\"bg-gray-500 text-white px-3 py-1 rounded hover:bg-gray-600\"\r\n        >\r\n          FR\r\n        </button>\r\n      </div>\r\n\r\n      {/* Missions Section */}\r\n      <h1 className=\"text-2xl font-bold mb-4 text-white\">{t('missionsAndLottery')}</h1>\r\n      <div className=\"mb-8\">\r\n        <h2 className=\"text-xl font-bold mb-2 text-white\">{t('missions')}</h2>\r\n        <div className=\"bg-white p-6 rounded-lg shadow-md\">\r\n          <p className=\"text-lg mb-4\">{t('yourTickets')}: {tickets}</p>\r\n          <p className=\"text-lg mb-4\">{t('ethBalance')}: {(parseInt(grindBalance) / 1e18).toFixed(4)} ETH</p>\r\n          <p className=\"text-lg mb-4\">{t('totalTickets')}: {totalTickets}</p>\r\n\r\n          {/* Tweet Missions */}\r\n          <div className=\"space-y-6\">\r\n            {tweets.map((tweet) => (\r\n              <div key={tweet.id} className=\"border p-4 rounded-lg\">\r\n                <a\r\n                  href={tweet.url}\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                  className=\"text-blue-500 hover:underline\"\r\n                >\r\n                  {tweet.text}\r\n                </a>\r\n                <div className=\"mt-2 space-x-2\">\r\n                  <button\r\n                    onClick={() => completeMission('Like', tweet.id)}\r\n                    className=\"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600\"\r\n                  >\r\n                    {t('like')} (+1 {t('ticket')})\r\n                  </button>\r\n                  <button\r\n                    onClick={() => completeMission('Retweet', tweet.id)}\r\n                    className=\"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600\"\r\n                  >\r\n                    {t('retweet')} (+2 {t('tickets')})\r\n                  </button>\r\n                  <button\r\n                    onClick={() => completeMission('Reply', tweet.id)}\r\n                    className=\"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600\"\r\n                  >\r\n                    {t('reply')} (+2 {t('tickets')})\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n\r\n          {/* Other Missions */}\r\n          <div className=\"space-y-4 mt-6\">\r\n            <button\r\n              onClick={() => completeMission('abstractVote')}\r\n              className=\"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600\"\r\n            >\r\n              {t('voteOnAbstract')} (+1 {t('ticket')})\r\n            </button>\r\n            <button\r\n              onClick={buyTicketWithETH}\r\n              disabled={isLoading}\r\n              className=\"bg-green-500 text-white px-4 py-2 rounded hover:bg-green-600\"\r\n            >\r\n              {isLoading ? t('purchasing') : t('buyTicketWithETH')}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Lottery Section */}\r\n      <div>\r\n        <h2 className=\"text-xl font-bold mb-2 text-white\">{t('lottery')}</h2>\r\n        <div className=\"bg-white p-6 rounded-lg shadow-md\">\r\n          <p className=\"text-lg mb-4\">{t('lotteryInfo')}</p>\r\n          <p className=\"text-lg mb-4\">{t('yourTicketsInLottery')}: {userTicketsInLottery}</p>\r\n          <p className=\"text-lg mb-4\">{t('currentParticipants')}: {participants.length}</p>\r\n          <div className=\"space-y-4\">\r\n            <div>\r\n              <label className=\"block mb-1\">{t('ticketsToUse')}:</label>\r\n              <input\r\n                type=\"number\"\r\n                min=\"1\"\r\n                max={tickets}\r\n                onChange={(e) => setUserTicketsInLottery(parseInt(e.target.value) || 0)}\r\n                className=\"border p-2 rounded w-32\"\r\n              />\r\n              <button\r\n                onClick={() => joinLottery(userTicketsInLottery)}\r\n                className=\"ml-2 bg-purple-500 text-white px-4 py-2 rounded hover:bg-purple-600\"\r\n              >\r\n                {t('joinLottery')}\r\n              </button>\r\n            </div>\r\n            <button\r\n              onClick={drawLottery}\r\n              className=\"bg-red-500 text-white px-4 py-2 rounded hover:bg-red-600\"\r\n            >\r\n              {t('forceDraw')}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Missions;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}