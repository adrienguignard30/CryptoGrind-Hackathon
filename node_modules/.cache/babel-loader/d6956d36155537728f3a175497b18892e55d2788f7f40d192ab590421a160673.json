{"ast":null,"code":"// Copyright (c) 2018-2023 Coinbase, Inc. <https://www.coinbase.com/>\nimport { APP_VERSION_KEY, WALLET_USER_NAME_KEY } from '../constants.js';\nimport { WalletLinkCipher } from './WalletLinkCipher.js';\nimport { WalletLinkHTTP } from './WalletLinkHTTP.js';\nimport { ConnectionState, WalletLinkWebSocket } from './WalletLinkWebSocket.js';\nimport { IntNumber } from '../../../../core/type/index.js';\nconst HEARTBEAT_INTERVAL = 10000;\nconst REQUEST_TIMEOUT = 60000;\n/**\n * Coinbase Wallet Connection\n */\nexport class WalletLinkConnection {\n  /**\n   * Constructor\n   * @param session Session\n   * @param linkAPIUrl Coinbase Wallet link server URL\n   * @param listener WalletLinkConnectionUpdateListener\n   * @param [WebSocketClass] Custom WebSocket implementation\n   */\n  constructor({\n    session,\n    linkAPIUrl,\n    listener\n  }) {\n    this.destroyed = false;\n    this.lastHeartbeatResponse = 0;\n    this.nextReqId = IntNumber(1);\n    /**\n     * true if connected and authenticated, else false\n     * runs listener when connected status changes\n     */\n    this._connected = false;\n    /**\n     * true if linked (a guest has joined before)\n     * runs listener when linked status changes\n     */\n    this._linked = false;\n    this.shouldFetchUnseenEventsOnConnect = false;\n    this.requestResolutions = new Map();\n    this.handleSessionMetadataUpdated = metadata => {\n      if (!metadata) return;\n      // Map of metadata key to handler function\n      const handlers = new Map([['__destroyed', this.handleDestroyed], ['EthereumAddress', this.handleAccountUpdated], ['WalletUsername', this.handleWalletUsernameUpdated], ['AppVersion', this.handleAppVersionUpdated], ['ChainId',\n      // ChainId and JsonRpcUrl are always updated together\n      v => metadata.JsonRpcUrl && this.handleChainUpdated(v, metadata.JsonRpcUrl)]]);\n      // call handler for each metadata key if value is defined\n      handlers.forEach((handler, key) => {\n        const value = metadata[key];\n        if (value === undefined) return;\n        handler(value);\n      });\n    };\n    this.handleDestroyed = __destroyed => {\n      var _a;\n      if (__destroyed !== '1') return;\n      (_a = this.listener) === null || _a === void 0 ? void 0 : _a.resetAndReload();\n    };\n    this.handleAccountUpdated = async encryptedEthereumAddress => {\n      var _a;\n      const address = await this.cipher.decrypt(encryptedEthereumAddress);\n      (_a = this.listener) === null || _a === void 0 ? void 0 : _a.accountUpdated(address);\n    };\n    this.handleMetadataUpdated = async (key, encryptedMetadataValue) => {\n      var _a;\n      const decryptedValue = await this.cipher.decrypt(encryptedMetadataValue);\n      (_a = this.listener) === null || _a === void 0 ? void 0 : _a.metadataUpdated(key, decryptedValue);\n    };\n    this.handleWalletUsernameUpdated = async walletUsername => {\n      this.handleMetadataUpdated(WALLET_USER_NAME_KEY, walletUsername);\n    };\n    this.handleAppVersionUpdated = async appVersion => {\n      this.handleMetadataUpdated(APP_VERSION_KEY, appVersion);\n    };\n    this.handleChainUpdated = async (encryptedChainId, encryptedJsonRpcUrl) => {\n      var _a;\n      const chainId = await this.cipher.decrypt(encryptedChainId);\n      const jsonRpcUrl = await this.cipher.decrypt(encryptedJsonRpcUrl);\n      (_a = this.listener) === null || _a === void 0 ? void 0 : _a.chainUpdated(chainId, jsonRpcUrl);\n    };\n    this.session = session;\n    this.cipher = new WalletLinkCipher(session.secret);\n    this.listener = listener;\n    const ws = new WalletLinkWebSocket(`${linkAPIUrl}/rpc`, WebSocket);\n    ws.setConnectionStateListener(async state => {\n      // attempt to reconnect every 5 seconds when disconnected\n      let connected = false;\n      switch (state) {\n        case ConnectionState.DISCONNECTED:\n          // if DISCONNECTED and not destroyed\n          if (!this.destroyed) {\n            const connect = async () => {\n              // wait 5 seconds\n              await new Promise(resolve => setTimeout(resolve, 5000));\n              // check whether it's destroyed again\n              if (!this.destroyed) {\n                // reconnect\n                ws.connect().catch(() => {\n                  connect();\n                });\n              }\n            };\n            connect();\n          }\n          break;\n        case ConnectionState.CONNECTED:\n          // perform authentication upon connection\n          // if CONNECTED, authenticate, and then check link status\n          connected = await this.handleConnected();\n          // send heartbeat every n seconds while connected\n          // if CONNECTED, start the heartbeat timer\n          // first timer event updates lastHeartbeat timestamp\n          // subsequent calls send heartbeat message\n          this.updateLastHeartbeat();\n          setInterval(() => {\n            this.heartbeat();\n          }, HEARTBEAT_INTERVAL);\n          // check for unseen events\n          if (this.shouldFetchUnseenEventsOnConnect) {\n            this.fetchUnseenEventsAPI();\n          }\n          break;\n        case ConnectionState.CONNECTING:\n          break;\n      }\n      // distinctUntilChanged\n      if (this.connected !== connected) {\n        this.connected = connected;\n      }\n    });\n    ws.setIncomingDataListener(m => {\n      var _a;\n      switch (m.type) {\n        // handle server's heartbeat responses\n        case 'Heartbeat':\n          this.updateLastHeartbeat();\n          return;\n        // handle link status updates\n        case 'IsLinkedOK':\n        case 'Linked':\n          {\n            const linked = m.type === 'IsLinkedOK' ? m.linked : undefined;\n            this.linked = linked || m.onlineGuests > 0;\n            break;\n          }\n        // handle session config updates\n        case 'GetSessionConfigOK':\n        case 'SessionConfigUpdated':\n          {\n            this.handleSessionMetadataUpdated(m.metadata);\n            break;\n          }\n        case 'Event':\n          {\n            this.handleIncomingEvent(m);\n            break;\n          }\n      }\n      // resolve request promises\n      if (m.id !== undefined) {\n        (_a = this.requestResolutions.get(m.id)) === null || _a === void 0 ? void 0 : _a(m);\n      }\n    });\n    this.ws = ws;\n    this.http = new WalletLinkHTTP(linkAPIUrl, session.id, session.key);\n  }\n  /**\n   * Make a connection to the server\n   */\n  connect() {\n    if (this.destroyed) {\n      throw new Error('instance is destroyed');\n    }\n    this.ws.connect();\n  }\n  /**\n   * Terminate connection, and mark as destroyed. To reconnect, create a new\n   * instance of WalletSDKConnection\n   */\n  async destroy() {\n    if (this.destroyed) return;\n    await this.makeRequest({\n      type: 'SetSessionConfig',\n      id: IntNumber(this.nextReqId++),\n      sessionId: this.session.id,\n      metadata: {\n        __destroyed: '1'\n      }\n    }, {\n      timeout: 1000\n    });\n    this.destroyed = true;\n    this.ws.disconnect();\n    this.listener = undefined;\n  }\n  get connected() {\n    return this._connected;\n  }\n  set connected(connected) {\n    this._connected = connected;\n  }\n  get linked() {\n    return this._linked;\n  }\n  set linked(linked) {\n    var _a, _b;\n    this._linked = linked;\n    if (linked) (_a = this.onceLinked) === null || _a === void 0 ? void 0 : _a.call(this);\n    (_b = this.listener) === null || _b === void 0 ? void 0 : _b.linkedUpdated(linked);\n  }\n  setOnceLinked(callback) {\n    return new Promise(resolve => {\n      if (this.linked) {\n        callback().then(resolve);\n      } else {\n        this.onceLinked = () => {\n          callback().then(resolve);\n          this.onceLinked = undefined;\n        };\n      }\n    });\n  }\n  async handleIncomingEvent(m) {\n    var _a;\n    if (m.type !== 'Event' || m.event !== 'Web3Response') {\n      return;\n    }\n    const decryptedData = await this.cipher.decrypt(m.data);\n    const message = JSON.parse(decryptedData);\n    if (message.type !== 'WEB3_RESPONSE') return;\n    const {\n      id,\n      response\n    } = message;\n    (_a = this.listener) === null || _a === void 0 ? void 0 : _a.handleWeb3ResponseMessage(id, response);\n  }\n  async checkUnseenEvents() {\n    if (!this.connected) {\n      this.shouldFetchUnseenEventsOnConnect = true;\n      return;\n    }\n    await new Promise(resolve => setTimeout(resolve, 250));\n    try {\n      await this.fetchUnseenEventsAPI();\n    } catch (e) {\n      console.error('Unable to check for unseen events', e);\n    }\n  }\n  async fetchUnseenEventsAPI() {\n    this.shouldFetchUnseenEventsOnConnect = false;\n    const responseEvents = await this.http.fetchUnseenEvents();\n    responseEvents.forEach(e => this.handleIncomingEvent(e));\n  }\n  /**\n   * Publish an event and emit event ID when successful\n   * @param event event name\n   * @param unencryptedData unencrypted event data\n   * @param callWebhook whether the webhook should be invoked\n   * @returns a Promise that emits event ID when successful\n   */\n  async publishEvent(event, unencryptedData, callWebhook = false) {\n    const data = await this.cipher.encrypt(JSON.stringify(Object.assign(Object.assign({}, unencryptedData), {\n      origin: location.origin,\n      location: location.href,\n      relaySource: 'coinbaseWalletExtension' in window && window.coinbaseWalletExtension ? 'injected_sdk' : 'sdk'\n    })));\n    const message = {\n      type: 'PublishEvent',\n      id: IntNumber(this.nextReqId++),\n      sessionId: this.session.id,\n      event,\n      data,\n      callWebhook\n    };\n    return this.setOnceLinked(async () => {\n      const res = await this.makeRequest(message);\n      if (res.type === 'Fail') {\n        throw new Error(res.error || 'failed to publish event');\n      }\n      return res.eventId;\n    });\n  }\n  sendData(message) {\n    this.ws.sendData(JSON.stringify(message));\n  }\n  updateLastHeartbeat() {\n    this.lastHeartbeatResponse = Date.now();\n  }\n  heartbeat() {\n    if (Date.now() - this.lastHeartbeatResponse > HEARTBEAT_INTERVAL * 2) {\n      this.ws.disconnect();\n      return;\n    }\n    try {\n      this.ws.sendData('h');\n    } catch (_a) {\n      // noop\n    }\n  }\n  async makeRequest(message, options = {\n    timeout: REQUEST_TIMEOUT\n  }) {\n    const reqId = message.id;\n    this.sendData(message);\n    // await server message with corresponding id\n    let timeoutId;\n    return Promise.race([new Promise((_, reject) => {\n      timeoutId = window.setTimeout(() => {\n        reject(new Error(`request ${reqId} timed out`));\n      }, options.timeout);\n    }), new Promise(resolve => {\n      this.requestResolutions.set(reqId, m => {\n        clearTimeout(timeoutId); // clear the timeout\n        resolve(m);\n        this.requestResolutions.delete(reqId);\n      });\n    })]);\n  }\n  async handleConnected() {\n    const res = await this.makeRequest({\n      type: 'HostSession',\n      id: IntNumber(this.nextReqId++),\n      sessionId: this.session.id,\n      sessionKey: this.session.key\n    });\n    if (res.type === 'Fail') return false;\n    this.sendData({\n      type: 'IsLinked',\n      id: IntNumber(this.nextReqId++),\n      sessionId: this.session.id\n    });\n    this.sendData({\n      type: 'GetSessionConfig',\n      id: IntNumber(this.nextReqId++),\n      sessionId: this.session.id\n    });\n    return true;\n  }\n}","map":{"version":3,"names":["APP_VERSION_KEY","WALLET_USER_NAME_KEY","WalletLinkCipher","WalletLinkHTTP","ConnectionState","WalletLinkWebSocket","IntNumber","HEARTBEAT_INTERVAL","REQUEST_TIMEOUT","WalletLinkConnection","constructor","session","linkAPIUrl","listener","destroyed","lastHeartbeatResponse","nextReqId","_connected","_linked","shouldFetchUnseenEventsOnConnect","requestResolutions","Map","handleSessionMetadataUpdated","metadata","handlers","handleDestroyed","handleAccountUpdated","handleWalletUsernameUpdated","handleAppVersionUpdated","v","JsonRpcUrl","handleChainUpdated","forEach","handler","key","value","undefined","__destroyed","_a","resetAndReload","encryptedEthereumAddress","address","cipher","decrypt","accountUpdated","handleMetadataUpdated","encryptedMetadataValue","decryptedValue","metadataUpdated","walletUsername","appVersion","encryptedChainId","encryptedJsonRpcUrl","chainId","jsonRpcUrl","chainUpdated","secret","ws","WebSocket","setConnectionStateListener","state","connected","DISCONNECTED","connect","Promise","resolve","setTimeout","catch","CONNECTED","handleConnected","updateLastHeartbeat","setInterval","heartbeat","fetchUnseenEventsAPI","CONNECTING","setIncomingDataListener","m","type","linked","onlineGuests","handleIncomingEvent","id","get","http","Error","destroy","makeRequest","sessionId","timeout","disconnect","onceLinked","call","_b","linkedUpdated","setOnceLinked","callback","then","event","decryptedData","data","message","JSON","parse","response","handleWeb3ResponseMessage","checkUnseenEvents","e","console","error","responseEvents","fetchUnseenEvents","publishEvent","unencryptedData","callWebhook","encrypt","stringify","Object","assign","origin","location","href","relaySource","window","coinbaseWalletExtension","res","eventId","sendData","Date","now","options","reqId","timeoutId","race","_","reject","set","clearTimeout","delete","sessionKey"],"sources":["../../../../../src/sign/walletlink/relay/connection/WalletLinkConnection.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}