{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Adrien\\\\Desktop\\\\CryptoGrind - Copie\\\\client\\\\src\\\\pages\\\\Missions.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from 'react';\nimport { GrindContext } from '../App';\nimport { useSendTransaction } from 'wagmi';\nimport { parseEther } from 'viem';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Missions() {\n  _s();\n  const {\n    grindBalance,\n    account\n  } = useContext(GrindContext);\n\n  // Log pour vérifier les variables d'environnement\n  console.log('Variables d\\'environnement :', {\n    clientId: process.env.REACT_APP_X_CLIENT_ID,\n    clientSecret: process.env.REACT_APP_X_CLIENT_SECRET,\n    apiToken: process.env.REACT_APP_X_API_TOKEN\n  });\n\n  // State for tickets, total tickets, and participants\n  const [tickets, setTickets] = useState(() => parseInt(localStorage.getItem('userTickets')) || 0);\n  const [totalTickets, setTotalTickets] = useState(() => parseInt(localStorage.getItem('totalTickets')) || 0);\n  const [participants, setParticipants] = useState(() => {\n    const savedParticipants = localStorage.getItem('lotteryParticipants');\n    return savedParticipants ? JSON.parse(savedParticipants) : [];\n  });\n  const [userTicketsInLottery, setUserTicketsInLottery] = useState(0);\n  const [lastLotteryDate, setLastLotteryDate] = useState(() => localStorage.getItem('lastLotteryDate') || null);\n  const [missionsStatus, setMissionsStatus] = useState(() => {\n    const savedMissions = localStorage.getItem(`missionsStatus_${account}`);\n    return savedMissions ? JSON.parse(savedMissions) : {\n      tweet1Like: false,\n      tweet1Retweet: false,\n      tweet1Reply: false,\n      tweet2Like: false,\n      tweet2Retweet: false,\n      tweet2Reply: false,\n      tweet3Like: false,\n      tweet3Retweet: false,\n      tweet3Reply: false,\n      abstractVote: false\n    };\n  });\n  const [userXId, setUserXId] = useState(() => localStorage.getItem(`xUserId_${account}`) || null);\n  const [tweetsDetails, setTweetsDetails] = useState([]);\n\n  // List of tweets (ADD OR MODIFY TWEET LINKS HERE)\n  const tweets = [{\n    id: 'tweet1',\n    tweetId: '1911158667698749614',\n    url: 'https://x.com/bearish_af/status/1911158667698749614',\n    text: 'Tweet by @bearish_af - Join the $GRIND vibe!'\n  }, {\n    id: 'tweet2',\n    tweetId: '1912563448463995040',\n    url: 'https://x.com/Adrienfam_arts/status/1912563448463995040',\n    text: 'Tweet by @Adrienfam_arts - Amazing $GRIND art!'\n  }, {\n    id: 'tweet3',\n    tweetId: '1912265705359110144',\n    url: 'https://x.com/Adrienfam_a/status/1912265705359110144',\n    text: 'Tweet by @Adrienfam_a'\n  }];\n\n  // Payment with ETH\n  const {\n    sendTransaction,\n    isLoading,\n    isSuccess,\n    error\n  } = useSendTransaction();\n  const LOTTERY_ADDRESS = '0x62100eBD5A41133723e91613755AB8dc65C3a13D';\n\n  // Save data to localStorage\n  useEffect(() => {\n    localStorage.setItem('userTickets', tickets.toString());\n    localStorage.setItem('totalTickets', totalTickets.toString());\n    localStorage.setItem('lotteryParticipants', JSON.stringify(participants));\n    localStorage.setItem('lastLotteryDate', lastLotteryDate || '');\n    localStorage.setItem(`missionsStatus_${account}`, JSON.stringify(missionsStatus));\n    if (userXId) {\n      localStorage.setItem(`xUserId_${account}`, userXId);\n    }\n  }, [tickets, totalTickets, participants, lastLotteryDate, missionsStatus, userXId, account]);\n\n  // Automatically check for lottery every 1000 tickets\n  useEffect(() => {\n    if (totalTickets >= 1000) {\n      if (!lastLotteryDate || new Date(lastLotteryDate).getTime() < new Date().getTime() - 1000 * 60) {\n        drawLottery();\n      }\n    }\n  }, [totalTickets]);\n\n  // Fetch tweet details (simplified for testing authentication)\n  useEffect(() => {\n    const fetchTweetsDetails = async () => {\n      const X_API_TOKEN = process.env.REACT_APP_X_API_TOKEN;\n      if (!X_API_TOKEN) {\n        console.error('Bearer Token manquant dans les variables d\\'environnement');\n        return;\n      }\n\n      // Test avec un seul tweet et sans expansions pour simplifier\n      const tweetId = tweets[0].tweetId; // On teste avec le premier tweet\n      try {\n        const response = await axios.get(`https://api.x.com/2/tweets/${tweetId}`, {\n          params: {\n            'tweet.fields': 'text,created_at'\n          },\n          headers: {\n            Authorization: `Bearer ${X_API_TOKEN}`\n          }\n        });\n        const tweetsData = [{\n          id: response.data.data.id,\n          text: response.data.data.text,\n          image: null // Pas d'image pour l'instant\n        }];\n        setTweetsDetails(tweetsData);\n      } catch (error) {\n        var _error$response;\n        console.error('Erreur lors de la récupération des tweets :', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n        setTweetsDetails(tweets.map(tweet => ({\n          id: tweet.tweetId,\n          text: tweet.text,\n          image: null\n        })));\n      }\n    };\n    fetchTweetsDetails();\n  }, []);\n\n  // Fonction pour connecter le compte X (OAuth flow)\n  const connectXAccount = async () => {\n    const X_CLIENT_ID = process.env.REACT_APP_X_CLIENT_ID;\n    if (!X_CLIENT_ID) {\n      console.error('Client ID manquant dans les variables d\\'environnement');\n      return;\n    }\n    const redirectUri = 'http://localhost:3001/callback'; // Port 3001\n    const authUrl = `https://api.x.com/2/oauth2/authorize?client_id=${X_CLIENT_ID}&redirect_uri=${redirectUri}&scope=tweet.read%20users.read%20likes.read&response_type=code&state=state123`;\n    window.location.href = authUrl;\n  };\n\n  // Gérer le callback OAuth\n  useEffect(() => {\n    const urlParams = new URLSearchParams(window.location.search);\n    const code = urlParams.get('code');\n    if (code) {\n      const X_CLIENT_ID = process.env.REACT_APP_X_CLIENT_ID;\n      const X_CLIENT_SECRET = process.env.REACT_APP_X_CLIENT_SECRET;\n      if (!X_CLIENT_ID || !X_CLIENT_SECRET) {\n        console.error('Client ID ou Client Secret manquant dans les variables d\\'environnement');\n        return;\n      }\n      axios.post('https://api.x.com/2/oauth2/token', {\n        code,\n        grant_type: 'authorization_code',\n        client_id: X_CLIENT_ID,\n        client_secret: X_CLIENT_SECRET,\n        redirect_uri: 'http://localhost:3001/callback'\n      }).then(response => {\n        const accessToken = response.data.access_token;\n        axios.get('https://api.x.com/2/users/me', {\n          headers: {\n            Authorization: `Bearer ${accessToken}`\n          }\n        }).then(userResponse => {\n          const userId = userResponse.data.data.id;\n          setUserXId(userId);\n          localStorage.setItem(`xUserId_${account}`, userId);\n        });\n      }).catch(error => {\n        var _error$response2;\n        console.error('Erreur lors du callback OAuth :', ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error.message);\n      });\n    }\n  }, [account]);\n\n  // Achat de ticket avec ETH\n  const buyTicketWithETH = () => {\n    const ticketPriceETH = '0.01'; // 0.01 ETH par ticket\n\n    if (!account) {\n      alert('Veuillez connecter votre wallet.');\n      return;\n    }\n    if (parseInt(grindBalance) < parseEther(ticketPriceETH)) {\n      alert(`Solde ETH insuffisant ! Vous avez besoin de ${ticketPriceETH} ETH pour acheter un ticket.`);\n      return;\n    }\n    sendTransaction({\n      to: LOTTERY_ADDRESS,\n      value: parseEther(ticketPriceETH)\n    });\n  };\n\n  // Mettre à jour les tickets après un achat réussi\n  useEffect(() => {\n    if (isSuccess) {\n      setTickets(prev => prev + 1);\n      setTotalTickets(prev => prev + 1);\n      alert('Vous avez acheté un ticket pour la loterie avec 0.01 ETH !');\n    }\n    if (error) {\n      alert(`Erreur lors de l'achat du ticket : ${error.message}`);\n    }\n  }, [isSuccess, error]);\n\n  // Vérifier les actions sur X (désactivé temporairement pour simplifier)\n  const verifyXAction = async (actionType, tweetId) => {\n    if (!userXId) {\n      alert('Veuillez connecter votre compte X pour vérifier les actions.');\n      return false;\n    }\n\n    // On désactive temporairement la vérification jusqu'à ce que l'authentification fonctionne\n    alert('Vérification désactivée temporairement. Simule un succès.');\n    return true; // Simulation\n  };\n\n  // Vérifier un vote sur Abstract (inchangé)\n  const verifyAbstractVote = async () => {\n    console.log('Vérification du vote sur Abstract...');\n    return true; // Simulation\n  };\n\n  // Compléter une mission et attribuer des tickets\n  const completeMission = async (action, tweetId = null) => {\n    let ticketsToAdd = 0;\n    let missionCompleted = false;\n    let missionKey = action;\n    if (tweetId) {\n      missionKey = `${tweetId}${action}`; // e.g., \"tweet1Like\"\n    }\n    if (missionsStatus[missionKey]) {\n      alert(`Mission déjà complétée : ${action}.`);\n      return;\n    }\n    if (action === 'Like' || action === 'Retweet' || action === 'Reply') {\n      missionCompleted = await verifyXAction(action.toLowerCase(), tweetId);\n      ticketsToAdd = action === 'Like' ? 1 : 2; // +1 pour Like, +2 pour Retweet/Reply\n    } else if (action === 'abstractVote') {\n      missionCompleted = await verifyAbstractVote();\n      ticketsToAdd = 1;\n    }\n    if (missionCompleted) {\n      setTickets(prev => prev + ticketsToAdd);\n      setTotalTickets(prev => prev + ticketsToAdd);\n      setMissionsStatus(prev => ({\n        ...prev,\n        [missionKey]: true\n      }));\n      alert(`Mission complétée : ${action} ! +${ticketsToAdd} ticket(s)`);\n    } else {\n      alert(`Échec de la vérification pour la mission : ${action}. Veuillez réessayer.`);\n    }\n  };\n\n  // Rejoindre la loterie\n  const joinLottery = ticketCount => {\n    if (ticketCount > tickets) {\n      alert(\"Vous n'avez pas assez de tickets !\");\n      return;\n    }\n    if (ticketCount <= 0) {\n      alert(\"Veuillez entrer un nombre de tickets supérieur à 0.\");\n      return;\n    }\n    const updatedParticipants = [...participants, {\n      user: account || 'Utilisateur',\n      tickets: ticketCount\n    }];\n    setParticipants(updatedParticipants);\n    setTickets(prev => prev - ticketCount);\n    setUserTicketsInLottery(prev => prev + ticketCount);\n    alert(`Vous avez rejoint la loterie avec ${ticketCount} tickets !`);\n  };\n\n  // Tirer la loterie\n  const drawLottery = () => {\n    const totalLotteryTickets = participants.reduce((sum, p) => sum + p.tickets, 0);\n    if (totalLotteryTickets === 0) {\n      alert(\"Aucun participant dans la loterie !\");\n      return;\n    }\n    const randomTicket = Math.floor(Math.random() * totalLotteryTickets);\n    let cumulativeTickets = 0;\n    let winner = null;\n    for (const participant of participants) {\n      cumulativeTickets += participant.tickets;\n      if (randomTicket < cumulativeTickets) {\n        winner = participant;\n        break;\n      }\n    }\n    if (winner) {\n      alert(`${winner.user} a gagné un paquet de café Making Coffee avec ${winner.tickets} tickets !`);\n    }\n    setParticipants([]);\n    setTotalTickets(0);\n    setUserTicketsInLottery(0);\n    setLastLotteryDate(new Date().toISOString());\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4 text-center\",\n    style: {\n      backgroundColor: '#1a3c34',\n      minHeight: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold mb-4 text-white\",\n      children: \"Missions et Loterie\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-bold mb-2 text-white\",\n        children: \"Missions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-6 rounded-lg shadow-md\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-lg mb-4\",\n          children: [\"Nombre de tickets : \", tickets]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-lg mb-4\",\n          children: [\"Solde ETH : \", (parseInt(grindBalance) / 1e18).toFixed(4), \" ETH\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-lg mb-4\",\n          children: [\"Total des tickets (tous les joueurs) : \", totalTickets]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 11\n        }, this), !userXId && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: connectXAccount,\n            className: \"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600\",\n            children: \"Connecter le compte X\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-6\",\n          children: tweets.map(tweet => {\n            const tweetDetail = tweetsDetails.find(td => td.id === tweet.tweetId);\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"border p-4 rounded-lg\",\n              children: [/*#__PURE__*/_jsxDEV(\"a\", {\n                href: tweet.url,\n                target: \"_blank\",\n                rel: \"noopener noreferrer\",\n                className: \"text-blue-500 hover:underline\",\n                children: (tweetDetail === null || tweetDetail === void 0 ? void 0 : tweetDetail.text) || tweet.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 331,\n                columnNumber: 19\n              }, this), (tweetDetail === null || tweetDetail === void 0 ? void 0 : tweetDetail.image) && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mt-2 flex justify-center\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: tweetDetail.image,\n                  alt: \"Tweet Media\",\n                  className: \"max-w-full h-auto rounded-lg shadow-lg transition-transform duration-300 hover:scale-105\",\n                  style: {\n                    maxWidth: '500px'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 341,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 340,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mt-2 space-x-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => completeMission('Like', tweet.id),\n                  disabled: !userXId,\n                  className: \"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600 disabled:bg-gray-400\",\n                  children: \"Like (+1 ticket)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 350,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => completeMission('Retweet', tweet.id),\n                  disabled: !userXId,\n                  className: \"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600 disabled:bg-gray-400\",\n                  children: \"Retweet (+2 tickets)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 357,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => completeMission('Reply', tweet.id),\n                  disabled: !userXId,\n                  className: \"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600 disabled:bg-gray-400\",\n                  children: \"Reply (+2 tickets)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 364,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 349,\n                columnNumber: 19\n              }, this)]\n            }, tweet.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-4 mt-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => completeMission('abstractVote'),\n            className: \"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600\",\n            children: \"Voter sur Abstract (+1 ticket)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: buyTicketWithETH,\n            disabled: isLoading,\n            className: \"bg-green-500 text-white px-4 py-2 rounded hover:bg-green-600\",\n            children: isLoading ? 'Achat en cours...' : 'Acheter un ticket avec 0.01 ETH'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-bold mb-2 text-white\",\n        children: \"Loterie\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-6 rounded-lg shadow-md\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-lg mb-4\",\n          children: \"La loterie se d\\xE9clenche automatiquement tous les 1000 tickets. Vous pouvez forcer le tirage avec le bouton ci-dessous. Tous les 1000 tickets, un paquet de caf\\xE9 Making Coffee est mis en jeu !\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-lg mb-4\",\n          children: [\"Vos tickets dans la loterie : \", userTicketsInLottery]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-lg mb-4\",\n          children: [\"Participants actuels : \", participants.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block mb-1\",\n              children: \"Nombre de tickets \\xE0 utiliser :\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 408,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              min: \"1\",\n              max: tickets,\n              onChange: e => setUserTicketsInLottery(parseInt(e.target.value) || 0),\n              className: \"border p-2 rounded w-32\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 409,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => joinLottery(userTicketsInLottery),\n              className: \"ml-2 bg-purple-500 text-white px-4 py-2 rounded hover:bg-purple-600\",\n              children: \"Participer \\xE0 la loterie\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 416,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: drawLottery,\n            className: \"bg-red-500 text-white px-4 py-2 rounded hover:bg-red-600\",\n            children: \"Forcer le tirage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 303,\n    columnNumber: 5\n  }, this);\n}\n_s(Missions, \"YR93R5s4jphUOEbg+EGCQDjRxg4=\", false, function () {\n  return [useSendTransaction];\n});\n_c = Missions;\nexport default Missions;\nvar _c;\n$RefreshReg$(_c, \"Missions\");","map":{"version":3,"names":["React","useState","useEffect","useContext","GrindContext","useSendTransaction","parseEther","axios","jsxDEV","_jsxDEV","Missions","_s","grindBalance","account","console","log","clientId","process","env","REACT_APP_X_CLIENT_ID","clientSecret","REACT_APP_X_CLIENT_SECRET","apiToken","REACT_APP_X_API_TOKEN","tickets","setTickets","parseInt","localStorage","getItem","totalTickets","setTotalTickets","participants","setParticipants","savedParticipants","JSON","parse","userTicketsInLottery","setUserTicketsInLottery","lastLotteryDate","setLastLotteryDate","missionsStatus","setMissionsStatus","savedMissions","tweet1Like","tweet1Retweet","tweet1Reply","tweet2Like","tweet2Retweet","tweet2Reply","tweet3Like","tweet3Retweet","tweet3Reply","abstractVote","userXId","setUserXId","tweetsDetails","setTweetsDetails","tweets","id","tweetId","url","text","sendTransaction","isLoading","isSuccess","error","LOTTERY_ADDRESS","setItem","toString","stringify","Date","getTime","drawLottery","fetchTweetsDetails","X_API_TOKEN","response","get","params","headers","Authorization","tweetsData","data","image","_error$response","message","map","tweet","connectXAccount","X_CLIENT_ID","redirectUri","authUrl","window","location","href","urlParams","URLSearchParams","search","code","X_CLIENT_SECRET","post","grant_type","client_id","client_secret","redirect_uri","then","accessToken","access_token","userResponse","userId","catch","_error$response2","buyTicketWithETH","ticketPriceETH","alert","to","value","prev","verifyXAction","actionType","verifyAbstractVote","completeMission","action","ticketsToAdd","missionCompleted","missionKey","toLowerCase","joinLottery","ticketCount","updatedParticipants","user","totalLotteryTickets","reduce","sum","p","randomTicket","Math","floor","random","cumulativeTickets","winner","participant","toISOString","className","style","backgroundColor","minHeight","children","fileName","_jsxFileName","lineNumber","columnNumber","toFixed","onClick","tweetDetail","find","td","target","rel","src","alt","maxWidth","disabled","length","type","min","max","onChange","e","_c","$RefreshReg$"],"sources":["C:/Users/Adrien/Desktop/CryptoGrind - Copie/client/src/pages/Missions.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport { GrindContext } from '../App';\r\nimport { useSendTransaction } from 'wagmi';\r\nimport { parseEther } from 'viem';\r\nimport axios from 'axios';\r\n\r\nfunction Missions() {\r\n  const { grindBalance, account } = useContext(GrindContext);\r\n\r\n  // Log pour vérifier les variables d'environnement\r\n  console.log('Variables d\\'environnement :', {\r\n    clientId: process.env.REACT_APP_X_CLIENT_ID,\r\n    clientSecret: process.env.REACT_APP_X_CLIENT_SECRET,\r\n    apiToken: process.env.REACT_APP_X_API_TOKEN,\r\n  });\r\n\r\n  // State for tickets, total tickets, and participants\r\n  const [tickets, setTickets] = useState(() => parseInt(localStorage.getItem('userTickets')) || 0);\r\n  const [totalTickets, setTotalTickets] = useState(() => parseInt(localStorage.getItem('totalTickets')) || 0);\r\n  const [participants, setParticipants] = useState(() => {\r\n    const savedParticipants = localStorage.getItem('lotteryParticipants');\r\n    return savedParticipants ? JSON.parse(savedParticipants) : [];\r\n  });\r\n  const [userTicketsInLottery, setUserTicketsInLottery] = useState(0);\r\n  const [lastLotteryDate, setLastLotteryDate] = useState(() => localStorage.getItem('lastLotteryDate') || null);\r\n  const [missionsStatus, setMissionsStatus] = useState(() => {\r\n    const savedMissions = localStorage.getItem(`missionsStatus_${account}`);\r\n    return savedMissions ? JSON.parse(savedMissions) : {\r\n      tweet1Like: false,\r\n      tweet1Retweet: false,\r\n      tweet1Reply: false,\r\n      tweet2Like: false,\r\n      tweet2Retweet: false,\r\n      tweet2Reply: false,\r\n      tweet3Like: false,\r\n      tweet3Retweet: false,\r\n      tweet3Reply: false,\r\n      abstractVote: false,\r\n    };\r\n  });\r\n  const [userXId, setUserXId] = useState(() => localStorage.getItem(`xUserId_${account}`) || null);\r\n  const [tweetsDetails, setTweetsDetails] = useState([]);\r\n\r\n  // List of tweets (ADD OR MODIFY TWEET LINKS HERE)\r\n  const tweets = [\r\n    {\r\n      id: 'tweet1',\r\n      tweetId: '1911158667698749614',\r\n      url: 'https://x.com/bearish_af/status/1911158667698749614',\r\n      text: 'Tweet by @bearish_af - Join the $GRIND vibe!',\r\n    },\r\n    {\r\n      id: 'tweet2',\r\n      tweetId: '1912563448463995040',\r\n      url: 'https://x.com/Adrienfam_arts/status/1912563448463995040',\r\n      text: 'Tweet by @Adrienfam_arts - Amazing $GRIND art!',\r\n    },\r\n    {\r\n      id: 'tweet3',\r\n      tweetId: '1912265705359110144',\r\n      url: 'https://x.com/Adrienfam_a/status/1912265705359110144',\r\n      text: 'Tweet by @Adrienfam_a',\r\n    },\r\n  ];\r\n\r\n  // Payment with ETH\r\n  const { sendTransaction, isLoading, isSuccess, error } = useSendTransaction();\r\n  const LOTTERY_ADDRESS = '0x62100eBD5A41133723e91613755AB8dc65C3a13D';\r\n\r\n  // Save data to localStorage\r\n  useEffect(() => {\r\n    localStorage.setItem('userTickets', tickets.toString());\r\n    localStorage.setItem('totalTickets', totalTickets.toString());\r\n    localStorage.setItem('lotteryParticipants', JSON.stringify(participants));\r\n    localStorage.setItem('lastLotteryDate', lastLotteryDate || '');\r\n    localStorage.setItem(`missionsStatus_${account}`, JSON.stringify(missionsStatus));\r\n    if (userXId) {\r\n      localStorage.setItem(`xUserId_${account}`, userXId);\r\n    }\r\n  }, [tickets, totalTickets, participants, lastLotteryDate, missionsStatus, userXId, account]);\r\n\r\n  // Automatically check for lottery every 1000 tickets\r\n  useEffect(() => {\r\n    if (totalTickets >= 1000) {\r\n      if (!lastLotteryDate || new Date(lastLotteryDate).getTime() < new Date().getTime() - 1000 * 60) {\r\n        drawLottery();\r\n      }\r\n    }\r\n  }, [totalTickets]);\r\n\r\n  // Fetch tweet details (simplified for testing authentication)\r\n  useEffect(() => {\r\n    const fetchTweetsDetails = async () => {\r\n      const X_API_TOKEN = process.env.REACT_APP_X_API_TOKEN;\r\n      if (!X_API_TOKEN) {\r\n        console.error('Bearer Token manquant dans les variables d\\'environnement');\r\n        return;\r\n      }\r\n\r\n      // Test avec un seul tweet et sans expansions pour simplifier\r\n      const tweetId = tweets[0].tweetId; // On teste avec le premier tweet\r\n      try {\r\n        const response = await axios.get(`https://api.x.com/2/tweets/${tweetId}`, {\r\n          params: {\r\n            'tweet.fields': 'text,created_at',\r\n          },\r\n          headers: {\r\n            Authorization: `Bearer ${X_API_TOKEN}`,\r\n          },\r\n        });\r\n\r\n        const tweetsData = [{\r\n          id: response.data.data.id,\r\n          text: response.data.data.text,\r\n          image: null, // Pas d'image pour l'instant\r\n        }];\r\n\r\n        setTweetsDetails(tweetsData);\r\n      } catch (error) {\r\n        console.error('Erreur lors de la récupération des tweets :', error.response?.data || error.message);\r\n        setTweetsDetails(tweets.map(tweet => ({ id: tweet.tweetId, text: tweet.text, image: null })));\r\n      }\r\n    };\r\n\r\n    fetchTweetsDetails();\r\n  }, []);\r\n\r\n  // Fonction pour connecter le compte X (OAuth flow)\r\n  const connectXAccount = async () => {\r\n    const X_CLIENT_ID = process.env.REACT_APP_X_CLIENT_ID;\r\n    if (!X_CLIENT_ID) {\r\n      console.error('Client ID manquant dans les variables d\\'environnement');\r\n      return;\r\n    }\r\n    const redirectUri = 'http://localhost:3001/callback'; // Port 3001\r\n    const authUrl = `https://api.x.com/2/oauth2/authorize?client_id=${X_CLIENT_ID}&redirect_uri=${redirectUri}&scope=tweet.read%20users.read%20likes.read&response_type=code&state=state123`;\r\n    window.location.href = authUrl;\r\n  };\r\n\r\n  // Gérer le callback OAuth\r\n  useEffect(() => {\r\n    const urlParams = new URLSearchParams(window.location.search);\r\n    const code = urlParams.get('code');\r\n    if (code) {\r\n      const X_CLIENT_ID = process.env.REACT_APP_X_CLIENT_ID;\r\n      const X_CLIENT_SECRET = process.env.REACT_APP_X_CLIENT_SECRET;\r\n      if (!X_CLIENT_ID || !X_CLIENT_SECRET) {\r\n        console.error('Client ID ou Client Secret manquant dans les variables d\\'environnement');\r\n        return;\r\n      }\r\n      axios.post('https://api.x.com/2/oauth2/token', {\r\n        code,\r\n        grant_type: 'authorization_code',\r\n        client_id: X_CLIENT_ID,\r\n        client_secret: X_CLIENT_SECRET,\r\n        redirect_uri: 'http://localhost:3001/callback',\r\n      }).then(response => {\r\n        const accessToken = response.data.access_token;\r\n        axios.get('https://api.x.com/2/users/me', {\r\n          headers: { Authorization: `Bearer ${accessToken}` },\r\n        }).then(userResponse => {\r\n          const userId = userResponse.data.data.id;\r\n          setUserXId(userId);\r\n          localStorage.setItem(`xUserId_${account}`, userId);\r\n        });\r\n      }).catch(error => {\r\n        console.error('Erreur lors du callback OAuth :', error.response?.data || error.message);\r\n      });\r\n    }\r\n  }, [account]);\r\n\r\n  // Achat de ticket avec ETH\r\n  const buyTicketWithETH = () => {\r\n    const ticketPriceETH = '0.01'; // 0.01 ETH par ticket\r\n\r\n    if (!account) {\r\n      alert('Veuillez connecter votre wallet.');\r\n      return;\r\n    }\r\n    if (parseInt(grindBalance) < parseEther(ticketPriceETH)) {\r\n      alert(`Solde ETH insuffisant ! Vous avez besoin de ${ticketPriceETH} ETH pour acheter un ticket.`);\r\n      return;\r\n    }\r\n\r\n    sendTransaction({\r\n      to: LOTTERY_ADDRESS,\r\n      value: parseEther(ticketPriceETH),\r\n    });\r\n  };\r\n\r\n  // Mettre à jour les tickets après un achat réussi\r\n  useEffect(() => {\r\n    if (isSuccess) {\r\n      setTickets((prev) => prev + 1);\r\n      setTotalTickets((prev) => prev + 1);\r\n      alert('Vous avez acheté un ticket pour la loterie avec 0.01 ETH !');\r\n    }\r\n    if (error) {\r\n      alert(`Erreur lors de l'achat du ticket : ${error.message}`);\r\n    }\r\n  }, [isSuccess, error]);\r\n\r\n  // Vérifier les actions sur X (désactivé temporairement pour simplifier)\r\n  const verifyXAction = async (actionType, tweetId) => {\r\n    if (!userXId) {\r\n      alert('Veuillez connecter votre compte X pour vérifier les actions.');\r\n      return false;\r\n    }\r\n\r\n    // On désactive temporairement la vérification jusqu'à ce que l'authentification fonctionne\r\n    alert('Vérification désactivée temporairement. Simule un succès.');\r\n    return true; // Simulation\r\n  };\r\n\r\n  // Vérifier un vote sur Abstract (inchangé)\r\n  const verifyAbstractVote = async () => {\r\n    console.log('Vérification du vote sur Abstract...');\r\n    return true; // Simulation\r\n  };\r\n\r\n  // Compléter une mission et attribuer des tickets\r\n  const completeMission = async (action, tweetId = null) => {\r\n    let ticketsToAdd = 0;\r\n    let missionCompleted = false;\r\n    let missionKey = action;\r\n\r\n    if (tweetId) {\r\n      missionKey = `${tweetId}${action}`; // e.g., \"tweet1Like\"\r\n    }\r\n\r\n    if (missionsStatus[missionKey]) {\r\n      alert(`Mission déjà complétée : ${action}.`);\r\n      return;\r\n    }\r\n\r\n    if (action === 'Like' || action === 'Retweet' || action === 'Reply') {\r\n      missionCompleted = await verifyXAction(action.toLowerCase(), tweetId);\r\n      ticketsToAdd = action === 'Like' ? 1 : 2; // +1 pour Like, +2 pour Retweet/Reply\r\n    } else if (action === 'abstractVote') {\r\n      missionCompleted = await verifyAbstractVote();\r\n      ticketsToAdd = 1;\r\n    }\r\n\r\n    if (missionCompleted) {\r\n      setTickets((prev) => prev + ticketsToAdd);\r\n      setTotalTickets((prev) => prev + ticketsToAdd);\r\n      setMissionsStatus((prev) => ({ ...prev, [missionKey]: true }));\r\n      alert(`Mission complétée : ${action} ! +${ticketsToAdd} ticket(s)`);\r\n    } else {\r\n      alert(`Échec de la vérification pour la mission : ${action}. Veuillez réessayer.`);\r\n    }\r\n  };\r\n\r\n  // Rejoindre la loterie\r\n  const joinLottery = (ticketCount) => {\r\n    if (ticketCount > tickets) {\r\n      alert(\"Vous n'avez pas assez de tickets !\");\r\n      return;\r\n    }\r\n    if (ticketCount <= 0) {\r\n      alert(\"Veuillez entrer un nombre de tickets supérieur à 0.\");\r\n      return;\r\n    }\r\n\r\n    const updatedParticipants = [...participants, { user: account || 'Utilisateur', tickets: ticketCount }];\r\n    setParticipants(updatedParticipants);\r\n    setTickets((prev) => prev - ticketCount);\r\n    setUserTicketsInLottery((prev) => prev + ticketCount);\r\n    alert(`Vous avez rejoint la loterie avec ${ticketCount} tickets !`);\r\n  };\r\n\r\n  // Tirer la loterie\r\n  const drawLottery = () => {\r\n    const totalLotteryTickets = participants.reduce((sum, p) => sum + p.tickets, 0);\r\n    if (totalLotteryTickets === 0) {\r\n      alert(\"Aucun participant dans la loterie !\");\r\n      return;\r\n    }\r\n\r\n    const randomTicket = Math.floor(Math.random() * totalLotteryTickets);\r\n    let cumulativeTickets = 0;\r\n    let winner = null;\r\n\r\n    for (const participant of participants) {\r\n      cumulativeTickets += participant.tickets;\r\n      if (randomTicket < cumulativeTickets) {\r\n        winner = participant;\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (winner) {\r\n      alert(`${winner.user} a gagné un paquet de café Making Coffee avec ${winner.tickets} tickets !`);\r\n    }\r\n\r\n    setParticipants([]);\r\n    setTotalTickets(0);\r\n    setUserTicketsInLottery(0);\r\n    setLastLotteryDate(new Date().toISOString());\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-4 text-center\" style={{ backgroundColor: '#1a3c34', minHeight: '100vh' }}>\r\n      {/* Missions Section */}\r\n      <h1 className=\"text-2xl font-bold mb-4 text-white\">Missions et Loterie</h1>\r\n      <div className=\"mb-8\">\r\n        <h2 className=\"text-xl font-bold mb-2 text-white\">Missions</h2>\r\n        <div className=\"bg-white p-6 rounded-lg shadow-md\">\r\n          <p className=\"text-lg mb-4\">Nombre de tickets : {tickets}</p>\r\n          <p className=\"text-lg mb-4\">Solde ETH : {(parseInt(grindBalance) / 1e18).toFixed(4)} ETH</p>\r\n          <p className=\"text-lg mb-4\">Total des tickets (tous les joueurs) : {totalTickets}</p>\r\n\r\n          {/* Connect X Account */}\r\n          {!userXId && (\r\n            <div className=\"mb-4\">\r\n              <button\r\n                onClick={connectXAccount}\r\n                className=\"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600\"\r\n              >\r\n                Connecter le compte X\r\n              </button>\r\n            </div>\r\n          )}\r\n\r\n          {/* Tweet Missions */}\r\n          <div className=\"space-y-6\">\r\n            {tweets.map((tweet) => {\r\n              const tweetDetail = tweetsDetails.find(td => td.id === tweet.tweetId);\r\n              return (\r\n                <div key={tweet.id} className=\"border p-4 rounded-lg\">\r\n                  <a\r\n                    href={tweet.url}\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                    className=\"text-blue-500 hover:underline\"\r\n                  >\r\n                    {tweetDetail?.text || tweet.text}\r\n                  </a>\r\n                  {tweetDetail?.image && (\r\n                    <div className=\"mt-2 flex justify-center\">\r\n                      <img\r\n                        src={tweetDetail.image}\r\n                        alt=\"Tweet Media\"\r\n                        className=\"max-w-full h-auto rounded-lg shadow-lg transition-transform duration-300 hover:scale-105\"\r\n                        style={{ maxWidth: '500px' }}\r\n                      />\r\n                    </div>\r\n                  )}\r\n                  <div className=\"mt-2 space-x-2\">\r\n                    <button\r\n                      onClick={() => completeMission('Like', tweet.id)}\r\n                      disabled={!userXId}\r\n                      className=\"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600 disabled:bg-gray-400\"\r\n                    >\r\n                      Like (+1 ticket)\r\n                    </button>\r\n                    <button\r\n                      onClick={() => completeMission('Retweet', tweet.id)}\r\n                      disabled={!userXId}\r\n                      className=\"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600 disabled:bg-gray-400\"\r\n                    >\r\n                      Retweet (+2 tickets)\r\n                    </button>\r\n                    <button\r\n                      onClick={() => completeMission('Reply', tweet.id)}\r\n                      disabled={!userXId}\r\n                      className=\"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600 disabled:bg-gray-400\"\r\n                    >\r\n                      Reply (+2 tickets)\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n\r\n          {/* Other Missions */}\r\n          <div className=\"space-y-4 mt-6\">\r\n            <button\r\n              onClick={() => completeMission('abstractVote')}\r\n              className=\"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600\"\r\n            >\r\n              Voter sur Abstract (+1 ticket)\r\n            </button>\r\n            <button\r\n              onClick={buyTicketWithETH}\r\n              disabled={isLoading}\r\n              className=\"bg-green-500 text-white px-4 py-2 rounded hover:bg-green-600\"\r\n            >\r\n              {isLoading ? 'Achat en cours...' : 'Acheter un ticket avec 0.01 ETH'}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Lottery Section */}\r\n      <div>\r\n        <h2 className=\"text-xl font-bold mb-2 text-white\">Loterie</h2>\r\n        <div className=\"bg-white p-6 rounded-lg shadow-md\">\r\n          <p className=\"text-lg mb-4\">\r\n            La loterie se déclenche automatiquement tous les 1000 tickets. Vous pouvez forcer le tirage avec le bouton ci-dessous.\r\n            Tous les 1000 tickets, un paquet de café Making Coffee est mis en jeu !\r\n          </p>\r\n          <p className=\"text-lg mb-4\">Vos tickets dans la loterie : {userTicketsInLottery}</p>\r\n          <p className=\"text-lg mb-4\">Participants actuels : {participants.length}</p>\r\n          <div className=\"space-y-4\">\r\n            <div>\r\n              <label className=\"block mb-1\">Nombre de tickets à utiliser :</label>\r\n              <input\r\n                type=\"number\"\r\n                min=\"1\"\r\n                max={tickets}\r\n                onChange={(e) => setUserTicketsInLottery(parseInt(e.target.value) || 0)}\r\n                className=\"border p-2 rounded w-32\"\r\n              />\r\n              <button\r\n                onClick={() => joinLottery(userTicketsInLottery)}\r\n                className=\"ml-2 bg-purple-500 text-white px-4 py-2 rounded hover:bg-purple-600\"\r\n              >\r\n                Participer à la loterie\r\n              </button>\r\n            </div>\r\n            <button\r\n              onClick={drawLottery}\r\n              className=\"bg-red-500 text-white px-4 py-2 rounded hover:bg-red-600\"\r\n            >\r\n              Forcer le tirage\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Missions;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}