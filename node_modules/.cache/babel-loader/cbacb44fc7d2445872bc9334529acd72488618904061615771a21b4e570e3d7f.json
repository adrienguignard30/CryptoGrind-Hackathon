{"ast":null,"code":"// Copyright (c) 2018-2023 Coinbase, Inc. <https://www.coinbase.com/>\nexport var ConnectionState;\n(function (ConnectionState) {\n  ConnectionState[ConnectionState[\"DISCONNECTED\"] = 0] = \"DISCONNECTED\";\n  ConnectionState[ConnectionState[\"CONNECTING\"] = 1] = \"CONNECTING\";\n  ConnectionState[ConnectionState[\"CONNECTED\"] = 2] = \"CONNECTED\";\n})(ConnectionState || (ConnectionState = {}));\nexport class WalletLinkWebSocket {\n  setConnectionStateListener(listener) {\n    this.connectionStateListener = listener;\n  }\n  setIncomingDataListener(listener) {\n    this.incomingDataListener = listener;\n  }\n  /**\n   * Constructor\n   * @param url WebSocket server URL\n   * @param [WebSocketClass] Custom WebSocket implementation\n   */\n  constructor(url, WebSocketClass = WebSocket) {\n    this.WebSocketClass = WebSocketClass;\n    this.webSocket = null;\n    this.pendingData = [];\n    this.url = url.replace(/^http/, 'ws');\n  }\n  /**\n   * Make a websocket connection\n   * @returns a Promise that resolves when connected\n   */\n  async connect() {\n    if (this.webSocket) {\n      throw new Error('webSocket object is not null');\n    }\n    return new Promise((resolve, reject) => {\n      var _a;\n      let webSocket;\n      try {\n        this.webSocket = webSocket = new this.WebSocketClass(this.url);\n      } catch (err) {\n        reject(err);\n        return;\n      }\n      (_a = this.connectionStateListener) === null || _a === void 0 ? void 0 : _a.call(this, ConnectionState.CONNECTING);\n      webSocket.onclose = evt => {\n        var _a;\n        this.clearWebSocket();\n        reject(new Error(`websocket error ${evt.code}: ${evt.reason}`));\n        (_a = this.connectionStateListener) === null || _a === void 0 ? void 0 : _a.call(this, ConnectionState.DISCONNECTED);\n      };\n      webSocket.onopen = _ => {\n        var _a;\n        resolve();\n        (_a = this.connectionStateListener) === null || _a === void 0 ? void 0 : _a.call(this, ConnectionState.CONNECTED);\n        if (this.pendingData.length > 0) {\n          const pending = [...this.pendingData];\n          pending.forEach(data => this.sendData(data));\n          this.pendingData = [];\n        }\n      };\n      webSocket.onmessage = evt => {\n        var _a, _b;\n        if (evt.data === 'h') {\n          (_a = this.incomingDataListener) === null || _a === void 0 ? void 0 : _a.call(this, {\n            type: 'Heartbeat'\n          });\n        } else {\n          try {\n            const message = JSON.parse(evt.data);\n            (_b = this.incomingDataListener) === null || _b === void 0 ? void 0 : _b.call(this, message);\n          } catch (_c) {\n            /* empty */\n          }\n        }\n      };\n    });\n  }\n  /**\n   * Disconnect from server\n   */\n  disconnect() {\n    var _a;\n    const {\n      webSocket\n    } = this;\n    if (!webSocket) {\n      return;\n    }\n    this.clearWebSocket();\n    (_a = this.connectionStateListener) === null || _a === void 0 ? void 0 : _a.call(this, ConnectionState.DISCONNECTED);\n    this.connectionStateListener = undefined;\n    this.incomingDataListener = undefined;\n    try {\n      webSocket.close();\n    } catch (_b) {\n      // noop\n    }\n  }\n  /**\n   * Send data to server\n   * @param data text to send\n   */\n  sendData(data) {\n    const {\n      webSocket\n    } = this;\n    if (!webSocket) {\n      this.pendingData.push(data);\n      this.connect();\n      return;\n    }\n    webSocket.send(data);\n  }\n  clearWebSocket() {\n    const {\n      webSocket\n    } = this;\n    if (!webSocket) {\n      return;\n    }\n    this.webSocket = null;\n    webSocket.onclose = null;\n    webSocket.onerror = null;\n    webSocket.onmessage = null;\n    webSocket.onopen = null;\n  }\n}","map":{"version":3,"names":["ConnectionState","WalletLinkWebSocket","setConnectionStateListener","listener","connectionStateListener","setIncomingDataListener","incomingDataListener","constructor","url","WebSocketClass","WebSocket","webSocket","pendingData","replace","connect","Error","Promise","resolve","reject","err","_a","call","CONNECTING","onclose","evt","clearWebSocket","code","reason","DISCONNECTED","onopen","_","CONNECTED","length","pending","forEach","data","sendData","onmessage","type","message","JSON","parse","_b","_c","disconnect","undefined","close","push","send","onerror"],"sources":["../../../../../src/sign/walletlink/relay/connection/WalletLinkWebSocket.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}