{"ast":null,"code":"import { proxy, subscribe, snapshot } from 'valtio/vanilla';\nconst state$7 = proxy({\n  history: [\"ConnectWallet\"],\n  view: \"ConnectWallet\",\n  data: void 0\n});\nconst RouterCtrl = {\n  state: state$7,\n  subscribe(callback) {\n    return subscribe(state$7, () => callback(state$7));\n  },\n  push(view, data) {\n    if (view !== state$7.view) {\n      state$7.view = view;\n      if (data) {\n        state$7.data = data;\n      }\n      state$7.history.push(view);\n    }\n  },\n  reset(view) {\n    state$7.view = view;\n    state$7.history = [view];\n  },\n  replace(view) {\n    if (state$7.history.length > 1) {\n      state$7.history[state$7.history.length - 1] = view;\n      state$7.view = view;\n    }\n  },\n  goBack() {\n    if (state$7.history.length > 1) {\n      state$7.history.pop();\n      const [last] = state$7.history.slice(-1);\n      state$7.view = last;\n    }\n  },\n  setData(data) {\n    state$7.data = data;\n  }\n};\nconst CoreUtil = {\n  WALLETCONNECT_DEEPLINK_CHOICE: \"WALLETCONNECT_DEEPLINK_CHOICE\",\n  WCM_VERSION: \"WCM_VERSION\",\n  RECOMMENDED_WALLET_AMOUNT: 9,\n  isMobile() {\n    if (typeof window !== \"undefined\") {\n      return Boolean(window.matchMedia(\"(pointer:coarse)\").matches || /Android|webOS|iPhone|iPad|iPod|BlackBerry|Opera Mini/u.test(navigator.userAgent));\n    }\n    return false;\n  },\n  isAndroid() {\n    return CoreUtil.isMobile() && navigator.userAgent.toLowerCase().includes(\"android\");\n  },\n  isIos() {\n    const ua = navigator.userAgent.toLowerCase();\n    return CoreUtil.isMobile() && (ua.includes(\"iphone\") || ua.includes(\"ipad\"));\n  },\n  isHttpUrl(url) {\n    return url.startsWith(\"http://\") || url.startsWith(\"https://\");\n  },\n  isArray(data) {\n    return Array.isArray(data) && data.length > 0;\n  },\n  isTelegram() {\n    return typeof window !== \"undefined\" && (\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    Boolean(window.TelegramWebviewProxy) ||\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    Boolean(window.Telegram) ||\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    Boolean(window.TelegramWebviewProxyProto));\n  },\n  formatNativeUrl(appUrl, wcUri, name) {\n    if (CoreUtil.isHttpUrl(appUrl)) {\n      return this.formatUniversalUrl(appUrl, wcUri, name);\n    }\n    let safeAppUrl = appUrl;\n    if (!safeAppUrl.includes(\"://\")) {\n      safeAppUrl = appUrl.replaceAll(\"/\", \"\").replaceAll(\":\", \"\");\n      safeAppUrl = `${safeAppUrl}://`;\n    }\n    if (!safeAppUrl.endsWith(\"/\")) {\n      safeAppUrl = `${safeAppUrl}/`;\n    }\n    this.setWalletConnectDeepLink(safeAppUrl, name);\n    const encodedWcUrl = encodeURIComponent(wcUri);\n    return `${safeAppUrl}wc?uri=${encodedWcUrl}`;\n  },\n  formatUniversalUrl(appUrl, wcUri, name) {\n    if (!CoreUtil.isHttpUrl(appUrl)) {\n      return this.formatNativeUrl(appUrl, wcUri, name);\n    }\n    let safeAppUrl = appUrl;\n    if (safeAppUrl.startsWith(\"https://t.me\")) {\n      const formattedUri = Buffer.from(wcUri).toString(\"base64\").replace(/[=]/g, \"\");\n      if (safeAppUrl.endsWith(\"/\")) {\n        safeAppUrl = safeAppUrl.slice(0, -1);\n      }\n      this.setWalletConnectDeepLink(safeAppUrl, name);\n      const url = new URL(safeAppUrl);\n      url.searchParams.set(\"startapp\", formattedUri);\n      const link = url.toString();\n      return link;\n    }\n    if (!safeAppUrl.endsWith(\"/\")) {\n      safeAppUrl = `${safeAppUrl}/`;\n    }\n    this.setWalletConnectDeepLink(safeAppUrl, name);\n    const encodedWcUrl = encodeURIComponent(wcUri);\n    return `${safeAppUrl}wc?uri=${encodedWcUrl}`;\n  },\n  async wait(miliseconds) {\n    return new Promise(resolve => {\n      setTimeout(resolve, miliseconds);\n    });\n  },\n  openHref(href, target) {\n    const adjustedTarget = this.isTelegram() ? \"_blank\" : target;\n    window.open(href, adjustedTarget, \"noreferrer noopener\");\n  },\n  setWalletConnectDeepLink(href, name) {\n    try {\n      localStorage.setItem(CoreUtil.WALLETCONNECT_DEEPLINK_CHOICE, JSON.stringify({\n        href,\n        name\n      }));\n    } catch (e) {\n      console.info(\"Unable to set WalletConnect deep link\");\n    }\n  },\n  setWalletConnectAndroidDeepLink(wcUri) {\n    try {\n      const [href] = wcUri.split(\"?\");\n      localStorage.setItem(CoreUtil.WALLETCONNECT_DEEPLINK_CHOICE, JSON.stringify({\n        href,\n        name: \"Android\"\n      }));\n    } catch (e) {\n      console.info(\"Unable to set WalletConnect android deep link\");\n    }\n  },\n  removeWalletConnectDeepLink() {\n    try {\n      localStorage.removeItem(CoreUtil.WALLETCONNECT_DEEPLINK_CHOICE);\n    } catch (e) {\n      console.info(\"Unable to remove WalletConnect deep link\");\n    }\n  },\n  setModalVersionInStorage() {\n    try {\n      if (typeof localStorage !== \"undefined\") {\n        localStorage.setItem(CoreUtil.WCM_VERSION, \"2.7.0\");\n      }\n    } catch (e) {\n      console.info(\"Unable to set Web3Modal version in storage\");\n    }\n  },\n  getWalletRouterData() {\n    var _a;\n    const routerData = (_a = RouterCtrl.state.data) == null ? void 0 : _a.Wallet;\n    if (!routerData) {\n      throw new Error('Missing \"Wallet\" view data');\n    }\n    return routerData;\n  }\n};\nconst isEnabled = typeof location !== \"undefined\" && (location.hostname.includes(\"localhost\") || location.protocol.includes(\"https\"));\nconst state$6 = proxy({\n  enabled: isEnabled,\n  userSessionId: \"\",\n  events: [],\n  connectedWalletId: void 0\n});\nconst EventsCtrl = {\n  state: state$6,\n  subscribe(callback) {\n    return subscribe(state$6.events, () => callback(snapshot(state$6.events[state$6.events.length - 1])));\n  },\n  initialize() {\n    if (state$6.enabled && typeof (crypto == null ? void 0 : crypto.randomUUID) !== \"undefined\") {\n      state$6.userSessionId = crypto.randomUUID();\n    }\n  },\n  setConnectedWalletId(connectedWalletId) {\n    state$6.connectedWalletId = connectedWalletId;\n  },\n  click(data) {\n    if (state$6.enabled) {\n      const event = {\n        type: \"CLICK\",\n        name: data.name,\n        userSessionId: state$6.userSessionId,\n        timestamp: Date.now(),\n        data\n      };\n      state$6.events.push(event);\n    }\n  },\n  track(data) {\n    if (state$6.enabled) {\n      const event = {\n        type: \"TRACK\",\n        name: data.name,\n        userSessionId: state$6.userSessionId,\n        timestamp: Date.now(),\n        data\n      };\n      state$6.events.push(event);\n    }\n  },\n  view(data) {\n    if (state$6.enabled) {\n      const event = {\n        type: \"VIEW\",\n        name: data.name,\n        userSessionId: state$6.userSessionId,\n        timestamp: Date.now(),\n        data\n      };\n      state$6.events.push(event);\n    }\n  }\n};\nconst state$5 = proxy({\n  chains: void 0,\n  walletConnectUri: void 0,\n  isAuth: false,\n  isCustomDesktop: false,\n  isCustomMobile: false,\n  isDataLoaded: false,\n  isUiLoaded: false\n});\nconst OptionsCtrl = {\n  state: state$5,\n  subscribe(callback) {\n    return subscribe(state$5, () => callback(state$5));\n  },\n  setChains(chains) {\n    state$5.chains = chains;\n  },\n  setWalletConnectUri(walletConnectUri) {\n    state$5.walletConnectUri = walletConnectUri;\n  },\n  setIsCustomDesktop(isCustomDesktop) {\n    state$5.isCustomDesktop = isCustomDesktop;\n  },\n  setIsCustomMobile(isCustomMobile) {\n    state$5.isCustomMobile = isCustomMobile;\n  },\n  setIsDataLoaded(isDataLoaded) {\n    state$5.isDataLoaded = isDataLoaded;\n  },\n  setIsUiLoaded(isUiLoaded) {\n    state$5.isUiLoaded = isUiLoaded;\n  },\n  setIsAuth(isAuth) {\n    state$5.isAuth = isAuth;\n  }\n};\nconst state$4 = proxy({\n  projectId: \"\",\n  mobileWallets: void 0,\n  desktopWallets: void 0,\n  walletImages: void 0,\n  chains: void 0,\n  enableAuthMode: false,\n  enableExplorer: true,\n  explorerExcludedWalletIds: void 0,\n  explorerRecommendedWalletIds: void 0,\n  termsOfServiceUrl: void 0,\n  privacyPolicyUrl: void 0\n});\nconst ConfigCtrl = {\n  state: state$4,\n  subscribe(callback) {\n    return subscribe(state$4, () => callback(state$4));\n  },\n  setConfig(config) {\n    var _a, _b;\n    EventsCtrl.initialize();\n    OptionsCtrl.setChains(config.chains);\n    OptionsCtrl.setIsAuth(Boolean(config.enableAuthMode));\n    OptionsCtrl.setIsCustomMobile(Boolean((_a = config.mobileWallets) == null ? void 0 : _a.length));\n    OptionsCtrl.setIsCustomDesktop(Boolean((_b = config.desktopWallets) == null ? void 0 : _b.length));\n    CoreUtil.setModalVersionInStorage();\n    Object.assign(state$4, config);\n  }\n};\nvar __defProp$2 = Object.defineProperty;\nvar __getOwnPropSymbols$2 = Object.getOwnPropertySymbols;\nvar __hasOwnProp$2 = Object.prototype.hasOwnProperty;\nvar __propIsEnum$2 = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$2 = (obj, key, value) => key in obj ? __defProp$2(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\nvar __spreadValues$2 = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp$2.call(b, prop)) __defNormalProp$2(a, prop, b[prop]);\n  if (__getOwnPropSymbols$2) for (var prop of __getOwnPropSymbols$2(b)) {\n    if (__propIsEnum$2.call(b, prop)) __defNormalProp$2(a, prop, b[prop]);\n  }\n  return a;\n};\nconst W3M_API = \"https://explorer-api.walletconnect.com\";\nconst SDK_TYPE = \"wcm\";\nconst SDK_VERSION = `js-${\"2.7.0\"}`;\nasync function fetchListings(endpoint, params) {\n  const allParams = __spreadValues$2({\n    sdkType: SDK_TYPE,\n    sdkVersion: SDK_VERSION\n  }, params);\n  const url = new URL(endpoint, W3M_API);\n  url.searchParams.append(\"projectId\", ConfigCtrl.state.projectId);\n  Object.entries(allParams).forEach(([key, value]) => {\n    if (value) {\n      url.searchParams.append(key, String(value));\n    }\n  });\n  const request = await fetch(url);\n  return request.json();\n}\nconst ExplorerUtil = {\n  async getDesktopListings(params) {\n    return fetchListings(\"/w3m/v1/getDesktopListings\", params);\n  },\n  async getMobileListings(params) {\n    return fetchListings(\"/w3m/v1/getMobileListings\", params);\n  },\n  async getInjectedListings(params) {\n    return fetchListings(\"/w3m/v1/getInjectedListings\", params);\n  },\n  async getAllListings(params) {\n    return fetchListings(\"/w3m/v1/getAllListings\", params);\n  },\n  getWalletImageUrl(imageId) {\n    return `${W3M_API}/w3m/v1/getWalletImage/${imageId}?projectId=${ConfigCtrl.state.projectId}&sdkType=${SDK_TYPE}&sdkVersion=${SDK_VERSION}`;\n  },\n  getAssetImageUrl(imageId) {\n    return `${W3M_API}/w3m/v1/getAssetImage/${imageId}?projectId=${ConfigCtrl.state.projectId}&sdkType=${SDK_TYPE}&sdkVersion=${SDK_VERSION}`;\n  }\n};\nvar __defProp$1 = Object.defineProperty;\nvar __getOwnPropSymbols$1 = Object.getOwnPropertySymbols;\nvar __hasOwnProp$1 = Object.prototype.hasOwnProperty;\nvar __propIsEnum$1 = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$1 = (obj, key, value) => key in obj ? __defProp$1(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\nvar __spreadValues$1 = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp$1.call(b, prop)) __defNormalProp$1(a, prop, b[prop]);\n  if (__getOwnPropSymbols$1) for (var prop of __getOwnPropSymbols$1(b)) {\n    if (__propIsEnum$1.call(b, prop)) __defNormalProp$1(a, prop, b[prop]);\n  }\n  return a;\n};\nconst isMobile = CoreUtil.isMobile();\nconst state$3 = proxy({\n  wallets: {\n    listings: [],\n    total: 0,\n    page: 1\n  },\n  search: {\n    listings: [],\n    total: 0,\n    page: 1\n  },\n  recomendedWallets: []\n});\nconst ExplorerCtrl = {\n  state: state$3,\n  async getRecomendedWallets() {\n    const {\n      explorerRecommendedWalletIds,\n      explorerExcludedWalletIds\n    } = ConfigCtrl.state;\n    if (explorerRecommendedWalletIds === \"NONE\" || explorerExcludedWalletIds === \"ALL\" && !explorerRecommendedWalletIds) {\n      return state$3.recomendedWallets;\n    }\n    if (CoreUtil.isArray(explorerRecommendedWalletIds)) {\n      const recommendedIds = explorerRecommendedWalletIds.join(\",\");\n      const params = {\n        recommendedIds\n      };\n      const {\n        listings\n      } = await ExplorerUtil.getAllListings(params);\n      const listingsArr = Object.values(listings);\n      listingsArr.sort((a, b) => {\n        const aIndex = explorerRecommendedWalletIds.indexOf(a.id);\n        const bIndex = explorerRecommendedWalletIds.indexOf(b.id);\n        return aIndex - bIndex;\n      });\n      state$3.recomendedWallets = listingsArr;\n    } else {\n      const {\n        chains,\n        isAuth\n      } = OptionsCtrl.state;\n      const chainsFilter = chains == null ? void 0 : chains.join(\",\");\n      const isExcluded = CoreUtil.isArray(explorerExcludedWalletIds);\n      const params = {\n        page: 1,\n        sdks: isAuth ? \"auth_v1\" : void 0,\n        entries: CoreUtil.RECOMMENDED_WALLET_AMOUNT,\n        chains: chainsFilter,\n        version: 2,\n        excludedIds: isExcluded ? explorerExcludedWalletIds.join(\",\") : void 0\n      };\n      const {\n        listings\n      } = isMobile ? await ExplorerUtil.getMobileListings(params) : await ExplorerUtil.getDesktopListings(params);\n      state$3.recomendedWallets = Object.values(listings);\n    }\n    return state$3.recomendedWallets;\n  },\n  async getWallets(params) {\n    const extendedParams = __spreadValues$1({}, params);\n    const {\n      explorerRecommendedWalletIds,\n      explorerExcludedWalletIds\n    } = ConfigCtrl.state;\n    const {\n      recomendedWallets\n    } = state$3;\n    if (explorerExcludedWalletIds === \"ALL\") {\n      return state$3.wallets;\n    }\n    if (recomendedWallets.length) {\n      extendedParams.excludedIds = recomendedWallets.map(wallet => wallet.id).join(\",\");\n    } else if (CoreUtil.isArray(explorerRecommendedWalletIds)) {\n      extendedParams.excludedIds = explorerRecommendedWalletIds.join(\",\");\n    }\n    if (CoreUtil.isArray(explorerExcludedWalletIds)) {\n      extendedParams.excludedIds = [extendedParams.excludedIds, explorerExcludedWalletIds].filter(Boolean).join(\",\");\n    }\n    if (OptionsCtrl.state.isAuth) {\n      extendedParams.sdks = \"auth_v1\";\n    }\n    const {\n      page,\n      search\n    } = params;\n    const {\n      listings: listingsObj,\n      total\n    } = isMobile ? await ExplorerUtil.getMobileListings(extendedParams) : await ExplorerUtil.getDesktopListings(extendedParams);\n    const listings = Object.values(listingsObj);\n    const type = search ? \"search\" : \"wallets\";\n    state$3[type] = {\n      listings: [...state$3[type].listings, ...listings],\n      total,\n      page: page != null ? page : 1\n    };\n    return {\n      listings,\n      total\n    };\n  },\n  getWalletImageUrl(imageId) {\n    return ExplorerUtil.getWalletImageUrl(imageId);\n  },\n  getAssetImageUrl(imageId) {\n    return ExplorerUtil.getAssetImageUrl(imageId);\n  },\n  resetSearch() {\n    state$3.search = {\n      listings: [],\n      total: 0,\n      page: 1\n    };\n  }\n};\nconst state$2 = proxy({\n  open: false\n});\nconst ModalCtrl = {\n  state: state$2,\n  subscribe(callback) {\n    return subscribe(state$2, () => callback(state$2));\n  },\n  async open(options) {\n    return new Promise(resolve => {\n      const {\n        isUiLoaded,\n        isDataLoaded\n      } = OptionsCtrl.state;\n      CoreUtil.removeWalletConnectDeepLink();\n      OptionsCtrl.setWalletConnectUri(options == null ? void 0 : options.uri);\n      OptionsCtrl.setChains(options == null ? void 0 : options.chains);\n      RouterCtrl.reset(\"ConnectWallet\");\n      if (isUiLoaded && isDataLoaded) {\n        state$2.open = true;\n        resolve();\n      } else {\n        const interval = setInterval(() => {\n          const opts = OptionsCtrl.state;\n          if (opts.isUiLoaded && opts.isDataLoaded) {\n            clearInterval(interval);\n            state$2.open = true;\n            resolve();\n          }\n        }, 200);\n      }\n    });\n  },\n  close() {\n    state$2.open = false;\n  }\n};\nvar __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\nfunction isDarkMode() {\n  return typeof matchMedia !== \"undefined\" && matchMedia(\"(prefers-color-scheme: dark)\").matches;\n}\nconst state$1 = proxy({\n  themeMode: isDarkMode() ? \"dark\" : \"light\"\n});\nconst ThemeCtrl = {\n  state: state$1,\n  subscribe(callback) {\n    return subscribe(state$1, () => callback(state$1));\n  },\n  setThemeConfig(theme) {\n    const {\n      themeMode,\n      themeVariables\n    } = theme;\n    if (themeMode) {\n      state$1.themeMode = themeMode;\n    }\n    if (themeVariables) {\n      state$1.themeVariables = __spreadValues({}, themeVariables);\n    }\n  }\n};\nconst state = proxy({\n  open: false,\n  message: \"\",\n  variant: \"success\"\n});\nconst ToastCtrl = {\n  state,\n  subscribe(callback) {\n    return subscribe(state, () => callback(state));\n  },\n  openToast(message, variant) {\n    state.open = true;\n    state.message = message;\n    state.variant = variant;\n  },\n  closeToast() {\n    state.open = false;\n  }\n};\nexport { ConfigCtrl, CoreUtil, EventsCtrl, ExplorerCtrl, ModalCtrl, OptionsCtrl, RouterCtrl, ThemeCtrl, ToastCtrl };","map":{"version":3,"names":["state$7","proxy","history","view","data","RouterCtrl","state","subscribe","callback","push","reset","replace","length","goBack","pop","last","slice","setData","CoreUtil","WALLETCONNECT_DEEPLINK_CHOICE","WCM_VERSION","RECOMMENDED_WALLET_AMOUNT","isMobile","window","Boolean","matchMedia","matches","test","navigator","userAgent","isAndroid","toLowerCase","includes","isIos","ua","isHttpUrl","url","startsWith","isArray","Array","isTelegram","TelegramWebviewProxy","Telegram","TelegramWebviewProxyProto","formatNativeUrl","appUrl","wcUri","name","formatUniversalUrl","safeAppUrl","replaceAll","endsWith","setWalletConnectDeepLink","encodedWcUrl","encodeURIComponent","formattedUri","Buffer","from","toString","URL","searchParams","set","link","wait","miliseconds","Promise","resolve","setTimeout","openHref","href","target","adjustedTarget","open","localStorage","setItem","JSON","stringify","e","console","info","setWalletConnectAndroidDeepLink","split","removeWalletConnectDeepLink","removeItem","setModalVersionInStorage","getWalletRouterData","_a","routerData","Wallet","Error","isEnabled","location","hostname","protocol","state$6","enabled","userSessionId","events","connectedWalletId","EventsCtrl","snapshot","initialize","crypto","randomUUID","setConnectedWalletId","click","event","type","timestamp","Date","now","track","state$5","chains","walletConnectUri","isAuth","isCustomDesktop","isCustomMobile","isDataLoaded","isUiLoaded","OptionsCtrl","setChains","setWalletConnectUri","setIsCustomDesktop","setIsCustomMobile","setIsDataLoaded","setIsUiLoaded","setIsAuth","state$4","projectId","mobileWallets","desktopWallets","walletImages","enableAuthMode","enableExplorer","explorerExcludedWalletIds","explorerRecommendedWalletIds","termsOfServiceUrl","privacyPolicyUrl","ConfigCtrl","setConfig","config","_b","Object","assign","W3M_API","SDK_TYPE","SDK_VERSION","fetchListings","endpoint","params","allParams","__spreadValues$2","sdkType","sdkVersion","append","entries","forEach","key","value","String","request","fetch","json","ExplorerUtil","getDesktopListings","getMobileListings","getInjectedListings","getAllListings","getWalletImageUrl","imageId","getAssetImageUrl","state$3","wallets","listings","total","page","search","recomendedWallets","ExplorerCtrl","getRecomendedWallets","recommendedIds","join","listingsArr","values","sort","a","b","aIndex","indexOf","id","bIndex","chainsFilter","isExcluded","sdks","version","excludedIds","getWallets","extendedParams","__spreadValues$1","map","wallet","filter","listingsObj","resetSearch","state$2","ModalCtrl","options","uri","interval","setInterval","opts","clearInterval","close","isDarkMode","state$1","themeMode","ThemeCtrl","setThemeConfig","theme","themeVariables","__spreadValues","message","variant","ToastCtrl","openToast","closeToast"],"sources":["C:\\Users\\Adrien\\Desktop\\CryptoGrind - Copie\\client\\node_modules\\@walletconnect\\modal-core\\src\\controllers\\RouterCtrl.ts","C:\\Users\\Adrien\\Desktop\\CryptoGrind - Copie\\client\\node_modules\\@walletconnect\\modal-core\\src\\utils\\CoreUtil.ts","C:\\Users\\Adrien\\Desktop\\CryptoGrind - Copie\\client\\node_modules\\@walletconnect\\modal-core\\src\\controllers\\EventsCtrl.ts","C:\\Users\\Adrien\\Desktop\\CryptoGrind - Copie\\client\\node_modules\\@walletconnect\\modal-core\\src\\controllers\\OptionsCtrl.ts","C:\\Users\\Adrien\\Desktop\\CryptoGrind - Copie\\client\\node_modules\\@walletconnect\\modal-core\\src\\controllers\\ConfigCtrl.ts","C:\\Users\\Adrien\\Desktop\\CryptoGrind - Copie\\client\\node_modules\\@walletconnect\\modal-core\\src\\utils\\ExplorerUtil.ts","C:\\Users\\Adrien\\Desktop\\CryptoGrind - Copie\\client\\node_modules\\@walletconnect\\modal-core\\src\\controllers\\ExplorerCtrl.ts","C:\\Users\\Adrien\\Desktop\\CryptoGrind - Copie\\client\\node_modules\\@walletconnect\\modal-core\\src\\controllers\\ModalCtrl.ts","C:\\Users\\Adrien\\Desktop\\CryptoGrind - Copie\\client\\node_modules\\@walletconnect\\modal-core\\src\\controllers\\ThemeCtrl.ts","C:\\Users\\Adrien\\Desktop\\CryptoGrind - Copie\\client\\node_modules\\@walletconnect\\modal-core\\src\\controllers\\ToastCtrl.ts"],"sourcesContent":["import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { RouterCtrlState } from '../types/controllerTypes'\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<RouterCtrlState>({\n  history: ['ConnectWallet'],\n  view: 'ConnectWallet',\n  data: undefined\n})\n\n// -- controller --------------------------------------------------- //\nexport const RouterCtrl = {\n  state,\n\n  subscribe(callback: (newState: RouterCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  push(view: RouterCtrlState['view'], data?: RouterCtrlState['data']) {\n    if (view !== state.view) {\n      state.view = view\n      if (data) {\n        state.data = data\n      }\n      state.history.push(view)\n    }\n  },\n\n  reset(view: RouterCtrlState['view']) {\n    state.view = view\n    state.history = [view]\n  },\n\n  replace(view: RouterCtrlState['view']) {\n    if (state.history.length > 1) {\n      state.history[state.history.length - 1] = view\n      state.view = view\n    }\n  },\n\n  goBack() {\n    if (state.history.length > 1) {\n      state.history.pop()\n      const [last] = state.history.slice(-1)\n      state.view = last\n    }\n  },\n\n  setData(data: RouterCtrlState['data']) {\n    state.data = data\n  }\n}\n","import { RouterCtrl } from '../controllers/RouterCtrl'\n\nexport const CoreUtil = {\n  WALLETCONNECT_DEEPLINK_CHOICE: 'WALLETCONNECT_DEEPLINK_CHOICE',\n\n  WCM_VERSION: 'WCM_VERSION',\n\n  RECOMMENDED_WALLET_AMOUNT: 9,\n\n  isMobile() {\n    if (typeof window !== 'undefined') {\n      return Boolean(\n        window.matchMedia('(pointer:coarse)').matches ||\n          /Android|webOS|iPhone|iPad|iPod|BlackBerry|Opera Mini/u.test(navigator.userAgent)\n      )\n    }\n\n    return false\n  },\n\n  isAndroid() {\n    return CoreUtil.isMobile() && navigator.userAgent.toLowerCase().includes('android')\n  },\n\n  isIos() {\n    const ua = navigator.userAgent.toLowerCase()\n\n    return CoreUtil.isMobile() && (ua.includes('iphone') || ua.includes('ipad'))\n  },\n\n  isHttpUrl(url: string) {\n    return url.startsWith('http://') || url.startsWith('https://')\n  },\n\n  isArray<T>(data?: T | T[]): data is T[] {\n    return Array.isArray(data) && data.length > 0\n  },\n\n  isTelegram() {\n    return (\n      typeof window !== 'undefined' &&\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (Boolean((window as any).TelegramWebviewProxy) ||\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        Boolean((window as any).Telegram) ||\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        Boolean((window as any).TelegramWebviewProxyProto))\n    )\n  },\n\n  formatNativeUrl(appUrl: string, wcUri: string, name: string): string {\n    if (CoreUtil.isHttpUrl(appUrl)) {\n      return this.formatUniversalUrl(appUrl, wcUri, name)\n    }\n\n    let safeAppUrl = appUrl\n    if (!safeAppUrl.includes('://')) {\n      safeAppUrl = appUrl.replaceAll('/', '').replaceAll(':', '')\n      safeAppUrl = `${safeAppUrl}://`\n    }\n    if (!safeAppUrl.endsWith('/')) {\n      safeAppUrl = `${safeAppUrl}/`\n    }\n    this.setWalletConnectDeepLink(safeAppUrl, name)\n    const encodedWcUrl = encodeURIComponent(wcUri)\n\n    return `${safeAppUrl}wc?uri=${encodedWcUrl}`\n  },\n\n  formatUniversalUrl(appUrl: string, wcUri: string, name: string): string {\n    if (!CoreUtil.isHttpUrl(appUrl)) {\n      return this.formatNativeUrl(appUrl, wcUri, name)\n    }\n    let safeAppUrl = appUrl\n    //  Universal link required in telegram context\n    if (safeAppUrl.startsWith('https://t.me')) {\n      // eslint-disable-next-line require-unicode-regexp\n      const formattedUri = Buffer.from(wcUri).toString('base64').replace(/[=]/g, '')\n      if (safeAppUrl.endsWith('/')) {\n        safeAppUrl = safeAppUrl.slice(0, -1)\n      }\n\n      this.setWalletConnectDeepLink(safeAppUrl, name)\n\n      const url = new URL(safeAppUrl)\n      url.searchParams.set('startapp', formattedUri)\n      const link = url.toString()\n\n      return link\n    }\n\n    if (!safeAppUrl.endsWith('/')) {\n      safeAppUrl = `${safeAppUrl}/`\n    }\n    this.setWalletConnectDeepLink(safeAppUrl, name)\n    const encodedWcUrl = encodeURIComponent(wcUri)\n\n    return `${safeAppUrl}wc?uri=${encodedWcUrl}`\n  },\n\n  async wait(miliseconds: number) {\n    return new Promise(resolve => {\n      setTimeout(resolve, miliseconds)\n    })\n  },\n\n  openHref(href: string, target: '_blank' | '_self') {\n    const adjustedTarget = this.isTelegram() ? '_blank' : target\n    window.open(href, adjustedTarget, 'noreferrer noopener')\n  },\n\n  setWalletConnectDeepLink(href: string, name: string) {\n    try {\n      localStorage.setItem(CoreUtil.WALLETCONNECT_DEEPLINK_CHOICE, JSON.stringify({ href, name }))\n    } catch {\n      console.info('Unable to set WalletConnect deep link')\n    }\n  },\n\n  setWalletConnectAndroidDeepLink(wcUri: string) {\n    try {\n      const [href] = wcUri.split('?')\n      localStorage.setItem(\n        CoreUtil.WALLETCONNECT_DEEPLINK_CHOICE,\n        JSON.stringify({ href, name: 'Android' })\n      )\n    } catch {\n      console.info('Unable to set WalletConnect android deep link')\n    }\n  },\n\n  removeWalletConnectDeepLink() {\n    try {\n      localStorage.removeItem(CoreUtil.WALLETCONNECT_DEEPLINK_CHOICE)\n    } catch {\n      console.info('Unable to remove WalletConnect deep link')\n    }\n  },\n\n  setModalVersionInStorage() {\n    try {\n      if (typeof localStorage !== 'undefined') {\n        localStorage.setItem(CoreUtil.WCM_VERSION, process.env.ROLLUP_WCM_VERSION ?? 'UNKNOWN')\n      }\n    } catch {\n      console.info('Unable to set Web3Modal version in storage')\n    }\n  },\n\n  getWalletRouterData() {\n    const routerData = RouterCtrl.state.data?.Wallet\n    if (!routerData) {\n      throw new Error('Missing \"Wallet\" view data')\n    }\n\n    return routerData\n  }\n}\n","import { proxy, snapshot, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { EventsCtrlState, ModalEvent, ModalEventData } from '../types/controllerTypes'\n\n// -- helpers ------------------------------------------------------ //\nconst isEnabled =\n  typeof location !== 'undefined' &&\n  (location.hostname.includes('localhost') || location.protocol.includes('https'))\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<EventsCtrlState>({\n  enabled: isEnabled,\n  userSessionId: '',\n  events: [],\n  connectedWalletId: undefined\n})\n\n// -- controller --------------------------------------------------- //\nexport const EventsCtrl = {\n  state,\n\n  subscribe(callback: (newEvent: ModalEvent) => void) {\n    return valtioSub(state.events, () => callback(snapshot(state.events[state.events.length - 1])))\n  },\n\n  initialize() {\n    if (state.enabled && typeof crypto?.randomUUID !== 'undefined') {\n      state.userSessionId = crypto.randomUUID()\n    }\n  },\n\n  setConnectedWalletId(connectedWalletId: EventsCtrlState['connectedWalletId']) {\n    state.connectedWalletId = connectedWalletId\n  },\n\n  click(data: ModalEventData) {\n    if (state.enabled) {\n      const event = {\n        type: 'CLICK' as const,\n        name: data.name,\n        userSessionId: state.userSessionId,\n        timestamp: Date.now(),\n        data\n      }\n      state.events.push(event)\n    }\n  },\n\n  track(data: ModalEventData) {\n    if (state.enabled) {\n      const event = {\n        type: 'TRACK' as const,\n        name: data.name,\n        userSessionId: state.userSessionId,\n        timestamp: Date.now(),\n        data\n      }\n      state.events.push(event)\n    }\n  },\n\n  view(data: ModalEventData) {\n    if (state.enabled) {\n      const event = {\n        type: 'VIEW' as const,\n        name: data.name,\n        userSessionId: state.userSessionId,\n        timestamp: Date.now(),\n        data\n      }\n      state.events.push(event)\n    }\n  }\n}\n","import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { OptionsCtrlState } from '../types/controllerTypes'\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<OptionsCtrlState>({\n  chains: undefined,\n  walletConnectUri: undefined,\n  isAuth: false,\n  isCustomDesktop: false,\n  isCustomMobile: false,\n  isDataLoaded: false,\n  isUiLoaded: false\n})\n\n// -- controller --------------------------------------------------- //\nexport const OptionsCtrl = {\n  state,\n\n  subscribe(callback: (newState: OptionsCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  setChains(chains: OptionsCtrlState['chains']) {\n    state.chains = chains\n  },\n\n  setWalletConnectUri(walletConnectUri: OptionsCtrlState['walletConnectUri']) {\n    state.walletConnectUri = walletConnectUri\n  },\n\n  setIsCustomDesktop(isCustomDesktop: OptionsCtrlState['isCustomDesktop']) {\n    state.isCustomDesktop = isCustomDesktop\n  },\n\n  setIsCustomMobile(isCustomMobile: OptionsCtrlState['isCustomMobile']) {\n    state.isCustomMobile = isCustomMobile\n  },\n\n  setIsDataLoaded(isDataLoaded: OptionsCtrlState['isDataLoaded']) {\n    state.isDataLoaded = isDataLoaded\n  },\n\n  setIsUiLoaded(isUiLoaded: OptionsCtrlState['isUiLoaded']) {\n    state.isUiLoaded = isUiLoaded\n  },\n\n  setIsAuth(isAuth: OptionsCtrlState['isAuth']) {\n    state.isAuth = isAuth\n  }\n}\n","import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { ConfigCtrlState } from '../types/controllerTypes'\nimport { CoreUtil } from '../utils/CoreUtil'\nimport { EventsCtrl } from './EventsCtrl'\nimport { OptionsCtrl } from './OptionsCtrl'\n\nconst state = proxy<ConfigCtrlState>({\n  projectId: '',\n  mobileWallets: undefined,\n  desktopWallets: undefined,\n  walletImages: undefined,\n  chains: undefined,\n  enableAuthMode: false,\n  enableExplorer: true,\n  explorerExcludedWalletIds: undefined,\n  explorerRecommendedWalletIds: undefined,\n  termsOfServiceUrl: undefined,\n  privacyPolicyUrl: undefined\n})\n\n// -- controller --------------------------------------------------- //\nexport const ConfigCtrl = {\n  state,\n\n  subscribe(callback: (newState: ConfigCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  setConfig(config: ConfigCtrlState) {\n    EventsCtrl.initialize()\n    OptionsCtrl.setChains(config.chains)\n    OptionsCtrl.setIsAuth(Boolean(config.enableAuthMode))\n    OptionsCtrl.setIsCustomMobile(Boolean(config.mobileWallets?.length))\n    OptionsCtrl.setIsCustomDesktop(Boolean(config.desktopWallets?.length))\n\n    CoreUtil.setModalVersionInStorage()\n\n    Object.assign(state, config)\n  }\n}\n","import { ConfigCtrl } from '../controllers/ConfigCtrl'\nimport type { ListingParams, ListingResponse } from '../types/controllerTypes'\n\n// -- Helpers -------------------------------------------------------\nconst W3M_API = 'https://explorer-api.walletconnect.com'\nconst SDK_TYPE = 'wcm'\nconst SDK_VERSION = `js-${process.env.ROLLUP_WCM_VERSION}`\n\nasync function fetchListings(endpoint: string, params: ListingParams) {\n  const allParams = { sdkType: SDK_TYPE, sdkVersion: SDK_VERSION, ...params }\n  const url = new URL(endpoint, W3M_API)\n  url.searchParams.append('projectId', ConfigCtrl.state.projectId)\n  Object.entries(allParams).forEach(([key, value]) => {\n    if (value) {\n      url.searchParams.append(key, String(value))\n    }\n  })\n  const request = await fetch(url)\n\n  return request.json() as Promise<ListingResponse>\n}\n\n// -- Utility -------------------------------------------------------\nexport const ExplorerUtil = {\n  async getDesktopListings(params: ListingParams) {\n    return fetchListings('/w3m/v1/getDesktopListings', params)\n  },\n\n  async getMobileListings(params: ListingParams) {\n    return fetchListings('/w3m/v1/getMobileListings', params)\n  },\n\n  async getInjectedListings(params: ListingParams) {\n    return fetchListings('/w3m/v1/getInjectedListings', params)\n  },\n\n  async getAllListings(params: ListingParams) {\n    return fetchListings('/w3m/v1/getAllListings', params)\n  },\n\n  getWalletImageUrl(imageId: string) {\n    return `${W3M_API}/w3m/v1/getWalletImage/${imageId}?projectId=${ConfigCtrl.state.projectId}&sdkType=${SDK_TYPE}&sdkVersion=${SDK_VERSION}`\n  },\n\n  getAssetImageUrl(imageId: string) {\n    return `${W3M_API}/w3m/v1/getAssetImage/${imageId}?projectId=${ConfigCtrl.state.projectId}&sdkType=${SDK_TYPE}&sdkVersion=${SDK_VERSION}`\n  }\n}\n","import { proxy } from 'valtio/vanilla'\nimport type { ExplorerCtrlState, ListingParams } from '../types/controllerTypes'\nimport { CoreUtil } from '../utils/CoreUtil'\nimport { ExplorerUtil } from '../utils/ExplorerUtil'\nimport { ConfigCtrl } from './ConfigCtrl'\nimport { OptionsCtrl } from './OptionsCtrl'\n\nconst isMobile = CoreUtil.isMobile()\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<ExplorerCtrlState>({\n  wallets: { listings: [], total: 0, page: 1 },\n  search: { listings: [], total: 0, page: 1 },\n  recomendedWallets: []\n})\n\n// -- controller --------------------------------------------------- //\nexport const ExplorerCtrl = {\n  state,\n\n  async getRecomendedWallets() {\n    const { explorerRecommendedWalletIds, explorerExcludedWalletIds } = ConfigCtrl.state\n\n    // Don't fetch recomended wallets\n    if (\n      explorerRecommendedWalletIds === 'NONE' ||\n      (explorerExcludedWalletIds === 'ALL' && !explorerRecommendedWalletIds)\n    ) {\n      return state.recomendedWallets\n    }\n\n    // Fetch only recomended wallets defined in config\n    if (CoreUtil.isArray(explorerRecommendedWalletIds)) {\n      const recommendedIds = explorerRecommendedWalletIds.join(',')\n      const params = { recommendedIds }\n      const { listings } = await ExplorerUtil.getAllListings(params)\n      const listingsArr = Object.values(listings)\n      listingsArr.sort((a, b) => {\n        const aIndex = explorerRecommendedWalletIds.indexOf(a.id)\n        const bIndex = explorerRecommendedWalletIds.indexOf(b.id)\n\n        return aIndex - bIndex\n      })\n      state.recomendedWallets = listingsArr\n    }\n\n    // Fetch default recomended wallets based on user's device, options and excluded config\n    else {\n      const { chains, isAuth } = OptionsCtrl.state\n      const chainsFilter = chains?.join(',')\n      const isExcluded = CoreUtil.isArray(explorerExcludedWalletIds)\n      const params = {\n        page: 1,\n        sdks: isAuth ? 'auth_v1' : undefined,\n        entries: CoreUtil.RECOMMENDED_WALLET_AMOUNT,\n        chains: chainsFilter,\n        version: 2,\n        excludedIds: isExcluded ? explorerExcludedWalletIds.join(',') : undefined\n      }\n      const { listings } = isMobile\n        ? await ExplorerUtil.getMobileListings(params)\n        : await ExplorerUtil.getDesktopListings(params)\n      state.recomendedWallets = Object.values(listings)\n    }\n\n    return state.recomendedWallets\n  },\n\n  async getWallets(params: ListingParams) {\n    const extendedParams: ListingParams = { ...params }\n    const { explorerRecommendedWalletIds, explorerExcludedWalletIds } = ConfigCtrl.state\n    const { recomendedWallets } = state\n\n    // Don't fetch any wallets if all are excluded\n    if (explorerExcludedWalletIds === 'ALL') {\n      return state.wallets\n    }\n\n    // Don't fetch recomended wallets, as we already have these\n    if (recomendedWallets.length) {\n      extendedParams.excludedIds = recomendedWallets.map(wallet => wallet.id).join(',')\n    } else if (CoreUtil.isArray(explorerRecommendedWalletIds)) {\n      extendedParams.excludedIds = explorerRecommendedWalletIds.join(',')\n    }\n\n    // Don't fetch user defined excluded wallets & recomended wallets\n    if (CoreUtil.isArray(explorerExcludedWalletIds)) {\n      extendedParams.excludedIds = [extendedParams.excludedIds, explorerExcludedWalletIds]\n        .filter(Boolean)\n        .join(',')\n    }\n\n    // Fetch only auth wallets\n    if (OptionsCtrl.state.isAuth) {\n      extendedParams.sdks = 'auth_v1'\n    }\n\n    const { page, search } = params\n    const { listings: listingsObj, total } = isMobile\n      ? await ExplorerUtil.getMobileListings(extendedParams)\n      : await ExplorerUtil.getDesktopListings(extendedParams)\n    const listings = Object.values(listingsObj)\n    const type = search ? 'search' : 'wallets'\n    state[type] = {\n      listings: [...state[type].listings, ...listings],\n      total,\n      page: page ?? 1\n    }\n\n    return { listings, total }\n  },\n\n  getWalletImageUrl(imageId: string) {\n    return ExplorerUtil.getWalletImageUrl(imageId)\n  },\n\n  getAssetImageUrl(imageId: string) {\n    return ExplorerUtil.getAssetImageUrl(imageId)\n  },\n\n  resetSearch() {\n    state.search = { listings: [], total: 0, page: 1 }\n  }\n}\n","import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { ModalCtrlState } from '../types/controllerTypes'\nimport { CoreUtil } from '../utils/CoreUtil'\nimport { OptionsCtrl } from './OptionsCtrl'\nimport { RouterCtrl } from './RouterCtrl'\n\n// -- types -------------------------------------------------------- //\nexport interface OpenOptions {\n  uri: string\n  chains?: string[]\n}\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<ModalCtrlState>({\n  open: false\n})\n\n// -- controller --------------------------------------------------- //\nexport const ModalCtrl = {\n  state,\n\n  subscribe(callback: (newState: ModalCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  async open(options?: OpenOptions) {\n    return new Promise<void>(resolve => {\n      const { isUiLoaded, isDataLoaded } = OptionsCtrl.state\n      CoreUtil.removeWalletConnectDeepLink()\n\n      OptionsCtrl.setWalletConnectUri(options?.uri)\n      OptionsCtrl.setChains(options?.chains)\n      RouterCtrl.reset('ConnectWallet')\n\n      // Open modal if essential async data is ready\n      if (isUiLoaded && isDataLoaded) {\n        state.open = true\n        resolve()\n      }\n      // Otherwise (slow network) re-attempt open checks\n      else {\n        const interval = setInterval(() => {\n          const opts = OptionsCtrl.state\n          if (opts.isUiLoaded && opts.isDataLoaded) {\n            clearInterval(interval)\n            state.open = true\n            resolve()\n          }\n        }, 200)\n      }\n    })\n  },\n\n  close() {\n    state.open = false\n  }\n}\n","import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { ThemeCtrlState } from '../types/controllerTypes'\n\n// -- initial state ------------------------------------------------ //\nfunction isDarkMode() {\n  return typeof matchMedia !== 'undefined' && matchMedia('(prefers-color-scheme: dark)').matches\n}\n\nconst state = proxy<ThemeCtrlState>({\n  themeMode: isDarkMode() ? 'dark' : 'light'\n})\n\n// -- controller --------------------------------------------------- //\nexport const ThemeCtrl = {\n  state,\n\n  subscribe(callback: (newState: ThemeCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  setThemeConfig(theme: ThemeCtrlState) {\n    const { themeMode, themeVariables } = theme\n\n    if (themeMode) {\n      state.themeMode = themeMode\n    }\n\n    if (themeVariables) {\n      state.themeVariables = { ...themeVariables }\n    }\n  }\n}\n","import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { ToastCtrlState } from '../types/controllerTypes'\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<ToastCtrlState>({\n  open: false,\n  message: '',\n  variant: 'success'\n})\n\n// -- controller --------------------------------------------------- //\nexport const ToastCtrl = {\n  state,\n\n  subscribe(callback: (newState: ToastCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  openToast(message: ToastCtrlState['message'], variant: ToastCtrlState['variant']) {\n    state.open = true\n    state.message = message\n    state.variant = variant\n  },\n\n  closeToast() {\n    state.open = false\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}