{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Adrien\\\\Desktop\\\\CryptoGrind - Copie\\\\client\\\\src\\\\components\\\\NotificationWen.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from 'react';\nimport { GrindContext } from '../App';\nimport { useTranslation } from 'react-i18next';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NotificationWen() {\n  _s();\n  const {\n    t\n  } = useTranslation();\n  const {\n    account\n  } = useContext(GrindContext);\n  const [notifications, setNotifications] = useState([]);\n  const [projects, setProjects] = useState([]);\n  const [showFrequencyModal, setShowFrequencyModal] = useState(false);\n  const [selectedNotificationId, setSelectedNotificationId] = useState(null);\n  const [newFrequency, setNewFrequency] = useState('');\n  const [nextReminderDays, setNextReminderDays] = useState(null);\n  const today = new Date('2025-04-24');\n  today.setHours(0, 0, 0, 0);\n  useEffect(() => {\n    if (account) {\n      const savedNotifications = localStorage.getItem(`wenNotifications_${account}`);\n      const savedProjects = localStorage.getItem(`projects_${account}`);\n      console.log('Account dans NotificationWen:', account);\n      console.log('Chargement notifications WEN:', savedNotifications);\n      console.log('Chargement projets:', savedProjects);\n      const projectsList = savedProjects ? JSON.parse(savedProjects) : [];\n      let wenNotifications = savedNotifications ? JSON.parse(savedNotifications) : [];\n      wenNotifications = wenNotifications.filter(n => {\n        const projectExists = projectsList.some(p => p.id === n.project.id);\n        const hasNoMintDate = projectExists && !projectsList.find(p => p.id === n.project.id).mintDate;\n        return projectExists && hasNoMintDate;\n      });\n      const projectsWithoutMintDate = projectsList.filter(project => !project.mintDate && project.notificationFrequency);\n      const newWenNotifications = projectsWithoutMintDate.filter(project => !wenNotifications.some(n => n.project.id === project.id)).map(project => ({\n        id: `wen_${project.id}_${Date.now()}`,\n        project,\n        date: new Date().toISOString(),\n        createdAt: new Date().toISOString(),\n        notificationFrequency: project.notificationFrequency || '1'\n      }));\n      if (newWenNotifications.length > 0) {\n        wenNotifications = [...wenNotifications, ...newWenNotifications];\n        console.log('Notifications WEN générées:', newWenNotifications.length, newWenNotifications);\n      }\n      localStorage.setItem(`wenNotifications_${account}`, JSON.stringify(wenNotifications));\n      setNotifications(wenNotifications);\n      setProjects(projectsList);\n    } else {\n      console.log('Aucun account, notifications et projets vides');\n      setNotifications([]);\n      setProjects([]);\n    }\n  }, [account]);\n  useEffect(() => {\n    if (account) {\n      const savedHistoricalNotifications = localStorage.getItem(`notifications_${account}`);\n      const historicalNotifications = savedHistoricalNotifications ? JSON.parse(savedHistoricalNotifications) : [];\n      const tomorrow = new Date(today);\n      tomorrow.setDate(today.getDate() + 1);\n      const isToday = date => {\n        if (!date) return false;\n        const projectDate = new Date(date);\n        if (isNaN(projectDate.getTime())) return false;\n        const todayStr = today.toISOString().split('T')[0];\n        const projectDateStr = projectDate.toISOString().split('T')[0];\n        return projectDateStr === todayStr;\n      };\n      const isTomorrow = date => {\n        if (!date) return false;\n        const projectDate = new Date(date);\n        if (isNaN(projectDate.getTime())) return false;\n        const tomorrowStr = tomorrow.toISOString().split('T')[0];\n        const projectDateStr = projectDate.toISOString().split('T')[0];\n        return projectDateStr === tomorrowStr;\n      };\n      const todayTomorrowCount = projects.filter(project => isToday(project.mintDate) || isTomorrow(project.mintDate)).length;\n      const validWenNotifications = notifications.filter(notif => {\n        if (!notif.notificationFrequency || notif.notificationFrequency === '') {\n          console.log(`Notification WEN ignorée (pas de frequency):`, notif);\n          return false;\n        }\n        const frequencyDays = parseInt(notif.notificationFrequency, 10);\n        const createdAt = new Date(notif.createdAt);\n        if (isNaN(createdAt.getTime())) {\n          console.log(`Date createdAt invalide pour notification WEN:`, notif);\n          return false;\n        }\n        const daysSinceCreation = Math.floor((today - createdAt) / (1000 * 60 * 60 * 24));\n        const notificationsPassed = Math.floor(daysSinceCreation / frequencyDays);\n        const nextNotificationDate = new Date(createdAt);\n        nextNotificationDate.setDate(createdAt.getDate() + (notificationsPassed + 1) * frequencyDays);\n        const startDate = new Date(nextNotificationDate);\n        startDate.setDate(startDate.getDate() - 1);\n        const endDate = new Date(nextNotificationDate);\n        endDate.setDate(endDate.getDate() + 1);\n        const isInWindow = today >= startDate && today <= endDate;\n        console.log(`Notification WEN ${notif.id}: frequency=${frequencyDays}, createdAt=${createdAt}, next=${nextNotificationDate}, inWindow=${isInWindow}`);\n        return isInWindow;\n      });\n      const wenCount = validWenNotifications.length;\n      const totalCount = todayTomorrowCount + wenCount;\n      let minDaysUntilNextReminder = null;\n      if (notifications.length > 0) {\n        minDaysUntilNextReminder = Math.min(...notifications.map(notif => calculateDaysUntilNextReminder(notif)).filter(days => days !== null));\n      }\n      setNextReminderDays(minDaysUntilNextReminder);\n      console.log('Projets aujourd’hui + demain:', todayTomorrowCount);\n      console.log('Notifications WEN comptées:', wenCount);\n      console.log('Notifications historiques:', historicalNotifications.length);\n      console.log('Total compteur:', totalCount);\n      console.log('Prochain rappel dans (jours):', minDaysUntilNextReminder);\n      localStorage.setItem(`notificationCount_${account}`, totalCount.toString());\n      localStorage.setItem(`wenNotificationCount_${account}`, wenCount.toString());\n      window.dispatchEvent(new CustomEvent('updateNotifications'));\n    }\n  }, [notifications, projects, account]);\n  const calculateNextReminder = notification => {\n    if (!notification.createdAt || !notification.notificationFrequency) return new Date(9999, 0, 1);\n    const createdAt = new Date(notification.createdAt);\n    createdAt.setHours(0, 0, 0, 0);\n    const frequencyDays = parseInt(notification.notificationFrequency, 10);\n    if (isNaN(frequencyDays) || frequencyDays <= 0) return new Date(9999, 0, 1);\n    const daysSinceCreation = Math.floor((today - createdAt) / (1000 * 60 * 60 * 24));\n    const notificationsPassed = Math.floor(daysSinceCreation / frequencyDays);\n    const nextNotificationDate = new Date(createdAt);\n    nextNotificationDate.setDate(createdAt.getDate() + (notificationsPassed + 1) * frequencyDays);\n    return nextNotificationDate;\n  };\n  const calculateRepetitions = notification => {\n    if (!notification.createdAt || !notification.notificationFrequency) {\n      console.log('Données manquantes pour calculer les répétitions:', notification);\n      return 0;\n    }\n    const createdAt = new Date(notification.createdAt);\n    createdAt.setHours(0, 0, 0, 0);\n    const frequencyDays = parseInt(notification.notificationFrequency, 10);\n    if (isNaN(frequencyDays) || frequencyDays <= 0) {\n      console.log('Fréquence invalide:', notification.notificationFrequency);\n      return 0;\n    }\n    const daysPassed = Math.floor((today - createdAt) / (1000 * 60 * 60 * 24));\n    const repetitions = Math.floor(daysPassed / frequencyDays);\n    console.log(`Calcul répétitions pour ${notification.id}: daysPassed=${daysPassed}, frequencyDays=${frequencyDays}, repetitions=${repetitions}`);\n    return Math.max(0, repetitions);\n  };\n  const calculateDaysUntilNextReminder = notification => {\n    const nextReminder = calculateNextReminder(notification);\n    if (isNaN(nextReminder.getTime())) {\n      console.log('Date de prochain rappel invalide:', notification);\n      return null;\n    }\n    const diffTime = nextReminder - today;\n    const daysUntil = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n    return daysUntil > 0 ? daysUntil : 0;\n  };\n  const formatProjectName = project => {\n    const nameEn = project.name_en || project.name;\n    const nameFr = project.name_fr || project.name;\n    if (nameEn && nameFr && nameEn !== nameFr) {\n      return `${nameEn} (${nameFr})`;\n    }\n    return nameEn || nameFr || 'N/A';\n  };\n  const handleFrequencyClick = notificationId => {\n    const notification = notifications.find(n => n.id === notificationId);\n    setSelectedNotificationId(notificationId);\n    setNewFrequency(notification.notificationFrequency || '1');\n    setShowFrequencyModal(true);\n  };\n  const handleFrequencyUpdate = () => {\n    if (!newFrequency || isNaN(parseInt(newFrequency)) || parseInt(newFrequency) <= 0) {\n      alert(t('invalid_frequency'));\n      return;\n    }\n    const updatedNotifications = notifications.map(n => n.id === selectedNotificationId ? {\n      ...n,\n      notificationFrequency: newFrequency,\n      createdAt: new Date().toISOString()\n    } : n);\n    const updatedProjects = projects.map(p => p.id === notifications.find(n => n.id === selectedNotificationId).project.id ? {\n      ...p,\n      notificationFrequency: newFrequency\n    } : p);\n    localStorage.setItem(`wenNotifications_${account}`, JSON.stringify(updatedNotifications));\n    localStorage.setItem(`projects_${account}`, JSON.stringify(updatedProjects));\n    setNotifications(updatedNotifications);\n    setProjects(updatedProjects);\n    setShowFrequencyModal(false);\n    window.dispatchEvent(new CustomEvent('updateNotifications'));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen p-6\",\n    style: {\n      backgroundColor: '#00DDAF'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-4xl font-bold text-gray-800 mb-6\",\n      children: nextReminderDays !== null ? t('wen_notifications_title', {\n        days: nextReminderDays,\n        daysS: nextReminderDays !== 1 ? 's' : ''\n      }) : t('wen_notifications_title', {\n        days: 'N/A',\n        daysS: ''\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-semibold text-gray-800 mb-4\",\n        children: nextReminderDays !== null ? t('wen_notifications_subtitle', {\n          days: nextReminderDays,\n          daysS: nextReminderDays !== 1 ? 's' : ''\n        }) : t('wen_notifications_subtitle', {\n          days: 'N/A',\n          daysS: ''\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this), notifications.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-700\",\n        children: t('no_wen_notifications')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-4\",\n        children: notifications.sort((a, b) => calculateNextReminder(a) - calculateNextReminder(b)).map(notif => {\n          const repetitions = calculateRepetitions(notif);\n          const frequency = notif.notificationFrequency || '1';\n          const daysUntil = calculateDaysUntilNextReminder(notif);\n          console.log(`Badge pour ${notif.id}: repetitions=${repetitions}, frequency=${frequency}, daysUntil=${daysUntil}`);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-4 bg-white shadow-md rounded-lg transition-all hover:shadow-lg relative\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-end mb-2\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleFrequencyClick(notif.id),\n                className: \"bg-blue-500 text-white px-3 py-1 rounded-full text-sm hover:bg-blue-600 max-w-sm whitespace-pre-wrap text-right\",\n                children: repetitions >= 0 && frequency && daysUntil !== null ? t('repetitions', {\n                  count: repetitions,\n                  frequency: frequency,\n                  daysUntil: daysUntil,\n                  s1: parseInt(frequency, 10) !== 1 ? 's' : '',\n                  s2: daysUntil !== 1 ? 's' : '',\n                  lng: 'en'\n                }) : '0 repetition(s) (every 1 day) - next in N/A day(s)'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-gray-800\",\n                children: t('reminder_for_project', {\n                  name: formatProjectName(notif.project),\n                  date: new Date(notif.date).toLocaleString(),\n                  daysUntil: daysUntil !== null ? daysUntil : 'N/A'\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-gray-700\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: [t('type'), \" :\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 294,\n                  columnNumber: 25\n                }, this), \" \", notif.project.type, notif.project.customType && ` (${notif.project.customType})`]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-gray-700\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: [t('mint_date'), \" :\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 298,\n                  columnNumber: 25\n                }, this), \" \", notif.project.mintDate || t('na'), notif.project.mintTime && ` ${t('at')} ${notif.project.mintTime}`]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-gray-700\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: [t('note'), \" :\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 302,\n                  columnNumber: 25\n                }, this), \" \", notif.project.note || t('na'), \"/10\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 301,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-gray-700\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: [t('price'), \" :\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 305,\n                  columnNumber: 25\n                }, this), ' ', notif.project.isFree ? t('free') : notif.project.price || t('na')]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 23\n              }, this), notif.project.image && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mt-2\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: notif.project.image,\n                  alt: formatProjectName(notif.project),\n                  className: \"w-32 h-32 object-cover rounded-lg\",\n                  onError: () => console.log('Erreur chargement image:', notif.project.name)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 310,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mt-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-gray-700 font-semibold\",\n                  children: [t('links'), \" :\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 319,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex flex-col space-y-1\",\n                  children: [notif.project.telegramLink && /*#__PURE__*/_jsxDEV(\"a\", {\n                    href: notif.project.telegramLink,\n                    target: \"_blank\",\n                    rel: \"noopener noreferrer\",\n                    className: \"text-blue-500 hover:underline\",\n                    children: t('telegram')\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 322,\n                    columnNumber: 29\n                  }, this), notif.project.xLink && /*#__PURE__*/_jsxDEV(\"a\", {\n                    href: notif.project.xLink,\n                    target: \"_blank\",\n                    rel: \"noopener noreferrer\",\n                    className: \"text-blue-500 hover:underline\",\n                    children: t('x')\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 332,\n                    columnNumber: 29\n                  }, this), notif.project.discordLink && /*#__PURE__*/_jsxDEV(\"a\", {\n                    href: notif.project.discordLink,\n                    target: \"_blank\",\n                    rel: \"noopener noreferrer\",\n                    className: \"text-blue-500 hover:underline\",\n                    children: t('discord')\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 342,\n                    columnNumber: 29\n                  }, this), notif.project.websiteLink && /*#__PURE__*/_jsxDEV(\"a\", {\n                    href: notif.project.websiteLink,\n                    target: \"_blank\",\n                    rel: \"noopener noreferrer\",\n                    className: \"text-blue-500 hover:underline\",\n                    children: t('website')\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 352,\n                    columnNumber: 29\n                  }, this), notif.project.platformLink && /*#__PURE__*/_jsxDEV(\"a\", {\n                    href: notif.project.platformLink,\n                    target: \"_blank\",\n                    rel: \"noopener noreferrer\",\n                    className: \"text-blue-500 hover:underline\",\n                    children: t('platform')\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 362,\n                    columnNumber: 29\n                  }, this), notif.project.organizerLink && /*#__PURE__*/_jsxDEV(\"a\", {\n                    href: notif.project.organizerLink,\n                    target: \"_blank\",\n                    rel: \"noopener noreferrer\",\n                    className: \"text-blue-500 hover:underline\",\n                    children: t('organizer')\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 372,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 320,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 318,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 21\n            }, this)]\n          }, notif.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 19\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }, this), showFrequencyModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-6 rounded-lg shadow-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl font-semibold mb-4\",\n          children: t('edit_notification_frequency')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block mb-2\",\n          children: [t('frequency_days'), \" :\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: newFrequency,\n          onChange: e => setNewFrequency(e.target.value),\n          className: \"w-full p-2 border rounded-lg mb-4\",\n          placeholder: t('frequency_placeholder'),\n          min: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-end space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowFrequencyModal(false),\n            className: \"bg-gray-500 text-white px-4 py-2 rounded-lg hover:bg-gray-600\",\n            children: t('cancel')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleFrequencyUpdate,\n            className: \"bg-blue-500 text-white px-4 py-2 rounded-lg hover:bg-blue-600\",\n            children: t('validate')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 233,\n    columnNumber: 5\n  }, this);\n}\n_s(NotificationWen, \"AzRvzeKT+583ZZbKLLf7splQX8I=\", false, function () {\n  return [useTranslation];\n});\n_c = NotificationWen;\nexport default NotificationWen;\nvar _c;\n$RefreshReg$(_c, \"NotificationWen\");","map":{"version":3,"names":["React","useState","useEffect","useContext","GrindContext","useTranslation","jsxDEV","_jsxDEV","NotificationWen","_s","t","account","notifications","setNotifications","projects","setProjects","showFrequencyModal","setShowFrequencyModal","selectedNotificationId","setSelectedNotificationId","newFrequency","setNewFrequency","nextReminderDays","setNextReminderDays","today","Date","setHours","savedNotifications","localStorage","getItem","savedProjects","console","log","projectsList","JSON","parse","wenNotifications","filter","n","projectExists","some","p","id","project","hasNoMintDate","find","mintDate","projectsWithoutMintDate","notificationFrequency","newWenNotifications","map","now","date","toISOString","createdAt","length","setItem","stringify","savedHistoricalNotifications","historicalNotifications","tomorrow","setDate","getDate","isToday","projectDate","isNaN","getTime","todayStr","split","projectDateStr","isTomorrow","tomorrowStr","todayTomorrowCount","validWenNotifications","notif","frequencyDays","parseInt","daysSinceCreation","Math","floor","notificationsPassed","nextNotificationDate","startDate","endDate","isInWindow","wenCount","totalCount","minDaysUntilNextReminder","min","calculateDaysUntilNextReminder","days","toString","window","dispatchEvent","CustomEvent","calculateNextReminder","notification","calculateRepetitions","daysPassed","repetitions","max","nextReminder","diffTime","daysUntil","ceil","formatProjectName","nameEn","name_en","name","nameFr","name_fr","handleFrequencyClick","notificationId","handleFrequencyUpdate","alert","updatedNotifications","updatedProjects","className","style","backgroundColor","children","daysS","fileName","_jsxFileName","lineNumber","columnNumber","sort","a","b","frequency","onClick","count","s1","s2","lng","toLocaleString","type","customType","mintTime","note","isFree","price","image","src","alt","onError","telegramLink","href","target","rel","xLink","discordLink","websiteLink","platformLink","organizerLink","value","onChange","e","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/Adrien/Desktop/CryptoGrind - Copie/client/src/components/NotificationWen.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport { GrindContext } from '../App';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nfunction NotificationWen() {\r\n  const { t } = useTranslation();\r\n  const { account } = useContext(GrindContext);\r\n  const [notifications, setNotifications] = useState([]);\r\n  const [projects, setProjects] = useState([]);\r\n  const [showFrequencyModal, setShowFrequencyModal] = useState(false);\r\n  const [selectedNotificationId, setSelectedNotificationId] = useState(null);\r\n  const [newFrequency, setNewFrequency] = useState('');\r\n  const [nextReminderDays, setNextReminderDays] = useState(null);\r\n\r\n  const today = new Date('2025-04-24');\r\n  today.setHours(0, 0, 0, 0);\r\n\r\n  useEffect(() => {\r\n    if (account) {\r\n      const savedNotifications = localStorage.getItem(`wenNotifications_${account}`);\r\n      const savedProjects = localStorage.getItem(`projects_${account}`);\r\n      console.log('Account dans NotificationWen:', account);\r\n      console.log('Chargement notifications WEN:', savedNotifications);\r\n      console.log('Chargement projets:', savedProjects);\r\n\r\n      const projectsList = savedProjects ? JSON.parse(savedProjects) : [];\r\n      let wenNotifications = savedNotifications ? JSON.parse(savedNotifications) : [];\r\n\r\n      wenNotifications = wenNotifications.filter((n) => {\r\n        const projectExists = projectsList.some((p) => p.id === n.project.id);\r\n        const hasNoMintDate = projectExists && !projectsList.find((p) => p.id === n.project.id).mintDate;\r\n        return projectExists && hasNoMintDate;\r\n      });\r\n\r\n      const projectsWithoutMintDate = projectsList.filter((project) => !project.mintDate && project.notificationFrequency);\r\n      const newWenNotifications = projectsWithoutMintDate\r\n        .filter((project) => !wenNotifications.some((n) => n.project.id === project.id))\r\n        .map((project) => ({\r\n          id: `wen_${project.id}_${Date.now()}`,\r\n          project,\r\n          date: new Date().toISOString(),\r\n          createdAt: new Date().toISOString(),\r\n          notificationFrequency: project.notificationFrequency || '1',\r\n        }));\r\n\r\n      if (newWenNotifications.length > 0) {\r\n        wenNotifications = [...wenNotifications, ...newWenNotifications];\r\n        console.log('Notifications WEN générées:', newWenNotifications.length, newWenNotifications);\r\n      }\r\n\r\n      localStorage.setItem(`wenNotifications_${account}`, JSON.stringify(wenNotifications));\r\n      setNotifications(wenNotifications);\r\n      setProjects(projectsList);\r\n    } else {\r\n      console.log('Aucun account, notifications et projets vides');\r\n      setNotifications([]);\r\n      setProjects([]);\r\n    }\r\n  }, [account]);\r\n\r\n  useEffect(() => {\r\n    if (account) {\r\n      const savedHistoricalNotifications = localStorage.getItem(`notifications_${account}`);\r\n      const historicalNotifications = savedHistoricalNotifications\r\n        ? JSON.parse(savedHistoricalNotifications)\r\n        : [];\r\n\r\n      const tomorrow = new Date(today);\r\n      tomorrow.setDate(today.getDate() + 1);\r\n\r\n      const isToday = (date) => {\r\n        if (!date) return false;\r\n        const projectDate = new Date(date);\r\n        if (isNaN(projectDate.getTime())) return false;\r\n        const todayStr = today.toISOString().split('T')[0];\r\n        const projectDateStr = projectDate.toISOString().split('T')[0];\r\n        return projectDateStr === todayStr;\r\n      };\r\n\r\n      const isTomorrow = (date) => {\r\n        if (!date) return false;\r\n        const projectDate = new Date(date);\r\n        if (isNaN(projectDate.getTime())) return false;\r\n        const tomorrowStr = tomorrow.toISOString().split('T')[0];\r\n        const projectDateStr = projectDate.toISOString().split('T')[0];\r\n        return projectDateStr === tomorrowStr;\r\n      };\r\n\r\n      const todayTomorrowCount = projects.filter(\r\n        (project) => isToday(project.mintDate) || isTomorrow(project.mintDate)\r\n      ).length;\r\n\r\n      const validWenNotifications = notifications.filter((notif) => {\r\n        if (!notif.notificationFrequency || notif.notificationFrequency === '') {\r\n          console.log(`Notification WEN ignorée (pas de frequency):`, notif);\r\n          return false;\r\n        }\r\n\r\n        const frequencyDays = parseInt(notif.notificationFrequency, 10);\r\n        const createdAt = new Date(notif.createdAt);\r\n        if (isNaN(createdAt.getTime())) {\r\n          console.log(`Date createdAt invalide pour notification WEN:`, notif);\r\n          return false;\r\n        }\r\n\r\n        const daysSinceCreation = Math.floor((today - createdAt) / (1000 * 60 * 60 * 24));\r\n        const notificationsPassed = Math.floor(daysSinceCreation / frequencyDays);\r\n        const nextNotificationDate = new Date(createdAt);\r\n        nextNotificationDate.setDate(createdAt.getDate() + (notificationsPassed + 1) * frequencyDays);\r\n\r\n        const startDate = new Date(nextNotificationDate);\r\n        startDate.setDate(startDate.getDate() - 1);\r\n        const endDate = new Date(nextNotificationDate);\r\n        endDate.setDate(endDate.getDate() + 1);\r\n\r\n        const isInWindow = today >= startDate && today <= endDate;\r\n        console.log(\r\n          `Notification WEN ${notif.id}: frequency=${frequencyDays}, createdAt=${createdAt}, next=${nextNotificationDate}, inWindow=${isInWindow}`\r\n        );\r\n        return isInWindow;\r\n      });\r\n\r\n      const wenCount = validWenNotifications.length;\r\n      const totalCount = todayTomorrowCount + wenCount;\r\n\r\n      let minDaysUntilNextReminder = null;\r\n      if (notifications.length > 0) {\r\n        minDaysUntilNextReminder = Math.min(\r\n          ...notifications\r\n            .map((notif) => calculateDaysUntilNextReminder(notif))\r\n            .filter((days) => days !== null)\r\n        );\r\n      }\r\n      setNextReminderDays(minDaysUntilNextReminder);\r\n\r\n      console.log('Projets aujourd’hui + demain:', todayTomorrowCount);\r\n      console.log('Notifications WEN comptées:', wenCount);\r\n      console.log('Notifications historiques:', historicalNotifications.length);\r\n      console.log('Total compteur:', totalCount);\r\n      console.log('Prochain rappel dans (jours):', minDaysUntilNextReminder);\r\n\r\n      localStorage.setItem(`notificationCount_${account}`, totalCount.toString());\r\n      localStorage.setItem(`wenNotificationCount_${account}`, wenCount.toString());\r\n      window.dispatchEvent(new CustomEvent('updateNotifications'));\r\n    }\r\n  }, [notifications, projects, account]);\r\n\r\n  const calculateNextReminder = (notification) => {\r\n    if (!notification.createdAt || !notification.notificationFrequency) return new Date(9999, 0, 1);\r\n    const createdAt = new Date(notification.createdAt);\r\n    createdAt.setHours(0, 0, 0, 0);\r\n    const frequencyDays = parseInt(notification.notificationFrequency, 10);\r\n    if (isNaN(frequencyDays) || frequencyDays <= 0) return new Date(9999, 0, 1);\r\n    const daysSinceCreation = Math.floor((today - createdAt) / (1000 * 60 * 60 * 24));\r\n    const notificationsPassed = Math.floor(daysSinceCreation / frequencyDays);\r\n    const nextNotificationDate = new Date(createdAt);\r\n    nextNotificationDate.setDate(createdAt.getDate() + (notificationsPassed + 1) * frequencyDays);\r\n    return nextNotificationDate;\r\n  };\r\n\r\n  const calculateRepetitions = (notification) => {\r\n    if (!notification.createdAt || !notification.notificationFrequency) {\r\n      console.log('Données manquantes pour calculer les répétitions:', notification);\r\n      return 0;\r\n    }\r\n    const createdAt = new Date(notification.createdAt);\r\n    createdAt.setHours(0, 0, 0, 0);\r\n    const frequencyDays = parseInt(notification.notificationFrequency, 10);\r\n    if (isNaN(frequencyDays) || frequencyDays <= 0) {\r\n      console.log('Fréquence invalide:', notification.notificationFrequency);\r\n      return 0;\r\n    }\r\n    const daysPassed = Math.floor((today - createdAt) / (1000 * 60 * 60 * 24));\r\n    const repetitions = Math.floor(daysPassed / frequencyDays);\r\n    console.log(`Calcul répétitions pour ${notification.id}: daysPassed=${daysPassed}, frequencyDays=${frequencyDays}, repetitions=${repetitions}`);\r\n    return Math.max(0, repetitions);\r\n  };\r\n\r\n  const calculateDaysUntilNextReminder = (notification) => {\r\n    const nextReminder = calculateNextReminder(notification);\r\n    if (isNaN(nextReminder.getTime())) {\r\n      console.log('Date de prochain rappel invalide:', notification);\r\n      return null;\r\n    }\r\n    const diffTime = nextReminder - today;\r\n    const daysUntil = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\r\n    return daysUntil > 0 ? daysUntil : 0;\r\n  };\r\n\r\n  const formatProjectName = (project) => {\r\n    const nameEn = project.name_en || project.name;\r\n    const nameFr = project.name_fr || project.name;\r\n    if (nameEn && nameFr && nameEn !== nameFr) {\r\n      return `${nameEn} (${nameFr})`;\r\n    }\r\n    return nameEn || nameFr || 'N/A';\r\n  };\r\n\r\n  const handleFrequencyClick = (notificationId) => {\r\n    const notification = notifications.find((n) => n.id === notificationId);\r\n    setSelectedNotificationId(notificationId);\r\n    setNewFrequency(notification.notificationFrequency || '1');\r\n    setShowFrequencyModal(true);\r\n  };\r\n\r\n  const handleFrequencyUpdate = () => {\r\n    if (!newFrequency || isNaN(parseInt(newFrequency)) || parseInt(newFrequency) <= 0) {\r\n      alert(t('invalid_frequency'));\r\n      return;\r\n    }\r\n\r\n    const updatedNotifications = notifications.map((n) =>\r\n      n.id === selectedNotificationId\r\n        ? { ...n, notificationFrequency: newFrequency, createdAt: new Date().toISOString() }\r\n        : n\r\n    );\r\n\r\n    const updatedProjects = projects.map((p) =>\r\n      p.id === notifications.find((n) => n.id === selectedNotificationId).project.id\r\n        ? { ...p, notificationFrequency: newFrequency }\r\n        : p\r\n    );\r\n\r\n    localStorage.setItem(`wenNotifications_${account}`, JSON.stringify(updatedNotifications));\r\n    localStorage.setItem(`projects_${account}`, JSON.stringify(updatedProjects));\r\n    setNotifications(updatedNotifications);\r\n    setProjects(updatedProjects);\r\n    setShowFrequencyModal(false);\r\n    window.dispatchEvent(new CustomEvent('updateNotifications'));\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen p-6\" style={{ backgroundColor: '#00DDAF' }}>\r\n      <h1 className=\"text-4xl font-bold text-gray-800 mb-6\">\r\n        {nextReminderDays !== null\r\n          ? t('wen_notifications_title', {\r\n              days: nextReminderDays,\r\n              daysS: nextReminderDays !== 1 ? 's' : '',\r\n            })\r\n          : t('wen_notifications_title', { days: 'N/A', daysS: '' })}\r\n      </h1>\r\n      <div className=\"mb-6\">\r\n        <h2 className=\"text-2xl font-semibold text-gray-800 mb-4\">\r\n          {nextReminderDays !== null\r\n            ? t('wen_notifications_subtitle', {\r\n                days: nextReminderDays,\r\n                daysS: nextReminderDays !== 1 ? 's' : '',\r\n              })\r\n            : t('wen_notifications_subtitle', { days: 'N/A', daysS: '' })}\r\n        </h2>\r\n        {notifications.length === 0 ? (\r\n          <p className=\"text-gray-700\">{t('no_wen_notifications')}</p>\r\n        ) : (\r\n          <div className=\"space-y-4\">\r\n            {notifications\r\n              .sort((a, b) => calculateNextReminder(a) - calculateNextReminder(b))\r\n              .map((notif) => {\r\n                const repetitions = calculateRepetitions(notif);\r\n                const frequency = notif.notificationFrequency || '1';\r\n                const daysUntil = calculateDaysUntilNextReminder(notif);\r\n                console.log(`Badge pour ${notif.id}: repetitions=${repetitions}, frequency=${frequency}, daysUntil=${daysUntil}`);\r\n                return (\r\n                  <div\r\n                    key={notif.id}\r\n                    className=\"p-4 bg-white shadow-md rounded-lg transition-all hover:shadow-lg relative\"\r\n                  >\r\n                    <div className=\"flex justify-end mb-2\">\r\n                      <button\r\n                        onClick={() => handleFrequencyClick(notif.id)}\r\n                        className=\"bg-blue-500 text-white px-3 py-1 rounded-full text-sm hover:bg-blue-600 max-w-sm whitespace-pre-wrap text-right\"\r\n                      >\r\n                        {repetitions >= 0 && frequency && daysUntil !== null\r\n                          ? t('repetitions', {\r\n                              count: repetitions,\r\n                              frequency: frequency,\r\n                              daysUntil: daysUntil,\r\n                              s1: parseInt(frequency, 10) !== 1 ? 's' : '',\r\n                              s2: daysUntil !== 1 ? 's' : '',\r\n                              lng: 'en',\r\n                            })\r\n                          : '0 repetition(s) (every 1 day) - next in N/A day(s)'\r\n                        }\r\n                      </button>\r\n                    </div>\r\n                    <div>\r\n                      <p className=\"text-gray-800\">\r\n                        {t('reminder_for_project', {\r\n                          name: formatProjectName(notif.project),\r\n                          date: new Date(notif.date).toLocaleString(),\r\n                          daysUntil: daysUntil !== null ? daysUntil : 'N/A',\r\n                        })}\r\n                      </p>\r\n                      <p className=\"text-gray-700\">\r\n                        <strong>{t('type')} :</strong> {notif.project.type}\r\n                        {notif.project.customType && ` (${notif.project.customType})`}\r\n                      </p>\r\n                      <p className=\"text-gray-700\">\r\n                        <strong>{t('mint_date')} :</strong> {notif.project.mintDate || t('na')}\r\n                        {notif.project.mintTime && ` ${t('at')} ${notif.project.mintTime}`}\r\n                      </p>\r\n                      <p className=\"text-gray-700\">\r\n                        <strong>{t('note')} :</strong> {notif.project.note || t('na')}/10\r\n                      </p>\r\n                      <p className=\"text-gray-700\">\r\n                        <strong>{t('price')} :</strong>{' '}\r\n                        {notif.project.isFree ? t('free') : notif.project.price || t('na')}\r\n                      </p>\r\n                      {notif.project.image && (\r\n                        <div className=\"mt-2\">\r\n                          <img\r\n                            src={notif.project.image}\r\n                            alt={formatProjectName(notif.project)}\r\n                            className=\"w-32 h-32 object-cover rounded-lg\"\r\n                            onError={() => console.log('Erreur chargement image:', notif.project.name)}\r\n                          />\r\n                        </div>\r\n                      )}\r\n                      <div className=\"mt-2\">\r\n                        <p className=\"text-gray-700 font-semibold\">{t('links')} :</p>\r\n                        <div className=\"flex flex-col space-y-1\">\r\n                          {notif.project.telegramLink && (\r\n                            <a\r\n                              href={notif.project.telegramLink}\r\n                              target=\"_blank\"\r\n                              rel=\"noopener noreferrer\"\r\n                              className=\"text-blue-500 hover:underline\"\r\n                            >\r\n                              {t('telegram')}\r\n                            </a>\r\n                          )}\r\n                          {notif.project.xLink && (\r\n                            <a\r\n                              href={notif.project.xLink}\r\n                              target=\"_blank\"\r\n                              rel=\"noopener noreferrer\"\r\n                              className=\"text-blue-500 hover:underline\"\r\n                            >\r\n                              {t('x')}\r\n                            </a>\r\n                          )}\r\n                          {notif.project.discordLink && (\r\n                            <a\r\n                              href={notif.project.discordLink}\r\n                              target=\"_blank\"\r\n                              rel=\"noopener noreferrer\"\r\n                              className=\"text-blue-500 hover:underline\"\r\n                            >\r\n                              {t('discord')}\r\n                            </a>\r\n                          )}\r\n                          {notif.project.websiteLink && (\r\n                            <a\r\n                              href={notif.project.websiteLink}\r\n                              target=\"_blank\"\r\n                              rel=\"noopener noreferrer\"\r\n                              className=\"text-blue-500 hover:underline\"\r\n                            >\r\n                              {t('website')}\r\n                            </a>\r\n                          )}\r\n                          {notif.project.platformLink && (\r\n                            <a\r\n                              href={notif.project.platformLink}\r\n                              target=\"_blank\"\r\n                              rel=\"noopener noreferrer\"\r\n                              className=\"text-blue-500 hover:underline\"\r\n                            >\r\n                              {t('platform')}\r\n                            </a>\r\n                          )}\r\n                          {notif.project.organizerLink && (\r\n                            <a\r\n                              href={notif.project.organizerLink}\r\n                              target=\"_blank\"\r\n                              rel=\"noopener noreferrer\"\r\n                              className=\"text-blue-500 hover:underline\"\r\n                            >\r\n                              {t('organizer')}\r\n                            </a>\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {showFrequencyModal && (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n          <div className=\"bg-white p-6 rounded-lg shadow-lg\">\r\n            <h2 className=\"text-2xl font-semibold mb-4\">{t('edit_notification_frequency')}</h2>\r\n            <label className=\"block mb-2\">{t('frequency_days')} :</label>\r\n            <input\r\n              type=\"number\"\r\n              value={newFrequency}\r\n              onChange={(e) => setNewFrequency(e.target.value)}\r\n              className=\"w-full p-2 border rounded-lg mb-4\"\r\n              placeholder={t('frequency_placeholder')}\r\n              min=\"1\"\r\n            />\r\n            <div className=\"flex justify-end space-x-2\">\r\n              <button\r\n                onClick={() => setShowFrequencyModal(false)}\r\n                className=\"bg-gray-500 text-white px-4 py-2 rounded-lg hover:bg-gray-600\"\r\n              >\r\n                {t('cancel')}\r\n              </button>\r\n              <button\r\n                onClick={handleFrequencyUpdate}\r\n                className=\"bg-blue-500 text-white px-4 py-2 rounded-lg hover:bg-blue-600\"\r\n              >\r\n                {t('validate')}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NotificationWen;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}