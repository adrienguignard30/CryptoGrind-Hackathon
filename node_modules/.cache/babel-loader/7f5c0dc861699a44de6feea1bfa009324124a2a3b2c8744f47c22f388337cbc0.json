{"ast":null,"code":"import { SCWKeyManager } from './SCWKeyManager.js';\nimport { standardErrors } from '../../core/error/errors.js';\nimport { ScopedLocalStorage } from '../../core/storage/ScopedLocalStorage.js';\nimport { ensureIntNumber, hexStringFromNumber } from '../../core/type/util.js';\nimport { decryptContent, encryptContent, exportKeyToHexString, importKeyFromHexString } from '../../util/cipher.js';\nimport { fetchRPCRequest } from '../../util/provider.js';\nconst ACCOUNTS_KEY = 'accounts';\nconst ACTIVE_CHAIN_STORAGE_KEY = 'activeChain';\nconst AVAILABLE_CHAINS_STORAGE_KEY = 'availableChains';\nconst WALLET_CAPABILITIES_STORAGE_KEY = 'walletCapabilities';\nexport class SCWSigner {\n  constructor(params) {\n    var _a, _b, _c;\n    this.metadata = params.metadata;\n    this.communicator = params.communicator;\n    this.callback = params.callback;\n    this.keyManager = new SCWKeyManager();\n    this.storage = new ScopedLocalStorage('CBWSDK', 'SCWStateManager');\n    this.accounts = (_a = this.storage.loadObject(ACCOUNTS_KEY)) !== null && _a !== void 0 ? _a : [];\n    this.chain = this.storage.loadObject(ACTIVE_CHAIN_STORAGE_KEY) || {\n      id: (_c = (_b = params.metadata.appChainIds) === null || _b === void 0 ? void 0 : _b[0]) !== null && _c !== void 0 ? _c : 1\n    };\n    this.handshake = this.handshake.bind(this);\n    this.request = this.request.bind(this);\n    this.createRequestMessage = this.createRequestMessage.bind(this);\n    this.decryptResponseMessage = this.decryptResponseMessage.bind(this);\n  }\n  async handshake(args) {\n    var _a, _b, _c, _d;\n    // Open the popup before constructing the request message.\n    // This is to ensure that the popup is not blocked by some browsers (i.e. Safari)\n    await ((_b = (_a = this.communicator).waitForPopupLoaded) === null || _b === void 0 ? void 0 : _b.call(_a));\n    const handshakeMessage = await this.createRequestMessage({\n      handshake: {\n        method: args.method,\n        params: Object.assign({}, this.metadata, (_c = args.params) !== null && _c !== void 0 ? _c : {})\n      }\n    });\n    const response = await this.communicator.postRequestAndWaitForResponse(handshakeMessage);\n    // store peer's public key\n    if ('failure' in response.content) throw response.content.failure;\n    const peerPublicKey = await importKeyFromHexString('public', response.sender);\n    await this.keyManager.setPeerPublicKey(peerPublicKey);\n    const decrypted = await this.decryptResponseMessage(response);\n    const result = decrypted.result;\n    if ('error' in result) throw result.error;\n    switch (args.method) {\n      case 'eth_requestAccounts':\n        {\n          const accounts = result.value;\n          this.accounts = accounts;\n          this.storage.storeObject(ACCOUNTS_KEY, accounts);\n          (_d = this.callback) === null || _d === void 0 ? void 0 : _d.call(this, 'accountsChanged', accounts);\n          break;\n        }\n    }\n  }\n  async request(request) {\n    var _a;\n    if (this.accounts.length === 0) {\n      switch (request.method) {\n        case 'wallet_sendCalls':\n          return this.sendRequestToPopup(request);\n        default:\n          throw standardErrors.provider.unauthorized();\n      }\n    }\n    switch (request.method) {\n      case 'eth_requestAccounts':\n        (_a = this.callback) === null || _a === void 0 ? void 0 : _a.call(this, 'connect', {\n          chainId: hexStringFromNumber(this.chain.id)\n        });\n        return this.accounts;\n      case 'eth_accounts':\n        return this.accounts;\n      case 'eth_coinbase':\n        return this.accounts[0];\n      case 'net_version':\n        return this.chain.id;\n      case 'eth_chainId':\n        return hexStringFromNumber(this.chain.id);\n      case 'wallet_getCapabilities':\n        return this.storage.loadObject(WALLET_CAPABILITIES_STORAGE_KEY);\n      case 'wallet_switchEthereumChain':\n        return this.handleSwitchChainRequest(request);\n      case 'eth_ecRecover':\n      case 'personal_sign':\n      case 'wallet_sign':\n      case 'personal_ecRecover':\n      case 'eth_signTransaction':\n      case 'eth_sendTransaction':\n      case 'eth_signTypedData_v1':\n      case 'eth_signTypedData_v3':\n      case 'eth_signTypedData_v4':\n      case 'eth_signTypedData':\n      case 'wallet_addEthereumChain':\n      case 'wallet_watchAsset':\n      case 'wallet_sendCalls':\n      case 'wallet_showCallsStatus':\n      case 'wallet_grantPermissions':\n        return this.sendRequestToPopup(request);\n      default:\n        if (!this.chain.rpcUrl) throw standardErrors.rpc.internal('No RPC URL set for chain');\n        return fetchRPCRequest(request, this.chain.rpcUrl);\n    }\n  }\n  async sendRequestToPopup(request) {\n    var _a, _b;\n    // Open the popup before constructing the request message.\n    // This is to ensure that the popup is not blocked by some browsers (i.e. Safari)\n    await ((_b = (_a = this.communicator).waitForPopupLoaded) === null || _b === void 0 ? void 0 : _b.call(_a));\n    const response = await this.sendEncryptedRequest(request);\n    const decrypted = await this.decryptResponseMessage(response);\n    const result = decrypted.result;\n    if ('error' in result) throw result.error;\n    return result.value;\n  }\n  async cleanup() {\n    var _a, _b;\n    this.storage.clear();\n    await this.keyManager.clear();\n    this.accounts = [];\n    this.chain = {\n      id: (_b = (_a = this.metadata.appChainIds) === null || _a === void 0 ? void 0 : _a[0]) !== null && _b !== void 0 ? _b : 1\n    };\n  }\n  /**\n   * @returns `null` if the request was successful.\n   * https://eips.ethereum.org/EIPS/eip-3326#wallet_switchethereumchain\n   */\n  async handleSwitchChainRequest(request) {\n    var _a;\n    const params = request.params;\n    if (!params || !((_a = params[0]) === null || _a === void 0 ? void 0 : _a.chainId)) {\n      throw standardErrors.rpc.invalidParams();\n    }\n    const chainId = ensureIntNumber(params[0].chainId);\n    const localResult = this.updateChain(chainId);\n    if (localResult) return null;\n    const popupResult = await this.sendRequestToPopup(request);\n    if (popupResult === null) {\n      this.updateChain(chainId);\n    }\n    return popupResult;\n  }\n  async sendEncryptedRequest(request) {\n    const sharedSecret = await this.keyManager.getSharedSecret();\n    if (!sharedSecret) {\n      throw standardErrors.provider.unauthorized('No valid session found, try requestAccounts before other methods');\n    }\n    const encrypted = await encryptContent({\n      action: request,\n      chainId: this.chain.id\n    }, sharedSecret);\n    const message = await this.createRequestMessage({\n      encrypted\n    });\n    return this.communicator.postRequestAndWaitForResponse(message);\n  }\n  async createRequestMessage(content) {\n    const publicKey = await exportKeyToHexString('public', await this.keyManager.getOwnPublicKey());\n    return {\n      id: crypto.randomUUID(),\n      sender: publicKey,\n      content,\n      timestamp: new Date()\n    };\n  }\n  async decryptResponseMessage(message) {\n    var _a, _b;\n    const content = message.content;\n    // throw protocol level error\n    if ('failure' in content) {\n      throw content.failure;\n    }\n    const sharedSecret = await this.keyManager.getSharedSecret();\n    if (!sharedSecret) {\n      throw standardErrors.provider.unauthorized('Invalid session');\n    }\n    const response = await decryptContent(content.encrypted, sharedSecret);\n    const availableChains = (_a = response.data) === null || _a === void 0 ? void 0 : _a.chains;\n    if (availableChains) {\n      const chains = Object.entries(availableChains).map(([id, rpcUrl]) => ({\n        id: Number(id),\n        rpcUrl\n      }));\n      this.storage.storeObject(AVAILABLE_CHAINS_STORAGE_KEY, chains);\n      this.updateChain(this.chain.id, chains);\n    }\n    const walletCapabilities = (_b = response.data) === null || _b === void 0 ? void 0 : _b.capabilities;\n    if (walletCapabilities) {\n      this.storage.storeObject(WALLET_CAPABILITIES_STORAGE_KEY, walletCapabilities);\n    }\n    return response;\n  }\n  updateChain(chainId, newAvailableChains) {\n    var _a;\n    const chains = newAvailableChains !== null && newAvailableChains !== void 0 ? newAvailableChains : this.storage.loadObject(AVAILABLE_CHAINS_STORAGE_KEY);\n    const chain = chains === null || chains === void 0 ? void 0 : chains.find(chain => chain.id === chainId);\n    if (!chain) return false;\n    if (chain !== this.chain) {\n      this.chain = chain;\n      this.storage.storeObject(ACTIVE_CHAIN_STORAGE_KEY, chain);\n      (_a = this.callback) === null || _a === void 0 ? void 0 : _a.call(this, 'chainChanged', hexStringFromNumber(chain.id));\n    }\n    return true;\n  }\n}","map":{"version":3,"names":["SCWKeyManager","standardErrors","ScopedLocalStorage","ensureIntNumber","hexStringFromNumber","decryptContent","encryptContent","exportKeyToHexString","importKeyFromHexString","fetchRPCRequest","ACCOUNTS_KEY","ACTIVE_CHAIN_STORAGE_KEY","AVAILABLE_CHAINS_STORAGE_KEY","WALLET_CAPABILITIES_STORAGE_KEY","SCWSigner","constructor","params","metadata","communicator","callback","keyManager","storage","accounts","_a","loadObject","chain","id","_c","_b","appChainIds","handshake","bind","request","createRequestMessage","decryptResponseMessage","args","waitForPopupLoaded","call","handshakeMessage","method","Object","assign","response","postRequestAndWaitForResponse","content","failure","peerPublicKey","sender","setPeerPublicKey","decrypted","result","error","value","storeObject","_d","length","sendRequestToPopup","provider","unauthorized","chainId","handleSwitchChainRequest","rpcUrl","rpc","internal","sendEncryptedRequest","cleanup","clear","invalidParams","localResult","updateChain","popupResult","sharedSecret","getSharedSecret","encrypted","action","message","publicKey","getOwnPublicKey","crypto","randomUUID","timestamp","Date","availableChains","data","chains","entries","map","Number","walletCapabilities","capabilities","newAvailableChains","find"],"sources":["../../../src/sign/scw/SCWSigner.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}