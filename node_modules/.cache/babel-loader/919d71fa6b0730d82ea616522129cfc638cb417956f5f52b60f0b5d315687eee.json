{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Adrien\\\\Desktop\\\\CryptoGrind - Copie\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { WagmiConfig, createConfig, useAccount, useBalance, useConnect, useDisconnect } from 'wagmi';\nimport { createPublicClient, http } from 'viem';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query';\nimport { injected } from '@wagmi/connectors';\nimport Header from './components/Header';\nimport Home from './pages/Home';\nimport Notifications from './pages/Notifications';\nimport Profile from './pages/Profile';\nimport Missions from './pages/Missions';\nimport NotificationWen from './components/NotificationWen';\nimport AddProject from './components/AddProject';\n\n// Config du testnet Abstract\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst abstractTestnet = {\n  id: 11124,\n  name: 'Abstract Testnet',\n  network: 'abstract-testnet',\n  nativeCurrency: {\n    name: 'Ether',\n    symbol: 'ETH',\n    decimals: 18\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://api.testnet.abs.xyz']\n    },\n    public: {\n      http: ['https://api.testnet.abs.xyz']\n    }\n  },\n  blockExplorers: {\n    default: {\n      name: 'AbstractScan',\n      url: 'https://sepolia.abscan.org'\n    }\n  },\n  testnet: true\n};\nconst queryClient = new QueryClient();\nconst config = createConfig({\n  chains: [abstractTestnet],\n  connectors: [injected({\n    target: 'metaMask'\n  })],\n  client: ({\n    chain\n  }) => createPublicClient({\n    chain,\n    transport: http()\n  })\n});\nexport const GrindContext = /*#__PURE__*/React.createContext();\nfunction App() {\n  _s();\n  const [grindBalance, setGrindBalance] = useState(0);\n  const [projects, setProjects] = useState([]);\n  const {\n    address: account,\n    isConnected\n  } = useAccount();\n  const {\n    connect,\n    connectors,\n    error: connectError,\n    isLoading\n  } = useConnect();\n  const {\n    disconnect\n  } = useDisconnect();\n\n  // Obtenir le solde ETH\n  const {\n    data: balanceData,\n    error: balanceError,\n    isLoading: balanceLoading,\n    refetch\n  } = useBalance({\n    address: account,\n    chainId: abstractTestnet.id,\n    enabled: !!account\n  });\n\n  // Logs détaillés pour déboguer\n  useEffect(() => {\n    console.log('App - Account:', account);\n    console.log('App - isConnected:', isConnected);\n    console.log('App - balanceData:', balanceData);\n    console.log('App - balanceError:', balanceError);\n    console.log('App - balanceLoading:', balanceLoading);\n    if (balanceData) {\n      setGrindBalance(balanceData.value.toString()); // Solde en wei\n      console.log('Solde ETH:', balanceData.formatted, 'ETH');\n    } else if (balanceError) {\n      console.error('Erreur récupération solde:', balanceError.message);\n    }\n  }, [balanceData, balanceError, balanceLoading, account, isConnected]);\n\n  // Forcer une requête manuelle au RPC pour vérifier le solde\n  useEffect(() => {\n    if (account) {\n      const checkBalanceManually = async () => {\n        try {\n          const client = createPublicClient({\n            chain: abstractTestnet,\n            transport: http()\n          });\n          const balance = await client.getBalance({\n            address: account\n          });\n          console.log('Solde manuel ETH:', balance.toString(), 'wei');\n          console.log('Solde manuel ETH (formatté):', Number(balance) / 1e18, 'ETH');\n        } catch (error) {\n          console.error('Erreur requête manuelle solde:', error);\n        }\n      };\n      checkBalanceManually();\n    }\n  }, [account]);\n\n  // Charger les projets depuis localStorage\n  useEffect(() => {\n    if (account) {\n      const savedProjects = localStorage.getItem(`projects_${account}`);\n      console.log('Chargement projets depuis localStorage:', savedProjects);\n      setProjects(savedProjects ? JSON.parse(savedProjects) : []);\n    } else {\n      setProjects([]);\n      console.log('Aucun account, réinitialisation projets');\n    }\n  }, [account]);\n\n  // Synchroniser localStorage avec l'état projects\n  useEffect(() => {\n    if (account) {\n      console.log('Sauvegarde projets dans localStorage:', projects);\n      localStorage.setItem(`projects_${account}`, JSON.stringify(projects));\n    }\n  }, [projects, account]);\n  const handleAddProject = project => {\n    setProjects(prevProjects => {\n      const updatedProjects = [...prevProjects, project];\n      console.log('Nouveau projet ajouté:', project);\n      return updatedProjects;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(WagmiConfig, {\n    config: config,\n    children: /*#__PURE__*/_jsxDEV(QueryClientProvider, {\n      client: queryClient,\n      children: /*#__PURE__*/_jsxDEV(GrindContext.Provider, {\n        value: {\n          grindBalance,\n          account\n        },\n        children: /*#__PURE__*/_jsxDEV(Router, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-4\",\n            children: isConnected ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Connect\\xE9 : \", account]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => disconnect(),\n                className: \"bg-red-600 text-white px-4 py-2 rounded-lg hover:bg-red-700\",\n                children: \"D\\xE9connexion\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => refetch(),\n                className: \"bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 ml-2\",\n                children: \"Rafra\\xEEchir solde\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [connectors.map(connector => /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => connect({\n                  connector\n                }),\n                disabled: !connector.ready || isLoading,\n                className: \"bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 mr-2\",\n                children: isLoading ? 'Connexion...' : `Connecter via ${connector.name}`\n              }, connector.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 21\n              }, this)), connectError && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-red-600\",\n                children: connectError.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 36\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Routes, {\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              path: \"/\",\n              element: /*#__PURE__*/_jsxDEV(Home, {\n                projects: projects,\n                setProjects: setProjects,\n                handleAddProject: handleAddProject\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/notifications\",\n              element: /*#__PURE__*/_jsxDEV(Notifications, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 53\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/profile\",\n              element: /*#__PURE__*/_jsxDEV(Profile, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 47\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/missions\",\n              element: /*#__PURE__*/_jsxDEV(Missions, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 48\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/lottery\",\n              element: /*#__PURE__*/_jsxDEV(NotificationWen, {\n                projects: projects\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 47\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/add-project\",\n              element: /*#__PURE__*/_jsxDEV(AddProject, {\n                onAddProject: handleAddProject\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 51\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"zkamxj/V/tGfhK1MeCpqaFovFEY=\", false, function () {\n  return [useAccount, useConnect, useDisconnect, useBalance];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","WagmiConfig","createConfig","useAccount","useBalance","useConnect","useDisconnect","createPublicClient","http","BrowserRouter","Router","Routes","Route","QueryClient","QueryClientProvider","injected","Header","Home","Notifications","Profile","Missions","NotificationWen","AddProject","jsxDEV","_jsxDEV","abstractTestnet","id","name","network","nativeCurrency","symbol","decimals","rpcUrls","default","public","blockExplorers","url","testnet","queryClient","config","chains","connectors","target","client","chain","transport","GrindContext","createContext","App","_s","grindBalance","setGrindBalance","projects","setProjects","address","account","isConnected","connect","error","connectError","isLoading","disconnect","data","balanceData","balanceError","balanceLoading","refetch","chainId","enabled","console","log","value","toString","formatted","message","checkBalanceManually","balance","getBalance","Number","savedProjects","localStorage","getItem","JSON","parse","setItem","stringify","handleAddProject","project","prevProjects","updatedProjects","children","Provider","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","connector","disabled","ready","path","element","onAddProject","_c","$RefreshReg$"],"sources":["C:/Users/Adrien/Desktop/CryptoGrind - Copie/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { WagmiConfig, createConfig, useAccount, useBalance, useConnect, useDisconnect } from 'wagmi';\r\nimport { createPublicClient, http } from 'viem';\r\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\r\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query';\r\nimport { injected } from '@wagmi/connectors';\r\nimport Header from './components/Header';\r\nimport Home from './pages/Home';\r\nimport Notifications from './pages/Notifications';\r\nimport Profile from './pages/Profile';\r\nimport Missions from './pages/Missions';\r\nimport NotificationWen from './components/NotificationWen';\r\nimport AddProject from './components/AddProject';\r\n\r\n// Config du testnet Abstract\r\nconst abstractTestnet = {\r\n  id: 11124,\r\n  name: 'Abstract Testnet',\r\n  network: 'abstract-testnet',\r\n  nativeCurrency: {\r\n    name: 'Ether',\r\n    symbol: 'ETH',\r\n    decimals: 18,\r\n  },\r\n  rpcUrls: {\r\n    default: {\r\n      http: ['https://api.testnet.abs.xyz'],\r\n    },\r\n    public: {\r\n      http: ['https://api.testnet.abs.xyz'],\r\n    },\r\n  },\r\n  blockExplorers: {\r\n    default: { name: 'AbstractScan', url: 'https://sepolia.abscan.org' },\r\n  },\r\n  testnet: true,\r\n};\r\n\r\nconst queryClient = new QueryClient();\r\n\r\nconst config = createConfig({\r\n  chains: [abstractTestnet],\r\n  connectors: [\r\n    injected({ target: 'metaMask' }),\r\n  ],\r\n  client: ({ chain }) =>\r\n    createPublicClient({\r\n      chain,\r\n      transport: http(),\r\n    }),\r\n});\r\n\r\nexport const GrindContext = React.createContext();\r\n\r\nfunction App() {\r\n  const [grindBalance, setGrindBalance] = useState(0);\r\n  const [projects, setProjects] = useState([]);\r\n  const { address: account, isConnected } = useAccount();\r\n  const { connect, connectors, error: connectError, isLoading } = useConnect();\r\n  const { disconnect } = useDisconnect();\r\n\r\n  // Obtenir le solde ETH\r\n  const { data: balanceData, error: balanceError, isLoading: balanceLoading, refetch } = useBalance({\r\n    address: account,\r\n    chainId: abstractTestnet.id,\r\n    enabled: !!account,\r\n  });\r\n\r\n  // Logs détaillés pour déboguer\r\n  useEffect(() => {\r\n    console.log('App - Account:', account);\r\n    console.log('App - isConnected:', isConnected);\r\n    console.log('App - balanceData:', balanceData);\r\n    console.log('App - balanceError:', balanceError);\r\n    console.log('App - balanceLoading:', balanceLoading);\r\n\r\n    if (balanceData) {\r\n      setGrindBalance(balanceData.value.toString()); // Solde en wei\r\n      console.log('Solde ETH:', balanceData.formatted, 'ETH');\r\n    } else if (balanceError) {\r\n      console.error('Erreur récupération solde:', balanceError.message);\r\n    }\r\n  }, [balanceData, balanceError, balanceLoading, account, isConnected]);\r\n\r\n  // Forcer une requête manuelle au RPC pour vérifier le solde\r\n  useEffect(() => {\r\n    if (account) {\r\n      const checkBalanceManually = async () => {\r\n        try {\r\n          const client = createPublicClient({\r\n            chain: abstractTestnet,\r\n            transport: http(),\r\n          });\r\n          const balance = await client.getBalance({ address: account });\r\n          console.log('Solde manuel ETH:', balance.toString(), 'wei');\r\n          console.log('Solde manuel ETH (formatté):', Number(balance) / 1e18, 'ETH');\r\n        } catch (error) {\r\n          console.error('Erreur requête manuelle solde:', error);\r\n        }\r\n      };\r\n      checkBalanceManually();\r\n    }\r\n  }, [account]);\r\n\r\n  // Charger les projets depuis localStorage\r\n  useEffect(() => {\r\n    if (account) {\r\n      const savedProjects = localStorage.getItem(`projects_${account}`);\r\n      console.log('Chargement projets depuis localStorage:', savedProjects);\r\n      setProjects(savedProjects ? JSON.parse(savedProjects) : []);\r\n    } else {\r\n      setProjects([]);\r\n      console.log('Aucun account, réinitialisation projets');\r\n    }\r\n  }, [account]);\r\n\r\n  // Synchroniser localStorage avec l'état projects\r\n  useEffect(() => {\r\n    if (account) {\r\n      console.log('Sauvegarde projets dans localStorage:', projects);\r\n      localStorage.setItem(`projects_${account}`, JSON.stringify(projects));\r\n    }\r\n  }, [projects, account]);\r\n\r\n  const handleAddProject = (project) => {\r\n    setProjects((prevProjects) => {\r\n      const updatedProjects = [...prevProjects, project];\r\n      console.log('Nouveau projet ajouté:', project);\r\n      return updatedProjects;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <WagmiConfig config={config}>\r\n      <QueryClientProvider client={queryClient}>\r\n        <GrindContext.Provider value={{ grindBalance, account }}>\r\n          <Router>\r\n            <div className=\"p-4\">\r\n              {isConnected ? (\r\n                <div>\r\n                  <p>Connecté : {account}</p>\r\n                  <button\r\n                    onClick={() => disconnect()}\r\n                    className=\"bg-red-600 text-white px-4 py-2 rounded-lg hover:bg-red-700\"\r\n                  >\r\n                    Déconnexion\r\n                  </button>\r\n                  <button\r\n                    onClick={() => refetch()}\r\n                    className=\"bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 ml-2\"\r\n                  >\r\n                    Rafraîchir solde\r\n                  </button>\r\n                </div>\r\n              ) : (\r\n                <div>\r\n                  {connectors.map((connector) => (\r\n                    <button\r\n                      key={connector.id}\r\n                      onClick={() => connect({ connector })}\r\n                      disabled={!connector.ready || isLoading}\r\n                      className=\"bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 mr-2\"\r\n                    >\r\n                      {isLoading ? 'Connexion...' : `Connecter via ${connector.name}`}\r\n                    </button>\r\n                  ))}\r\n                  {connectError && <p className=\"text-red-600\">{connectError.message}</p>}\r\n                </div>\r\n              )}\r\n            </div>\r\n            <Header />\r\n            <Routes>\r\n              <Route\r\n                path=\"/\"\r\n                element={\r\n                  <Home\r\n                    projects={projects}\r\n                    setProjects={setProjects}\r\n                    handleAddProject={handleAddProject}\r\n                  />\r\n                }\r\n              />\r\n              <Route path=\"/notifications\" element={<Notifications />} />\r\n              <Route path=\"/profile\" element={<Profile />} />\r\n              <Route path=\"/missions\" element={<Missions />} />\r\n              <Route path=\"/lottery\" element={<NotificationWen projects={projects} />} />\r\n              <Route path=\"/add-project\" element={<AddProject onAddProject={handleAddProject} />} />\r\n            </Routes>\r\n          </Router>\r\n        </GrindContext.Provider>\r\n      </QueryClientProvider>\r\n    </WagmiConfig>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}