{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Adrien\\\\Desktop\\\\CryptoGrind - Copie\\\\client\\\\src\\\\pages\\\\Missions.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from 'react';\nimport { GrindContext } from '../App';\nimport { useSendTransaction } from 'wagmi';\nimport { parseEther } from 'viem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Missions() {\n  _s();\n  const {\n    grindBalance,\n    account\n  } = useContext(GrindContext);\n\n  // État pour les tickets de l'utilisateur, le total des tickets et les participants\n  const [tickets, setTickets] = useState(() => parseInt(localStorage.getItem('userTickets')) || 0);\n  const [totalTickets, setTotalTickets] = useState(() => parseInt(localStorage.getItem('totalTickets')) || 0);\n  const [participants, setParticipants] = useState(() => {\n    const savedParticipants = localStorage.getItem('lotteryParticipants');\n    return savedParticipants ? JSON.parse(savedParticipants) : [];\n  });\n  const [userTicketsInLottery, setUserTicketsInLottery] = useState(0);\n  const [lastLotteryDate, setLastLotteryDate] = useState(() => localStorage.getItem('lastLotteryDate') || null);\n  const [missionsStatus, setMissionsStatus] = useState({\n    xLike: false,\n    xRetweet: false,\n    xFollow: false,\n    abstractVote: false\n  });\n\n  // Paiement en ETH\n  const {\n    sendTransaction,\n    isLoading,\n    isSuccess,\n    error\n  } = useSendTransaction();\n\n  // Adresse pour recevoir les ETH (ton portefeuille ou contrat de loterie)\n  const LOTTERY_ADDRESS = '0xYOUR_LOTTERY_ADDRESS'; // Remplace par ton adresse ou contrat\n\n  // Sauvegarde des données dans localStorage\n  useEffect(() => {\n    localStorage.setItem('userTickets', tickets.toString());\n    localStorage.setItem('totalTickets', totalTickets.toString());\n    localStorage.setItem('lotteryParticipants', JSON.stringify(participants));\n    localStorage.setItem('lastLotteryDate', lastLotteryDate || '');\n  }, [tickets, totalTickets, participants, lastLotteryDate]);\n\n  // Vérifier automatiquement la loterie tous les 1000 tickets\n  useEffect(() => {\n    if (totalTickets >= 1000) {\n      if (!lastLotteryDate || new Date(lastLotteryDate).getTime() < new Date().getTime() - 1000 * 60) {\n        drawLottery();\n      }\n    }\n  }, [totalTickets]);\n\n  // Achat de ticket avec ETH\n  const buyTicketWithETH = () => {\n    const ticketPriceETH = '0.01'; // 0.01 ETH par ticket (à confirmer)\n\n    if (!account) {\n      alert('Veuillez connecter votre wallet.');\n      return;\n    }\n    if (parseInt(grindBalance) < parseEther(ticketPriceETH)) {\n      alert(`Solde ETH insuffisant ! Vous avez besoin de ${ticketPriceETH} ETH pour acheter un ticket.`);\n      return;\n    }\n    sendTransaction({\n      to: LOTTERY_ADDRESS,\n      value: parseEther(ticketPriceETH)\n    });\n  };\n\n  // Mettre à jour les tickets après un achat réussi\n  useEffect(() => {\n    if (isSuccess) {\n      setTickets(prev => prev + 1);\n      setTotalTickets(prev => prev + 1);\n      alert(`Vous avez acheté un ticket pour la loterie avec 0.01 ETH !`);\n    }\n    if (error) {\n      alert(`Erreur lors de l'achat du ticket : ${error.message}`);\n    }\n  }, [isSuccess, error]);\n\n  // Fonction pour vérifier les actions sur X (inchangée)\n  const verifyXAction = async actionType => {\n    const X_API_TOKEN = 'YOUR_X_API_TOKEN';\n    try {\n      console.log(`Vérification de l'action ${actionType} sur X...`);\n      return true; // Simulation\n    } catch (error) {\n      console.error(`Erreur lors de la vérification de l'action ${actionType} sur X:`, error);\n      return false;\n    }\n  };\n\n  // Fonction pour vérifier un vote sur Abstract (inchangée)\n  const verifyAbstractVote = async () => {\n    console.log('Vérification du vote sur Abstract...');\n    return true; // Simulation\n  };\n\n  // Compléter une mission et attribuer des tickets (inchangée)\n  const completeMission = async action => {\n    let ticketsToAdd = 0;\n    let missionCompleted = false;\n    if (action === 'xLike') {\n      if (missionsStatus.xLike) {\n        alert('Mission déjà complétée : Like sur X.');\n        return;\n      }\n      missionCompleted = await verifyXAction('like');\n      ticketsToAdd = 1;\n    } else if (action === 'xRetweet') {\n      if (missionsStatus.xRetweet) {\n        alert('Mission déjà complétée : Retweet sur X.');\n        return;\n      }\n      missionCompleted = await verifyXAction('retweet');\n      ticketsToAdd = 2;\n    } else if (action === 'xFollow') {\n      if (missionsStatus.xFollow) {\n        alert('Mission déjà complétée : Follow sur X.');\n        return;\n      }\n      missionCompleted = await verifyXAction('follow');\n      ticketsToAdd = 2;\n    } else if (action === 'abstractVote') {\n      if (missionsStatus.abstractVote) {\n        alert('Mission déjà complétée : Vote sur Abstract.');\n        return;\n      }\n      missionCompleted = await verifyAbstractVote();\n      ticketsToAdd = 1;\n    }\n    if (missionCompleted) {\n      setTickets(prev => prev + ticketsToAdd);\n      setTotalTickets(prev => prev + ticketsToAdd);\n      setMissionsStatus(prev => ({\n        ...prev,\n        [action]: true\n      }));\n      alert(`Mission complétée : ${action} ! +${ticketsToAdd} ticket(s)`);\n    } else {\n      alert(`Échec de la vérification pour la mission : ${action}. Veuillez réessayer.`);\n    }\n  };\n\n  // Rejoindre la loterie (inchangée)\n  const joinLottery = ticketCount => {\n    if (ticketCount > tickets) {\n      alert(\"Vous n'avez pas assez de tickets !\");\n      return;\n    }\n    if (ticketCount <= 0) {\n      alert(\"Veuillez entrer un nombre de tickets supérieur à 0.\");\n      return;\n    }\n    const updatedParticipants = [...participants, {\n      user: account || 'Utilisateur',\n      tickets: ticketCount\n    }];\n    setParticipants(updatedParticipants);\n    setTickets(prev => prev - ticketCount);\n    setUserTicketsInLottery(prev => prev + ticketCount);\n    alert(`Vous avez rejoint la loterie avec ${ticketCount} tickets !`);\n  };\n\n  // Tirer la loterie (inchangée)\n  const drawLottery = () => {\n    const totalLotteryTickets = participants.reduce((sum, p) => sum + p.tickets, 0);\n    if (totalLotteryTickets === 0) {\n      alert(\"Aucun participant dans la loterie !\");\n      return;\n    }\n    const randomTicket = Math.floor(Math.random() * totalLotteryTickets);\n    let cumulativeTickets = 0;\n    let winner = null;\n    for (const participant of participants) {\n      cumulativeTickets += participant.tickets;\n      if (randomTicket < cumulativeTickets) {\n        winner = participant;\n        break;\n      }\n    }\n    if (winner) {\n      alert(`${winner.user} a gagné un paquet de café Making Coffee avec ${winner.tickets} tickets !`);\n    }\n    setParticipants([]);\n    setTotalTickets(0);\n    setUserTicketsInLottery(0);\n    setLastLotteryDate(new Date().toISOString());\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4 text-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold mb-4 text-white\",\n      children: \"Missions et Loterie\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-bold mb-2 text-white\",\n        children: \"Missions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-6 rounded-lg shadow-md\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-lg mb-4\",\n          children: [\"Nombre de tickets : \", tickets]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-lg mb-4\",\n          children: [\"Solde ETH : \", (parseInt(grindBalance) / 1e18).toFixed(4), \" ETH\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-lg mb-4\",\n          children: [\"Total des tickets (tous les joueurs) : \", totalTickets]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => completeMission('xLike'),\n            className: \"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600\",\n            children: \"Like sur X (+1 ticket)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => completeMission('xRetweet'),\n            className: \"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600\",\n            children: \"Retweet sur X (+2 tickets)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => completeMission('xFollow'),\n            className: \"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600\",\n            children: \"Follow sur X (+2 tickets)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => completeMission('abstractVote'),\n            className: \"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600\",\n            children: \"Voter sur Abstract (+1 ticket)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: buyTicketWithETH,\n            disabled: isLoading,\n            className: \"bg-green-500 text-white px-4 py-2 rounded hover:bg-green-600\",\n            children: isLoading ? 'Achat en cours...' : 'Acheter un ticket avec 0.01 ETH'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-bold mb-2 text-white\",\n        children: \"Loterie\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-6 rounded-lg shadow-md\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-lg mb-4\",\n          children: \"La loterie se d\\xE9clenche automatiquement tous les 1000 tickets. Vous pouvez forcer le tirage avec le bouton ci-dessous. Tous les 1000 tickets, un paquet de caf\\xE9 Making Coffee est mis en jeu !\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-lg mb-4\",\n          children: [\"Vos tickets dans la loterie : \", userTicketsInLottery]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-lg mb-4\",\n          children: [\"Participants actuels : \", participants.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block mb-1\",\n              children: \"Nombre de tickets \\xE0 utiliser :\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              min: \"1\",\n              max: tickets,\n              onChange: e => setUserTicketsInLottery(parseInt(e.target.value) || 0),\n              className: \"border p-2 rounded w-32\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => joinLottery(userTicketsInLottery),\n              className: \"ml-2 bg-purple-500 text-white px-4 py-2 rounded hover:bg-purple-600\",\n              children: \"Participer \\xE0 la loterie\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: drawLottery,\n            className: \"bg-red-500 text-white px-4 py-2 rounded hover:bg-red-600\",\n            children: \"Forcer le tirage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 191,\n    columnNumber: 5\n  }, this);\n}\n_s(Missions, \"vQGX6IPLvFf2LC53EY7p/2LFeVQ=\", false, function () {\n  return [useSendTransaction];\n});\n_c = Missions;\nexport default Missions;\nvar _c;\n$RefreshReg$(_c, \"Missions\");","map":{"version":3,"names":["React","useState","useEffect","useContext","GrindContext","useSendTransaction","parseEther","jsxDEV","_jsxDEV","Missions","_s","grindBalance","account","tickets","setTickets","parseInt","localStorage","getItem","totalTickets","setTotalTickets","participants","setParticipants","savedParticipants","JSON","parse","userTicketsInLottery","setUserTicketsInLottery","lastLotteryDate","setLastLotteryDate","missionsStatus","setMissionsStatus","xLike","xRetweet","xFollow","abstractVote","sendTransaction","isLoading","isSuccess","error","LOTTERY_ADDRESS","setItem","toString","stringify","Date","getTime","drawLottery","buyTicketWithETH","ticketPriceETH","alert","to","value","prev","message","verifyXAction","actionType","X_API_TOKEN","console","log","verifyAbstractVote","completeMission","action","ticketsToAdd","missionCompleted","joinLottery","ticketCount","updatedParticipants","user","totalLotteryTickets","reduce","sum","p","randomTicket","Math","floor","random","cumulativeTickets","winner","participant","toISOString","className","children","fileName","_jsxFileName","lineNumber","columnNumber","toFixed","onClick","disabled","length","type","min","max","onChange","e","target","_c","$RefreshReg$"],"sources":["C:/Users/Adrien/Desktop/CryptoGrind - Copie/client/src/pages/Missions.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport { GrindContext } from '../App';\r\nimport { useSendTransaction } from 'wagmi';\r\nimport { parseEther } from 'viem';\r\n\r\nfunction Missions() {\r\n  const { grindBalance, account } = useContext(GrindContext);\r\n\r\n  // État pour les tickets de l'utilisateur, le total des tickets et les participants\r\n  const [tickets, setTickets] = useState(() => parseInt(localStorage.getItem('userTickets')) || 0);\r\n  const [totalTickets, setTotalTickets] = useState(() => parseInt(localStorage.getItem('totalTickets')) || 0);\r\n  const [participants, setParticipants] = useState(() => {\r\n    const savedParticipants = localStorage.getItem('lotteryParticipants');\r\n    return savedParticipants ? JSON.parse(savedParticipants) : [];\r\n  });\r\n  const [userTicketsInLottery, setUserTicketsInLottery] = useState(0);\r\n  const [lastLotteryDate, setLastLotteryDate] = useState(() => localStorage.getItem('lastLotteryDate') || null);\r\n  const [missionsStatus, setMissionsStatus] = useState({\r\n    xLike: false,\r\n    xRetweet: false,\r\n    xFollow: false,\r\n    abstractVote: false,\r\n  });\r\n\r\n  // Paiement en ETH\r\n  const { sendTransaction, isLoading, isSuccess, error } = useSendTransaction();\r\n\r\n  // Adresse pour recevoir les ETH (ton portefeuille ou contrat de loterie)\r\n  const LOTTERY_ADDRESS = '0xYOUR_LOTTERY_ADDRESS'; // Remplace par ton adresse ou contrat\r\n\r\n  // Sauvegarde des données dans localStorage\r\n  useEffect(() => {\r\n    localStorage.setItem('userTickets', tickets.toString());\r\n    localStorage.setItem('totalTickets', totalTickets.toString());\r\n    localStorage.setItem('lotteryParticipants', JSON.stringify(participants));\r\n    localStorage.setItem('lastLotteryDate', lastLotteryDate || '');\r\n  }, [tickets, totalTickets, participants, lastLotteryDate]);\r\n\r\n  // Vérifier automatiquement la loterie tous les 1000 tickets\r\n  useEffect(() => {\r\n    if (totalTickets >= 1000) {\r\n      if (!lastLotteryDate || new Date(lastLotteryDate).getTime() < new Date().getTime() - 1000 * 60) {\r\n        drawLottery();\r\n      }\r\n    }\r\n  }, [totalTickets]);\r\n\r\n  // Achat de ticket avec ETH\r\n  const buyTicketWithETH = () => {\r\n    const ticketPriceETH = '0.01'; // 0.01 ETH par ticket (à confirmer)\r\n\r\n    if (!account) {\r\n      alert('Veuillez connecter votre wallet.');\r\n      return;\r\n    }\r\n    if (parseInt(grindBalance) < parseEther(ticketPriceETH)) {\r\n      alert(`Solde ETH insuffisant ! Vous avez besoin de ${ticketPriceETH} ETH pour acheter un ticket.`);\r\n      return;\r\n    }\r\n\r\n    sendTransaction({\r\n      to: LOTTERY_ADDRESS,\r\n      value: parseEther(ticketPriceETH),\r\n    });\r\n  };\r\n\r\n  // Mettre à jour les tickets après un achat réussi\r\n  useEffect(() => {\r\n    if (isSuccess) {\r\n      setTickets((prev) => prev + 1);\r\n      setTotalTickets((prev) => prev + 1);\r\n      alert(`Vous avez acheté un ticket pour la loterie avec 0.01 ETH !`);\r\n    }\r\n    if (error) {\r\n      alert(`Erreur lors de l'achat du ticket : ${error.message}`);\r\n    }\r\n  }, [isSuccess, error]);\r\n\r\n  // Fonction pour vérifier les actions sur X (inchangée)\r\n  const verifyXAction = async (actionType) => {\r\n    const X_API_TOKEN = 'YOUR_X_API_TOKEN';\r\n    try {\r\n      console.log(`Vérification de l'action ${actionType} sur X...`);\r\n      return true; // Simulation\r\n    } catch (error) {\r\n      console.error(`Erreur lors de la vérification de l'action ${actionType} sur X:`, error);\r\n      return false;\r\n    }\r\n  };\r\n\r\n  // Fonction pour vérifier un vote sur Abstract (inchangée)\r\n  const verifyAbstractVote = async () => {\r\n    console.log('Vérification du vote sur Abstract...');\r\n    return true; // Simulation\r\n  };\r\n\r\n  // Compléter une mission et attribuer des tickets (inchangée)\r\n  const completeMission = async (action) => {\r\n    let ticketsToAdd = 0;\r\n    let missionCompleted = false;\r\n\r\n    if (action === 'xLike') {\r\n      if (missionsStatus.xLike) {\r\n        alert('Mission déjà complétée : Like sur X.');\r\n        return;\r\n      }\r\n      missionCompleted = await verifyXAction('like');\r\n      ticketsToAdd = 1;\r\n    } else if (action === 'xRetweet') {\r\n      if (missionsStatus.xRetweet) {\r\n        alert('Mission déjà complétée : Retweet sur X.');\r\n        return;\r\n      }\r\n      missionCompleted = await verifyXAction('retweet');\r\n      ticketsToAdd = 2;\r\n    } else if (action === 'xFollow') {\r\n      if (missionsStatus.xFollow) {\r\n        alert('Mission déjà complétée : Follow sur X.');\r\n        return;\r\n      }\r\n      missionCompleted = await verifyXAction('follow');\r\n      ticketsToAdd = 2;\r\n    } else if (action === 'abstractVote') {\r\n      if (missionsStatus.abstractVote) {\r\n        alert('Mission déjà complétée : Vote sur Abstract.');\r\n        return;\r\n      }\r\n      missionCompleted = await verifyAbstractVote();\r\n      ticketsToAdd = 1;\r\n    }\r\n\r\n    if (missionCompleted) {\r\n      setTickets((prev) => prev + ticketsToAdd);\r\n      setTotalTickets((prev) => prev + ticketsToAdd);\r\n      setMissionsStatus((prev) => ({ ...prev, [action]: true }));\r\n      alert(`Mission complétée : ${action} ! +${ticketsToAdd} ticket(s)`);\r\n    } else {\r\n      alert(`Échec de la vérification pour la mission : ${action}. Veuillez réessayer.`);\r\n    }\r\n  };\r\n\r\n  // Rejoindre la loterie (inchangée)\r\n  const joinLottery = (ticketCount) => {\r\n    if (ticketCount > tickets) {\r\n      alert(\"Vous n'avez pas assez de tickets !\");\r\n      return;\r\n    }\r\n    if (ticketCount <= 0) {\r\n      alert(\"Veuillez entrer un nombre de tickets supérieur à 0.\");\r\n      return;\r\n    }\r\n\r\n    const updatedParticipants = [...participants, { user: account || 'Utilisateur', tickets: ticketCount }];\r\n    setParticipants(updatedParticipants);\r\n    setTickets((prev) => prev - ticketCount);\r\n    setUserTicketsInLottery((prev) => prev + ticketCount);\r\n    alert(`Vous avez rejoint la loterie avec ${ticketCount} tickets !`);\r\n  };\r\n\r\n  // Tirer la loterie (inchangée)\r\n  const drawLottery = () => {\r\n    const totalLotteryTickets = participants.reduce((sum, p) => sum + p.tickets, 0);\r\n    if (totalLotteryTickets === 0) {\r\n      alert(\"Aucun participant dans la loterie !\");\r\n      return;\r\n    }\r\n\r\n    const randomTicket = Math.floor(Math.random() * totalLotteryTickets);\r\n    let cumulativeTickets = 0;\r\n    let winner = null;\r\n\r\n    for (const participant of participants) {\r\n      cumulativeTickets += participant.tickets;\r\n      if (randomTicket < cumulativeTickets) {\r\n        winner = participant;\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (winner) {\r\n      alert(`${winner.user} a gagné un paquet de café Making Coffee avec ${winner.tickets} tickets !`);\r\n    }\r\n\r\n    setParticipants([]);\r\n    setTotalTickets(0);\r\n    setUserTicketsInLottery(0);\r\n    setLastLotteryDate(new Date().toISOString());\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-4 text-center\">\r\n      <h1 className=\"text-2xl font-bold mb-4 text-white\">Missions et Loterie</h1>\r\n\r\n      {/* Section Missions */}\r\n      <div className=\"mb-8\">\r\n        <h2 className=\"text-xl font-bold mb-2 text-white\">Missions</h2>\r\n        <div className=\"bg-white p-6 rounded-lg shadow-md\">\r\n          <p className=\"text-lg mb-4\">Nombre de tickets : {tickets}</p>\r\n          <p className=\"text-lg mb-4\">Solde ETH : {(parseInt(grindBalance) / 1e18).toFixed(4)} ETH</p>\r\n          <p className=\"text-lg mb-4\">Total des tickets (tous les joueurs) : {totalTickets}</p>\r\n          <div className=\"space-y-4\">\r\n            <button\r\n              onClick={() => completeMission('xLike')}\r\n              className=\"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600\"\r\n            >\r\n              Like sur X (+1 ticket)\r\n            </button>\r\n            <button\r\n              onClick={() => completeMission('xRetweet')}\r\n              className=\"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600\"\r\n            >\r\n              Retweet sur X (+2 tickets)\r\n            </button>\r\n            <button\r\n              onClick={() => completeMission('xFollow')}\r\n              className=\"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600\"\r\n            >\r\n              Follow sur X (+2 tickets)\r\n            </button>\r\n            <button\r\n              onClick={() => completeMission('abstractVote')}\r\n              className=\"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600\"\r\n            >\r\n              Voter sur Abstract (+1 ticket)\r\n            </button>\r\n            <button\r\n              onClick={buyTicketWithETH}\r\n              disabled={isLoading}\r\n              className=\"bg-green-500 text-white px-4 py-2 rounded hover:bg-green-600\"\r\n            >\r\n              {isLoading ? 'Achat en cours...' : 'Acheter un ticket avec 0.01 ETH'}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Section Loterie */}\r\n      <div>\r\n        <h2 className=\"text-xl font-bold mb-2 text-white\">Loterie</h2>\r\n        <div className=\"bg-white p-6 rounded-lg shadow-md\">\r\n          <p className=\"text-lg mb-4\">\r\n            La loterie se déclenche automatiquement tous les 1000 tickets. Vous pouvez forcer le tirage avec le bouton ci-dessous.\r\n            Tous les 1000 tickets, un paquet de café Making Coffee est mis en jeu !\r\n          </p>\r\n          <p className=\"text-lg mb-4\">Vos tickets dans la loterie : {userTicketsInLottery}</p>\r\n          <p className=\"text-lg mb-4\">Participants actuels : {participants.length}</p>\r\n          <div className=\"space-y-4\">\r\n            <div>\r\n              <label className=\"block mb-1\">Nombre de tickets à utiliser :</label>\r\n              <input\r\n                type=\"number\"\r\n                min=\"1\"\r\n                max={tickets}\r\n                onChange={(e) => setUserTicketsInLottery(parseInt(e.target.value) || 0)}\r\n                className=\"border p-2 rounded w-32\"\r\n              />\r\n              <button\r\n                onClick={() => joinLottery(userTicketsInLottery)}\r\n                className=\"ml-2 bg-purple-500 text-white px-4 py-2 rounded hover:bg-purple-600\"\r\n              >\r\n                Participer à la loterie\r\n              </button>\r\n            </div>\r\n            <button\r\n              onClick={drawLottery}\r\n              className=\"bg-red-500 text-white px-4 py-2 rounded hover:bg-red-600\"\r\n            >\r\n              Forcer le tirage\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Missions;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}