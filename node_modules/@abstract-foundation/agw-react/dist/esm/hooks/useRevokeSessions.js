import { sessionKeyValidatorAddress } from '@abstract-foundation/agw-client/constants';
import { getSessionHash, SessionKeyValidatorAbi, } from '@abstract-foundation/agw-client/sessions';
import { useWriteContract } from 'wagmi';
export const useRevokeSessions = () => {
    const { writeContract, writeContractAsync, ...writeContractRest } = useWriteContract();
    const getSessionHashes = (sessions) => {
        return typeof sessions === 'string'
            ? [sessions]
            : Array.isArray(sessions)
                ? sessions.map((session) => typeof session === 'string' ? session : getSessionHash(session))
                : [getSessionHash(sessions)];
    };
    return {
        revokeSessions: (params) => {
            const { sessions, ...rest } = params;
            const sessionHashes = getSessionHashes(sessions);
            writeContract({
                address: sessionKeyValidatorAddress,
                abi: SessionKeyValidatorAbi,
                functionName: 'revokeKeys',
                args: [sessionHashes],
                ...rest,
            });
        },
        revokeSessionsAsync: async (params) => {
            const { sessions, ...rest } = params;
            const sessionHashes = getSessionHashes(sessions);
            await writeContractAsync({
                address: sessionKeyValidatorAddress,
                abi: SessionKeyValidatorAbi,
                functionName: 'revokeKeys',
                args: [sessionHashes],
                ...rest,
            });
        },
        ...writeContractRest,
    };
};
//# sourceMappingURL=useRevokeSessions.js.map