import { createClient, createPublicClient, createWalletClient, custom, http, } from 'viem';
import { toAccount } from 'viem/accounts';
import { sessionWalletActions, } from './walletActions.js';
export function toSessionClient({ client, signer, session, paymasterHandler, }) {
    return createSessionClient({
        account: client.account,
        chain: client.chain,
        session,
        signer,
        transport: custom(client.transport),
        paymasterHandler,
    });
}
export function createSessionClient({ account, signer, chain, transport, session, paymasterHandler, }) {
    if (!transport) {
        transport = http();
    }
    const publicClient = createPublicClient({
        transport,
        chain,
    });
    const baseClient = createClient({
        account: typeof account === 'string' ? toAccount(account) : account,
        chain: chain,
        transport,
    });
    const signerWalletClient = createWalletClient({
        account: signer,
        chain: chain,
        transport,
    });
    const sessionClient = baseClient.extend(sessionWalletActions(signerWalletClient, publicClient, session, paymasterHandler));
    return sessionClient;
}
//# sourceMappingURL=sessionClient.js.map