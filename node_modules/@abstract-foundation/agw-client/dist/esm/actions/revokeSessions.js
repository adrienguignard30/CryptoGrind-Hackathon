import {} from 'viem';
import { writeContract } from 'viem/actions';
import { getAction } from 'viem/utils';
import { SessionKeyValidatorAbi } from '../abis/SessionKeyValidator.js';
import { SESSION_KEY_VALIDATOR_ADDRESS } from '../constants.js';
import { getSessionHash } from '../sessions.js';
export async function revokeSessions(client, args) {
    const { session, ...rest } = args;
    const sessionHashes = typeof session === 'string'
        ? [session]
        : Array.isArray(session)
            ? session.map(sessionHash)
            : [getSessionHash(session)];
    const transactionHash = await getAction(client, writeContract, 'writeContract')({
        address: SESSION_KEY_VALIDATOR_ADDRESS,
        abi: SessionKeyValidatorAbi,
        functionName: 'revokeKeys',
        args: [sessionHashes],
        ...rest,
    });
    return { transactionHash };
}
function sessionHash(session) {
    if (typeof session === 'string') {
        return session;
    }
    return getSessionHash(session);
}
//# sourceMappingURL=revokeSessions.js.map