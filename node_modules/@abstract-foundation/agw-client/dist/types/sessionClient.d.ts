import { type Account, type Address, type Client, type Transport } from 'viem';
import type { ChainEIP712 } from 'viem/chains';
import type { AbstractClient } from './abstractClient.js';
import type { SessionConfig } from './sessions.js';
import type { CustomPaymasterHandler } from './types/customPaymaster.js';
import { type SessionClientActions } from './walletActions.js';
interface CreateSessionClientParameters {
    account: Account | Address;
    chain: ChainEIP712;
    signer: Account;
    session: SessionConfig;
    transport?: Transport;
    paymasterHandler?: CustomPaymasterHandler;
}
export type SessionClient = Client<Transport, ChainEIP712, Account> & SessionClientActions;
export interface ToSessionClientParams {
    client: AbstractClient;
    signer: Account;
    session: SessionConfig;
    paymasterHandler?: CustomPaymasterHandler;
}
export declare function toSessionClient({ client, signer, session, paymasterHandler, }: ToSessionClientParams): SessionClient;
export declare function createSessionClient({ account, signer, chain, transport, session, paymasterHandler, }: CreateSessionClientParameters): SessionClient;
export {};
//# sourceMappingURL=sessionClient.d.ts.map