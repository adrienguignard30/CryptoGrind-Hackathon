import { type Account, type Client, type Hex, type PublicClient, type Transport, type TypedData, type TypedDataDefinition, type WalletClient } from 'viem';
import { type SignTypedDataParameters } from 'viem/accounts';
import type { ChainEIP712 } from 'viem/chains';
import { type SessionConfig } from '../sessions.js';
import type { CustomPaymasterHandler } from '../types/customPaymaster.js';
export declare function signTypedData(client: Client<Transport, ChainEIP712, Account>, signerClient: WalletClient<Transport, ChainEIP712, Account>, publicClient: PublicClient<Transport, ChainEIP712>, parameters: Omit<SignTypedDataParameters, 'account' | 'privateKey'>, isPrivyCrossApp?: boolean): Promise<Hex>;
export declare function signTypedDataForSession<const typedData extends TypedData | Record<string, unknown>, primaryType extends string>(client: Client<Transport, ChainEIP712, Account>, signerClient: WalletClient<Transport, ChainEIP712, Account>, publicClient: PublicClient<Transport, ChainEIP712>, parameters: TypedDataDefinition<typedData, primaryType>, session: SessionConfig, paymasterHandler?: CustomPaymasterHandler): Promise<Hex>;
//# sourceMappingURL=signTypedData.d.ts.map