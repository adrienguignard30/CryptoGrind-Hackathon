import { type Account, type Address, type Client, type Hex, type PublicClient, type SendTransactionRequest, type Transport, type WalletClient } from 'viem';
import { type ChainEIP712, type SendEip712TransactionParameters, type SendEip712TransactionReturnType } from 'viem/zksync';
import type { CustomPaymasterHandler } from '../types/customPaymaster.js';
export declare function sendTransactionInternal<const request extends SendTransactionRequest<chain, chainOverride>, chain extends ChainEIP712 | undefined = ChainEIP712 | undefined, account extends Account | undefined = Account | undefined, chainOverride extends ChainEIP712 | undefined = ChainEIP712 | undefined>(client: Client<Transport, ChainEIP712, Account>, signerClient: WalletClient<Transport, ChainEIP712, Account>, publicClient: PublicClient<Transport, ChainEIP712>, parameters: SendEip712TransactionParameters<chain, account, chainOverride, request>, validator: Address, validationHookData?: Record<string, Hex>, customPaymasterHandler?: CustomPaymasterHandler | undefined): Promise<SendEip712TransactionReturnType>;
//# sourceMappingURL=sendTransactionInternal.d.ts.map