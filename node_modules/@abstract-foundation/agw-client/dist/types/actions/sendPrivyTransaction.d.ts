import { type Account, type Client, type Hex, type SendTransactionRequest, type SignMessageParameters, type SignTypedDataParameters, type Transport } from 'viem';
import { type ChainEIP712, type SendEip712TransactionParameters, type SignEip712TransactionParameters, type SignEip712TransactionReturnType } from 'viem/zksync';
import type { SendTransactionBatchParameters } from '../types/sendTransactionBatch.js';
export declare function sendPrivyTransaction<chain extends ChainEIP712 | undefined = ChainEIP712 | undefined, account extends Account | undefined = Account | undefined, chainOverride extends ChainEIP712 | undefined = ChainEIP712 | undefined, const request extends SendTransactionRequest<chain, chainOverride> = SendTransactionRequest<chain, chainOverride>>(client: Client<Transport, ChainEIP712, Account>, parameters: SendEip712TransactionParameters<chain, account, chainOverride, request> | SendTransactionBatchParameters<request>): Promise<SignEip712TransactionReturnType>;
export declare function sendPrivySignMessage(client: Client<Transport, ChainEIP712, Account>, parameters: Omit<SignMessageParameters, 'account'>): Promise<Hex>;
export declare function sendPrivySignTypedData(client: Client<Transport, ChainEIP712, Account>, parameters: Omit<SignTypedDataParameters, 'account' | 'privateKey'>): Promise<Hex>;
export declare function signPrivyTransaction<chain extends ChainEIP712 | undefined = ChainEIP712 | undefined, account extends Account | undefined = Account | undefined, chainOverride extends ChainEIP712 | undefined = ChainEIP712 | undefined>(client: Client<Transport, ChainEIP712, Account>, parameters: SignEip712TransactionParameters<chain, account, chainOverride>): Promise<SignEip712TransactionReturnType>;
//# sourceMappingURL=sendPrivyTransaction.d.ts.map